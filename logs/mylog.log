2020-03-30 15:05:25,179 -- [test_register.py-->line:60] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型不通过
2020-03-30 15:05:25,179 -- [test_register.py-->line:61] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 51, in test_register
    self.assertEqual(res["code"],excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-03-30 15:07:03,644 -- [test_register.py-->line:60] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型不通过
2020-03-30 15:07:03,644 -- [test_register.py-->line:61] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 51, in test_register
    self.assertEqual(res["code"],excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-03-30 15:09:57,107 -- [test_register.py-->line:60] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型不通过
2020-03-30 15:09:57,107 -- [test_register.py-->line:61] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 51, in test_register
    self.assertEqual(res["code"],excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-03-30 15:10:33,801 -- [test_register.py-->line:60] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型不通过
2020-03-30 15:10:33,801 -- [test_register.py-->line:61] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 51, in test_register
    self.assertEqual(res["code"],excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-03-30 15:11:59,163 -- [test_register.py-->line:60] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型不通过
2020-03-30 15:11:59,163 -- [test_register.py-->line:61] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 51, in test_register
    self.assertEqual(res["code"],excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-03-30 15:13:00,058 -- [test_register.py-->line:60] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型不通过
2020-03-30 15:13:00,058 -- [test_register.py-->line:61] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 51, in test_register
    self.assertEqual(res["code"],excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-03-30 15:14:48,451 -- [test_register.py-->line:62] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型不通过
2020-03-30 15:14:48,451 -- [test_register.py-->line:63] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 57, in test_register
    self.assertEqual(res["code"],excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-03-30 15:17:09,935 -- [test_register.py-->line:61] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型不通过
2020-03-30 15:17:09,935 -- [test_register.py-->line:62] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 52, in test_register
    self.assertEqual(res["code"],excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-03-31 11:06:33,640 -- [test_recharge.py-->line:85] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-03-31 11:06:33,665 -- [test_recharge.py-->line:88] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\扩展学习\test_recharge.py", line 77, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-03-31 11:06:33,811 -- [test_recharge.py-->line:85] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-03-31 11:06:33,811 -- [test_recharge.py-->line:88] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\扩展学习\test_recharge.py", line 76, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-31 11:06:33,932 -- [test_recharge.py-->line:85] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-03-31 11:06:33,932 -- [test_recharge.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\扩展学习\test_recharge.py", line 77, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-31 11:06:34,326 -- [test_recharge.py-->line:85] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-03-31 11:06:34,327 -- [test_recharge.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\扩展学习\test_recharge.py", line 77, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-31 11:06:34,461 -- [test_recharge.py-->line:85] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-03-31 11:06:34,461 -- [test_recharge.py-->line:88] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\扩展学习\test_recharge.py", line 77, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-31 11:06:34,592 -- [test_recharge.py-->line:85] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-03-31 11:06:34,592 -- [test_recharge.py-->line:88] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\扩展学习\test_recharge.py", line 76, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-03-31 11:15:31,636 -- [test_recharge.py-->line:81] - ERROR: 用例3，正确的会员id，金额带有3位小数不通过
2020-03-31 11:15:31,636 -- [test_recharge.py-->line:82] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-03-31 11:15:31,777 -- [test_recharge.py-->line:81] - ERROR: 用例4，正确的会员id，金额为0不通过
2020-03-31 11:15:31,777 -- [test_recharge.py-->line:82] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-31 11:15:31,909 -- [test_recharge.py-->line:81] - ERROR: 用例5，正确的会员id，金额为-1不通过
2020-03-31 11:15:31,909 -- [test_recharge.py-->line:82] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-31 11:15:32,281 -- [test_recharge.py-->line:81] - ERROR: 用例7，正确的会员id，金额为500001不通过
2020-03-31 11:15:32,281 -- [test_recharge.py-->line:82] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-31 11:15:32,412 -- [test_recharge.py-->line:81] - ERROR: 用例8，正确的会员id，金额为600000不通过
2020-03-31 11:15:32,412 -- [test_recharge.py-->line:82] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-31 11:15:32,536 -- [test_recharge.py-->line:81] - ERROR: 用例9，正确的会员id，金额为空不通过
2020-03-31 11:15:32,537 -- [test_recharge.py-->line:82] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-03-31 13:55:34,835 -- [test_recharge.py-->line:81] - ERROR: 用例3，正确的会员id，金额带有3位小数不通过
2020-03-31 13:55:34,835 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-31 13:55:34,980 -- [test_recharge.py-->line:81] - ERROR: 用例4，正确的会员id，金额为0不通过
2020-03-31 13:55:34,980 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-31 13:55:35,108 -- [test_recharge.py-->line:81] - ERROR: 用例5，正确的会员id，金额为-1不通过
2020-03-31 13:55:35,108 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-31 13:55:56,313 -- [test_recharge.py-->line:81] - ERROR: 用例7，正确的会员id，金额为500001不通过
2020-03-31 13:55:56,313 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-31 13:55:56,445 -- [test_recharge.py-->line:81] - ERROR: 用例8，正确的会员id，金额为600000不通过
2020-03-31 13:55:56,445 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-31 13:55:56,574 -- [test_recharge.py-->line:81] - ERROR: 用例9，正确的会员id，金额为空不通过
2020-03-31 13:55:56,574 -- [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-31 13:55:59,452 -- [test_register.py-->line:61] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型不通过
2020-03-31 13:55:59,452 -- [test_register.py-->line:62] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 52, in test_register
    self.assertEqual(res["code"],excepted["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-03-31 13:57:20,365 -- [test_recharge.py-->line:81] - ERROR: 用例3，正确的会员id，金额带有3位小数不通过
2020-03-31 13:57:20,365 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-31 13:57:20,513 -- [test_recharge.py-->line:81] - ERROR: 用例4，正确的会员id，金额为0不通过
2020-03-31 13:57:20,514 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-31 13:57:20,666 -- [test_recharge.py-->line:81] - ERROR: 用例5，正确的会员id，金额为-1不通过
2020-03-31 13:57:20,666 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-31 13:57:21,109 -- [test_recharge.py-->line:81] - ERROR: 用例7，正确的会员id，金额为500001不通过
2020-03-31 13:57:21,109 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-31 13:57:21,250 -- [test_recharge.py-->line:81] - ERROR: 用例8，正确的会员id，金额为600000不通过
2020-03-31 13:57:21,250 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-31 13:57:21,402 -- [test_recharge.py-->line:81] - ERROR: 用例9，正确的会员id，金额为空不通过
2020-03-31 13:57:21,403 -- [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-31 13:57:24,488 -- [test_register.py-->line:61] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型不通过
2020-03-31 13:57:24,489 -- [test_register.py-->line:62] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 52, in test_register
    self.assertEqual(res["code"],excepted["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-03-31 14:00:50,420 -- [test_withdraw.py-->line:84] - ERROR: 用例1，正确的会员id，金额为整数不通过
2020-03-31 14:00:50,420 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 0
2020-03-31 14:00:50,669 -- [test_withdraw.py-->line:84] - ERROR: 用例2，正确的会员id，金额带有2位小数不通过
2020-03-31 14:00:50,669 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 0
2020-03-31 14:00:50,804 -- [test_withdraw.py-->line:84] - ERROR: 用例3，正确的会员id，金额带有3位小数不通过
2020-03-31 14:00:50,804 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 2
2020-03-31 14:00:51,177 -- [test_withdraw.py-->line:84] - ERROR: 用例4，正确的会员id，金额为0不通过
2020-03-31 14:00:51,177 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 2
2020-03-31 14:00:51,310 -- [test_withdraw.py-->line:84] - ERROR: 用例5，正确的会员id，金额为-1不通过
2020-03-31 14:00:51,310 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 2
2020-03-31 14:00:51,543 -- [test_withdraw.py-->line:84] - ERROR: 用例6，正确的会员id，剩金金额大于50万，提现金额金额为500000不通过
2020-03-31 14:00:51,544 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 0
2020-03-31 14:00:51,677 -- [test_withdraw.py-->line:84] - ERROR: 用例7，正确的会员id，剩金金额大于60万，金额为600000不通过
2020-03-31 14:00:51,677 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 2
2020-03-31 14:00:51,805 -- [test_withdraw.py-->line:84] - ERROR: 用例8，正确的会员id，金额为空不通过
2020-03-31 14:00:51,805 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 1
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 1
2020-03-31 14:00:51,935 -- [test_withdraw.py-->line:84] - ERROR: 用例9，正确的会员id，金额为非数字不通过
2020-03-31 14:00:51,935 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 2
2020-03-31 14:00:52,063 -- [test_withdraw.py-->line:84] - ERROR: 用例11，会员id为空，金额为整数不通过
2020-03-31 14:00:52,063 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 1
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 1
2020-03-31 14:00:52,198 -- [test_withdraw.py-->line:84] - ERROR: 用例12，会员id为字符串，金额为整数不通过
2020-03-31 14:00:52,199 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 2
2020-03-31 14:00:52,325 -- [test_withdraw.py-->line:84] - ERROR: 用例13，会员id为小数，金额为整数不通过
2020-03-31 14:00:52,325 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 2
2020-03-31 14:00:52,460 -- [test_withdraw.py-->line:84] - ERROR: 用例14，会员id不是当前登录的用户id不通过
2020-03-31 14:00:52,460 -- [test_withdraw.py-->line:85] - ERROR:  :: 1003 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1003 != 2
2020-03-31 14:02:55,857 -- [test_withdraw.py-->line:85] - ERROR: 用例3，正确的会员id，金额带有3位小数不通过
2020-03-31 14:02:55,858 -- [test_withdraw.py-->line:86] - ERROR:  :: 余额小数超过两位 != 金额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额小数超过两位 != 金额小数超过两位
2020-03-31 14:02:55,996 -- [test_withdraw.py-->line:85] - ERROR: 用例4，正确的会员id，金额为0不通过
2020-03-31 14:02:55,997 -- [test_withdraw.py-->line:86] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-03-31 14:02:56,132 -- [test_withdraw.py-->line:85] - ERROR: 用例5，正确的会员id，金额为-1不通过
2020-03-31 14:02:56,132 -- [test_withdraw.py-->line:86] - ERROR:  :: 余额必须大于0并且小于或者等于5000000 != 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于5000000 != 金额必须大于0并且小于或者等于500000
2020-03-31 14:02:56,526 -- [test_withdraw.py-->line:85] - ERROR: 用例7，正确的会员id，剩金金额大于60万，金额为600000不通过
2020-03-31 14:02:56,526 -- [test_withdraw.py-->line:86] - ERROR:  :: 余额必须大于0并且小于或者等于5000000 != 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于5000000 != 金额必须大于0并且小于或者等于500000
2020-03-31 14:02:56,662 -- [test_withdraw.py-->line:85] - ERROR: 用例8，正确的会员id，金额为空不通过
2020-03-31 14:02:56,663 -- [test_withdraw.py-->line:86] - ERROR:  :: 余额为空 != 金额为空
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额为空 != 金额为空
2020-03-31 14:02:57,354 -- [test_withdraw.py-->line:85] - ERROR: 用例14，会员id不是当前登录的用户id不通过
2020-03-31 14:02:57,354 -- [test_withdraw.py-->line:86] - ERROR:  :: 1007 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1007 != 2
2020-03-31 14:03:33,274 -- [test_withdraw.py-->line:85] - ERROR: 用例3，正确的会员id，金额带有3位小数不通过
2020-03-31 14:03:33,274 -- [test_withdraw.py-->line:86] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-03-31 14:03:33,425 -- [test_withdraw.py-->line:85] - ERROR: 用例4，正确的会员id，金额为0不通过
2020-03-31 14:03:33,425 -- [test_withdraw.py-->line:86] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-31 14:03:33,551 -- [test_withdraw.py-->line:85] - ERROR: 用例5，正确的会员id，金额为-1不通过
2020-03-31 14:03:33,551 -- [test_withdraw.py-->line:86] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-03-31 14:03:33,938 -- [test_withdraw.py-->line:85] - ERROR: 用例7，正确的会员id，剩金金额大于60万，金额为600000不通过
2020-03-31 14:03:33,938 -- [test_withdraw.py-->line:86] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-03-31 14:03:34,067 -- [test_withdraw.py-->line:85] - ERROR: 用例8，正确的会员id，金额为空不通过
2020-03-31 14:03:34,067 -- [test_withdraw.py-->line:86] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-03-31 14:03:34,715 -- [test_withdraw.py-->line:85] - ERROR: 用例14，会员id不是当前登录的用户id不通过
2020-03-31 14:03:34,715 -- [test_withdraw.py-->line:86] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-03-31 14:05:05,605 -- [test_withdraw.py-->line:85] - ERROR: 用例3，正确的会员id，金额带有3位小数不通过
2020-03-31 14:05:05,605 -- [test_withdraw.py-->line:86] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-03-31 14:05:05,938 -- [test_withdraw.py-->line:85] - ERROR: 用例4，正确的会员id，金额为0不通过
2020-03-31 14:05:05,939 -- [test_withdraw.py-->line:86] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-31 14:05:06,077 -- [test_withdraw.py-->line:85] - ERROR: 用例5，正确的会员id，金额为-1不通过
2020-03-31 14:05:06,077 -- [test_withdraw.py-->line:86] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-03-31 14:05:06,501 -- [test_withdraw.py-->line:85] - ERROR: 用例7，正确的会员id，剩金金额大于60万，金额为600000不通过
2020-03-31 14:05:06,501 -- [test_withdraw.py-->line:86] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-03-31 14:05:06,633 -- [test_withdraw.py-->line:85] - ERROR: 用例8，正确的会员id，金额为空不通过
2020-03-31 14:05:06,633 -- [test_withdraw.py-->line:86] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(res["msg"], excepted["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-03-31 14:05:07,268 -- [test_withdraw.py-->line:85] - ERROR: 用例14，会员id不是当前登录的用户id不通过
2020-03-31 14:05:07,269 -- [test_withdraw.py-->line:86] - ERROR: 1007 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(res["code"], excepted["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 2
2020-04-01 14:51:12,895 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 14:51:12,896 -- [test_recharge.py-->line:87] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-01 14:51:13,088 -- [test_recharge.py-->line:84] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 14:51:13,088 -- [test_recharge.py-->line:87] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 14:51:13,233 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 14:51:13,234 -- [test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-01 14:51:14,009 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-01 14:51:14,009 -- [test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-01 14:51:14,139 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-01 14:51:14,139 -- [test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-01 14:51:14,277 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-01 14:51:14,277 -- [test_recharge.py-->line:87] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-04-01 14:52:25,568 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 14:52:25,569 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-01 14:52:25,731 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 14:52:25,731 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 14:52:25,901 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 14:52:25,902 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-01 14:52:26,329 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-01 14:52:26,329 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-01 14:52:26,478 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-01 14:52:26,479 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-04-01 14:52:27,265 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-01 14:52:27,265 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 1007
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1007

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1007
2020-04-01 14:53:52,385 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 14:53:52,385 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-01 14:53:52,587 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 14:53:52,587 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 14:53:52,792 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 14:53:52,792 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-01 14:53:53,360 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-01 14:53:53,361 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-01 14:53:53,583 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-01 14:53:53,583 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-04-01 14:53:54,660 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-01 14:53:54,660 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 1007
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1007

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1007
2020-04-01 15:37:23,693 -- [test_add.py-->line:67] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 15:37:23,693 -- [test_add.py-->line:68] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 58, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:39:22,310 -- [test_add.py-->line:68] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 15:39:22,311 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:16,579 -- [test_add.py-->line:68] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 15:40:16,579 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:16,997 -- [test_add.py-->line:68] - ERROR: 用例5,加标主题为空，加标失败不通过
2020-04-01 15:40:16,997 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 1
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 1
2020-04-01 15:40:17,180 -- [test_add.py-->line:68] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-01 15:40:17,181 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:17,493 -- [test_add.py-->line:68] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-01 15:40:17,494 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:17,688 -- [test_add.py-->line:68] - ERROR: 用例10,借款金额为空，加标失败不通过
2020-04-01 15:40:17,688 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 1
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 1
2020-04-01 15:40:17,870 -- [test_add.py-->line:68] - ERROR: 用例11,借款金额为0，加标失败不通过
2020-04-01 15:40:17,870 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:18,071 -- [test_add.py-->line:68] - ERROR: 用例12,借款金额为-5，加标失败不通过
2020-04-01 15:40:18,071 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:18,285 -- [test_add.py-->line:68] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-01 15:40:18,285 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:18,704 -- [test_add.py-->line:68] - ERROR: 用例18,借款金额为60021212121212011.89，加标失败不通过
2020-04-01 15:40:18,705 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:18,889 -- [test_add.py-->line:68] - ERROR: 用例19,年利率为0，加标失败不通过
2020-04-01 15:40:18,889 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:19,084 -- [test_add.py-->line:68] - ERROR: 用例20,年利率为空，加标失败不通过
2020-04-01 15:40:19,084 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 1
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 1
2020-04-01 15:40:19,346 -- [test_add.py-->line:68] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-01 15:40:19,347 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:19,542 -- [test_add.py-->line:68] - ERROR: 用例22,年利率为-3，加标失败不通过
2020-04-01 15:40:19,542 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:19,900 -- [test_add.py-->line:68] - ERROR: 用例26,年利率为24.1，加标失败不通过
2020-04-01 15:40:19,900 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:20,103 -- [test_add.py-->line:68] - ERROR: 用例27,借款期限为空，加标失败不通过
2020-04-01 15:40:20,103 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 1
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 1
2020-04-01 15:40:20,294 -- [test_add.py-->line:68] - ERROR: 用例28,借款期限为0，借款类型为1，加标失败不通过
2020-04-01 15:40:20,294 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:20,495 -- [test_add.py-->line:68] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-01 15:40:20,495 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:20,697 -- [test_add.py-->line:68] - ERROR: 用例30,借款期限为负数，借款类型为1，加标失败不通过
2020-04-01 15:40:20,697 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:20,892 -- [test_add.py-->line:68] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-01 15:40:20,892 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:21,101 -- [test_add.py-->line:68] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-01 15:40:21,101 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:21,316 -- [test_add.py-->line:68] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-01 15:40:21,316 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:21,588 -- [test_add.py-->line:68] - ERROR: 用例35,借款期限类型为0，加标失败不通过
2020-04-01 15:40:21,589 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:21,796 -- [test_add.py-->line:68] - ERROR: 用例36,借款期限类型为空，加标失败不通过
2020-04-01 15:40:21,796 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 1
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 1
2020-04-01 15:40:22,061 -- [test_add.py-->line:68] - ERROR: 用例38,借款期限类型为负数，加标失败不通过
2020-04-01 15:40:22,062 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:22,256 -- [test_add.py-->line:68] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-01 15:40:22,256 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:22,498 -- [test_add.py-->line:68] - ERROR: 用例40,借款期限类型为3，加标失败不通过
2020-04-01 15:40:22,498 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:22,703 -- [test_add.py-->line:68] - ERROR: 用例41,竞标天数为空，加标失败不通过
2020-04-01 15:40:22,703 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 1
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 1
2020-04-01 15:40:22,906 -- [test_add.py-->line:68] - ERROR: 用例42,竞标天数为0，加标失败不通过
2020-04-01 15:40:22,906 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:23,180 -- [test_add.py-->line:68] - ERROR: 用例44,竞标天数为负数，加标失败不通过
2020-04-01 15:40:23,180 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:23,386 -- [test_add.py-->line:68] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-01 15:40:23,386 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:23,691 -- [test_add.py-->line:68] - ERROR: 用例48,竞标天数为11天，加标失败不通过
2020-04-01 15:40:23,691 -- [test_add.py-->line:69] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 15:40:47,544 -- [test_add.py-->line:68] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 15:40:47,544 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:47,937 -- [test_add.py-->line:68] - ERROR: 用例5,加标主题为空，加标失败不通过
2020-04-01 15:40:47,937 -- [test_add.py-->line:69] - ERROR: 1004 != 1
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1
2020-04-01 15:40:48,166 -- [test_add.py-->line:68] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-01 15:40:48,168 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:48,538 -- [test_add.py-->line:68] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-01 15:40:48,538 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:48,737 -- [test_add.py-->line:68] - ERROR: 用例10,借款金额为空，加标失败不通过
2020-04-01 15:40:48,737 -- [test_add.py-->line:69] - ERROR: 1004 != 1
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1
2020-04-01 15:40:48,957 -- [test_add.py-->line:68] - ERROR: 用例11,借款金额为0，加标失败不通过
2020-04-01 15:40:48,957 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:49,141 -- [test_add.py-->line:68] - ERROR: 用例12,借款金额为-5，加标失败不通过
2020-04-01 15:40:49,141 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:49,334 -- [test_add.py-->line:68] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-01 15:40:49,334 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:49,755 -- [test_add.py-->line:68] - ERROR: 用例18,借款金额为60021212121212011.89，加标失败不通过
2020-04-01 15:40:49,755 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:49,955 -- [test_add.py-->line:68] - ERROR: 用例19,年利率为0，加标失败不通过
2020-04-01 15:40:49,955 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:50,156 -- [test_add.py-->line:68] - ERROR: 用例20,年利率为空，加标失败不通过
2020-04-01 15:40:50,156 -- [test_add.py-->line:69] - ERROR: 1004 != 1
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1
2020-04-01 15:40:50,344 -- [test_add.py-->line:68] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-01 15:40:50,345 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:50,539 -- [test_add.py-->line:68] - ERROR: 用例22,年利率为-3，加标失败不通过
2020-04-01 15:40:50,539 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:50,912 -- [test_add.py-->line:68] - ERROR: 用例26,年利率为24.1，加标失败不通过
2020-04-01 15:40:50,912 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:51,115 -- [test_add.py-->line:68] - ERROR: 用例27,借款期限为空，加标失败不通过
2020-04-01 15:40:51,116 -- [test_add.py-->line:69] - ERROR: 1004 != 1
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1
2020-04-01 15:40:51,321 -- [test_add.py-->line:68] - ERROR: 用例28,借款期限为0，借款类型为1，加标失败不通过
2020-04-01 15:40:51,321 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:51,525 -- [test_add.py-->line:68] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-01 15:40:51,525 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:51,733 -- [test_add.py-->line:68] - ERROR: 用例30,借款期限为负数，借款类型为1，加标失败不通过
2020-04-01 15:40:51,733 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:51,939 -- [test_add.py-->line:68] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-01 15:40:51,940 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:52,149 -- [test_add.py-->line:68] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-01 15:40:52,149 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:52,344 -- [test_add.py-->line:68] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-01 15:40:52,344 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:52,538 -- [test_add.py-->line:68] - ERROR: 用例35,借款期限类型为0，加标失败不通过
2020-04-01 15:40:52,538 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:52,718 -- [test_add.py-->line:68] - ERROR: 用例36,借款期限类型为空，加标失败不通过
2020-04-01 15:40:52,719 -- [test_add.py-->line:69] - ERROR: 1004 != 1
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1
2020-04-01 15:40:53,064 -- [test_add.py-->line:68] - ERROR: 用例38,借款期限类型为负数，加标失败不通过
2020-04-01 15:40:53,064 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:53,254 -- [test_add.py-->line:68] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-01 15:40:53,254 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:53,443 -- [test_add.py-->line:68] - ERROR: 用例40,借款期限类型为3，加标失败不通过
2020-04-01 15:40:53,443 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:53,638 -- [test_add.py-->line:68] - ERROR: 用例41,竞标天数为空，加标失败不通过
2020-04-01 15:40:53,638 -- [test_add.py-->line:69] - ERROR: 1004 != 1
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1
2020-04-01 15:40:53,836 -- [test_add.py-->line:68] - ERROR: 用例42,竞标天数为0，加标失败不通过
2020-04-01 15:40:53,836 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:54,116 -- [test_add.py-->line:68] - ERROR: 用例44,竞标天数为负数，加标失败不通过
2020-04-01 15:40:54,117 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:54,340 -- [test_add.py-->line:68] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-01 15:40:54,340 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:54,673 -- [test_add.py-->line:68] - ERROR: 用例48,竞标天数为11天，加标失败不通过
2020-04-01 15:40:54,673 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:40:58,043 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 15:40:58,043 -- [test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 15:40:58,245 -- [test_recharge.py-->line:84] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 15:40:58,245 -- [test_recharge.py-->line:87] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 15:40:58,420 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 15:40:58,420 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:40:58,938 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-01 15:40:58,938 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:40:59,128 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-01 15:40:59,128 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:40:59,319 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-01 15:40:59,319 -- [test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 15:41:02,799 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-01 15:41:02,799 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-01 15:41:11,618 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 15:41:11,618 -- [test_withdraw.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 15:41:11,910 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 15:41:11,910 -- [test_withdraw.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 15:41:12,160 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 15:41:12,160 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 15:41:12,825 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-01 15:41:12,825 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 15:41:13,050 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-01 15:41:13,050 -- [test_withdraw.py-->line:92] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-01 15:41:34,940 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-01 15:41:34,940 -- [test_withdraw.py-->line:92] - ERROR: 2 != 1007
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1007
2020-04-01 15:46:30,245 -- [test_add.py-->line:68] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 15:46:30,245 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:46:34,085 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 15:46:34,085 -- [test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 15:46:34,290 -- [test_recharge.py-->line:84] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 15:46:34,290 -- [test_recharge.py-->line:87] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 15:46:34,493 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 15:46:34,493 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:46:35,041 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-01 15:46:35,041 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:46:35,251 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-01 15:46:35,251 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:46:35,447 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-01 15:46:35,447 -- [test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 15:46:39,060 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-01 15:46:39,060 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-01 15:46:46,990 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 15:46:46,991 -- [test_withdraw.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 15:46:47,197 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 15:46:47,197 -- [test_withdraw.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 15:46:47,389 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 15:46:47,389 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 15:46:47,924 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-01 15:46:47,924 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 15:46:48,150 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-01 15:46:48,150 -- [test_withdraw.py-->line:92] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-01 15:46:49,323 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-01 15:46:49,324 -- [test_withdraw.py-->line:92] - ERROR: 2 != 1007
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1007
2020-04-01 15:49:56,265 -- [test_add.py-->line:68] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 15:49:56,265 -- [test_add.py-->line:69] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 59, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:50:00,482 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 15:50:00,483 -- [test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 15:50:21,711 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 15:50:21,711 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:50:22,218 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-01 15:50:22,218 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:50:22,408 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-01 15:50:22,408 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:50:22,595 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-01 15:50:22,595 -- [test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 15:50:26,111 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-01 15:50:26,111 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-01 15:50:33,800 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 15:50:33,800 -- [test_withdraw.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 15:50:33,991 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 15:50:33,991 -- [test_withdraw.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 15:50:34,179 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 15:50:34,179 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 15:50:34,671 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-01 15:50:34,672 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 15:50:34,862 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-01 15:50:34,863 -- [test_withdraw.py-->line:92] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-01 15:50:35,843 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-01 15:50:35,844 -- [test_withdraw.py-->line:92] - ERROR: 2 != 1007
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1007
2020-04-01 15:57:27,102 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 15:57:27,103 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 15:57:30,777 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 15:57:30,777 -- [test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 15:57:33,990 -- [test_recharge.py-->line:84] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 15:57:33,990 -- [test_recharge.py-->line:87] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 15:57:34,187 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 15:57:34,187 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:57:34,704 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-01 15:57:34,704 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:57:34,893 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-01 15:57:34,893 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 15:57:35,087 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-01 15:57:35,087 -- [test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 15:57:59,077 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-01 15:57:59,078 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-01 15:58:06,336 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 15:58:06,337 -- [test_withdraw.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 15:58:06,521 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 15:58:06,521 -- [test_withdraw.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 15:58:06,722 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 15:58:06,723 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 15:58:07,230 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-01 15:58:07,230 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 15:58:07,411 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-01 15:58:07,411 -- [test_withdraw.py-->line:92] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-01 15:58:08,382 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-01 15:58:08,382 -- [test_withdraw.py-->line:92] - ERROR: 2 != 1007
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1007
2020-04-01 16:03:22,172 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 16:03:22,173 -- [test_add.py-->line:71] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 16:04:32,232 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 16:04:32,233 -- [test_add.py-->line:71] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 16:04:32,818 -- [test_add.py-->line:70] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-01 16:04:32,818 -- [test_add.py-->line:71] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-01 16:04:33,808 -- [test_add.py-->line:70] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-01 16:04:33,808 -- [test_add.py-->line:71] - ERROR:  :: 1005 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1005 != 2
2020-04-01 16:04:34,639 -- [test_add.py-->line:70] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-01 16:04:34,639 -- [test_add.py-->line:71] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 16:04:34,920 -- [test_add.py-->line:70] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-01 16:04:34,920 -- [test_add.py-->line:71] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 16:04:35,205 -- [test_add.py-->line:70] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-01 16:04:35,206 -- [test_add.py-->line:71] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 16:04:35,504 -- [test_add.py-->line:70] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-01 16:04:35,505 -- [test_add.py-->line:71] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 16:04:35,788 -- [test_add.py-->line:70] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-01 16:04:35,788 -- [test_add.py-->line:71] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 16:04:36,580 -- [test_add.py-->line:70] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-01 16:04:36,580 -- [test_add.py-->line:71] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 16:04:38,765 -- [test_add.py-->line:70] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-01 16:04:38,766 -- [test_add.py-->line:71] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 16:04:39,154 -- [test_add.py-->line:70] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-01 16:04:39,154 -- [test_add.py-->line:71] - ERROR:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
2020-04-01 16:04:39,364 -- [test_add.py-->line:70] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-01 16:04:39,364 -- [test_add.py-->line:71] - ERROR:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
2020-04-01 16:04:39,579 -- [test_add.py-->line:70] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-01 16:04:39,580 -- [test_add.py-->line:71] - ERROR:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
2020-04-01 16:04:40,708 -- [test_add.py-->line:70] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-01 16:04:40,708 -- [test_add.py-->line:71] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 16:04:42,651 -- [test_add.py-->line:70] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-01 16:04:42,651 -- [test_add.py-->line:71] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-01 17:29:10,013 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 17:29:10,014 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 17:29:10,563 -- [test_add.py-->line:70] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-01 17:29:10,564 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-01 17:29:11,534 -- [test_add.py-->line:70] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-01 17:29:11,534 -- [test_add.py-->line:71] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-01 17:29:12,273 -- [test_add.py-->line:70] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-01 17:29:12,274 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 17:29:12,577 -- [test_add.py-->line:70] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-01 17:29:12,577 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 17:29:12,873 -- [test_add.py-->line:70] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-01 17:29:12,873 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 17:29:13,173 -- [test_add.py-->line:70] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-01 17:29:13,174 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 17:29:13,932 -- [test_add.py-->line:70] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-01 17:29:13,932 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 17:29:14,667 -- [test_add.py-->line:70] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-01 17:29:14,667 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 17:29:16,819 -- [test_add.py-->line:70] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-01 17:29:16,819 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 17:29:17,205 -- [test_add.py-->line:70] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-01 17:29:17,205 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-01 17:29:17,383 -- [test_add.py-->line:70] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-01 17:29:17,383 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-01 17:29:17,577 -- [test_add.py-->line:70] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-01 17:29:17,577 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-01 17:29:18,756 -- [test_add.py-->line:70] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-01 17:29:18,756 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 17:29:20,566 -- [test_add.py-->line:70] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-01 17:29:20,566 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 17:29:25,548 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 17:29:25,548 -- [test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 17:29:25,730 -- [test_recharge.py-->line:84] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 17:29:25,731 -- [test_recharge.py-->line:87] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 17:29:25,902 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 17:29:25,903 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 17:29:26,406 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-01 17:29:26,407 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 17:29:26,608 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-01 17:29:26,608 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 17:29:26,778 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-01 17:29:26,778 -- [test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 17:29:30,142 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-01 17:29:30,142 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-01 17:29:59,769 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 17:29:59,769 -- [test_withdraw.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 17:29:59,963 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 17:29:59,963 -- [test_withdraw.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 17:30:00,150 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 17:30:00,150 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 17:30:00,862 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-01 17:30:00,862 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 17:30:01,042 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-01 17:30:01,042 -- [test_withdraw.py-->line:92] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-01 17:30:02,014 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-01 17:30:02,014 -- [test_withdraw.py-->line:92] - ERROR: 2 != 1007
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1007
2020-04-01 17:49:56,697 -- [test_audit.py-->line:95] - ERROR: 用例2,审核不通过不通过
2020-04-01 17:49:56,697 -- [test_audit.py-->line:96] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 86, in test_audit
    self.assertEqual(res["code"], expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-01 17:50:57,611 -- [test_audit.py-->line:97] - ERROR: 用例1,审核通过不通过
2020-04-01 17:50:57,611 -- [test_audit.py-->line:98] - ERROR: 2 != 1
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 94, in test_audit
    self.assertEqual(expected["status"],status)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2020-04-01 17:50:57,857 -- [test_audit.py-->line:97] - ERROR: 用例2,审核不通过不通过
2020-04-01 17:50:57,857 -- [test_audit.py-->line:98] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 88, in test_audit
    self.assertEqual(res["code"], expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-01 18:03:12,763 -- [test_audit.py-->line:97] - ERROR: 用例2,审核不通过不通过
2020-04-01 18:03:12,763 -- [test_audit.py-->line:98] - ERROR:  :: 1 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 88, in test_audit
    self.assertEqual(res["code"], expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2020-04-01 18:05:12,834 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 18:05:12,834 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 18:05:13,354 -- [test_add.py-->line:70] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-01 18:05:13,354 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-01 18:05:14,337 -- [test_add.py-->line:70] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-01 18:05:14,337 -- [test_add.py-->line:71] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-01 18:05:36,152 -- [test_add.py-->line:70] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-01 18:05:36,152 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:05:36,422 -- [test_add.py-->line:70] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-01 18:05:36,422 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:05:36,683 -- [test_add.py-->line:70] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-01 18:05:36,683 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:05:36,944 -- [test_add.py-->line:70] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-01 18:05:36,944 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:05:37,636 -- [test_add.py-->line:70] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-01 18:05:37,636 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 18:05:39,637 -- [test_add.py-->line:70] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-01 18:05:39,637 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 18:05:40,008 -- [test_add.py-->line:70] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-01 18:05:40,008 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-01 18:05:40,177 -- [test_add.py-->line:70] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-01 18:05:40,177 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-01 18:05:40,355 -- [test_add.py-->line:70] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-01 18:05:40,355 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-01 18:05:41,383 -- [test_add.py-->line:70] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-01 18:05:41,384 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 18:05:42,593 -- [test_add.py-->line:70] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-01 18:05:42,593 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 18:05:44,538 -- [test_audit.py-->line:97] - ERROR: 用例2,审核不通过不通过
2020-04-01 18:05:44,538 -- [test_audit.py-->line:98] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 88, in test_audit
    self.assertEqual(res["code"], expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-01 18:06:13,222 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 18:06:13,222 -- [test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 18:06:13,421 -- [test_recharge.py-->line:84] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 18:06:13,422 -- [test_recharge.py-->line:87] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:06:13,607 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 18:06:13,607 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 18:06:14,155 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-01 18:06:14,155 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 18:06:14,352 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-01 18:06:14,352 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 18:06:14,556 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-01 18:06:14,556 -- [test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 18:06:44,141 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 18:06:44,141 -- [test_withdraw.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 18:06:44,347 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 18:06:44,347 -- [test_withdraw.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:06:44,530 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 18:06:44,530 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 18:06:48,045 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-01 18:06:48,045 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 18:07:02,331 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-01 18:07:02,331 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 18:07:02,859 -- [test_add.py-->line:70] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-01 18:07:02,859 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-01 18:07:03,779 -- [test_add.py-->line:70] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-01 18:07:03,779 -- [test_add.py-->line:71] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-01 18:07:04,483 -- [test_add.py-->line:70] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-01 18:07:04,483 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 18:07:04,756 -- [test_add.py-->line:70] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-01 18:07:04,756 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:07:05,048 -- [test_add.py-->line:70] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-01 18:07:05,049 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:07:05,311 -- [test_add.py-->line:70] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-01 18:07:05,312 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:07:05,601 -- [test_add.py-->line:70] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-01 18:07:05,601 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:07:06,274 -- [test_add.py-->line:70] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-01 18:07:06,274 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 18:07:29,104 -- [test_add.py-->line:70] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-01 18:07:29,105 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 18:07:29,498 -- [test_add.py-->line:70] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-01 18:07:29,498 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-01 18:07:29,673 -- [test_add.py-->line:70] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-01 18:07:29,673 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-01 18:07:29,852 -- [test_add.py-->line:70] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-01 18:07:29,852 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-01 18:07:30,021 -- [test_add.py-->line:70] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-01 18:07:30,022 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-01 18:07:31,254 -- [test_add.py-->line:70] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-01 18:07:31,254 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 18:07:32,560 -- [test_add.py-->line:70] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-01 18:07:32,560 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-01 18:07:34,467 -- [test_audit.py-->line:97] - ERROR: 用例2,审核不通过不通过
2020-04-01 18:07:34,467 -- [test_audit.py-->line:98] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 88, in test_audit
    self.assertEqual(res["code"], expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-01 18:07:39,120 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 18:07:39,120 -- [test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 18:07:39,296 -- [test_recharge.py-->line:84] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 18:07:39,296 -- [test_recharge.py-->line:87] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:07:39,463 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 18:07:39,463 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 18:07:39,933 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-01 18:07:39,934 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 18:07:40,103 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-01 18:07:40,104 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 18:07:40,270 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-01 18:07:40,270 -- [test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 18:07:43,483 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-01 18:07:43,483 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-01 18:07:50,685 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-01 18:07:50,686 -- [test_withdraw.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 18:07:50,883 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-01 18:07:50,883 -- [test_withdraw.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 18:07:51,066 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-01 18:07:51,066 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 18:07:51,526 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-01 18:07:51,526 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-01 18:07:51,700 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-01 18:07:51,701 -- [test_withdraw.py-->line:92] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-01 18:07:52,692 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-01 18:07:52,692 -- [test_withdraw.py-->line:92] - ERROR: 2 != 1007
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1007
2020-04-02 14:22:55,978 -- [test_updata.py-->line:63] - ERROR: 用例3，用户id为字符串不通过
2020-04-02 14:22:55,991 -- [test_updata.py-->line:66] - ERROR:  :: 会员不存在 != 数值参数格式错误
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '会员不存在' != '数值参数格式错误'
- 会员不存在
+ 数值参数格式错误


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 56, in test_updata
    self.assertEqual(excepetd["msg"],res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 会员不存在 != 数值参数格式错误
2020-04-02 14:22:56,643 -- [test_updata.py-->line:63] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 14:22:56,644 -- [test_updata.py-->line:66] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 55, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 14:23:29,791 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-02 14:23:29,791 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-02 14:23:30,374 -- [test_add.py-->line:70] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-02 14:23:30,374 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 14:23:32,075 -- [test_add.py-->line:70] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-02 14:23:32,075 -- [test_add.py-->line:71] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-02 14:23:32,772 -- [test_add.py-->line:70] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-02 14:23:32,772 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-02 14:23:33,329 -- [test_add.py-->line:70] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-02 14:23:33,329 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-02 14:23:33,630 -- [test_add.py-->line:70] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-02 14:23:33,630 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-02 14:23:35,933 -- [test_add.py-->line:70] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-02 14:23:35,934 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-02 14:23:36,284 -- [test_add.py-->line:70] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-02 14:23:36,284 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-02 14:23:37,035 -- [test_add.py-->line:70] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-02 14:23:37,035 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-02 14:23:39,898 -- [test_add.py-->line:70] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-02 14:23:39,898 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-02 14:23:40,270 -- [test_add.py-->line:70] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-02 14:23:40,270 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 14:23:40,473 -- [test_add.py-->line:70] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-02 14:23:40,473 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-02 14:23:40,692 -- [test_add.py-->line:70] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-02 14:23:40,692 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-02 14:23:40,909 -- [test_add.py-->line:70] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-02 14:23:40,909 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-02 14:23:42,333 -- [test_add.py-->line:70] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-02 14:23:42,333 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-02 14:23:43,692 -- [test_add.py-->line:70] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-02 14:23:43,692 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-02 14:23:45,752 -- [test_audit.py-->line:97] - ERROR: 用例2,审核不通过不通过
2020-04-02 14:23:45,752 -- [test_audit.py-->line:98] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 88, in test_audit
    self.assertEqual(res["code"], expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-02 14:24:11,873 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-02 14:24:11,873 -- [test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-02 14:24:12,119 -- [test_recharge.py-->line:84] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-02 14:24:12,120 -- [test_recharge.py-->line:87] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-02 14:24:12,299 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-02 14:24:12,300 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-02 14:24:12,835 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-02 14:24:12,835 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-02 14:24:13,018 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-02 14:24:13,018 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-02 14:24:13,192 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-02 14:24:13,193 -- [test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-02 14:24:16,554 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-02 14:24:16,554 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-02 14:24:23,238 -- [test_updata.py-->line:63] - ERROR: 用例3，用户id为字符串不通过
2020-04-02 14:24:23,238 -- [test_updata.py-->line:66] - ERROR: '会员不存在' != '数值参数格式错误'
- 会员不存在
+ 数值参数格式错误
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 56, in test_updata
    self.assertEqual(excepetd["msg"],res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '会员不存在' != '数值参数格式错误'
- 会员不存在
+ 数值参数格式错误

2020-04-02 14:24:23,939 -- [test_updata.py-->line:63] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 14:24:23,940 -- [test_updata.py-->line:66] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 55, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 14:24:25,610 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-02 14:24:25,611 -- [test_withdraw.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-02 14:24:25,850 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-02 14:24:25,850 -- [test_withdraw.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-02 14:24:26,028 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-02 14:24:26,028 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-02 14:24:26,496 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-02 14:24:26,497 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-02 14:24:26,671 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-02 14:24:26,671 -- [test_withdraw.py-->line:92] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-02 14:24:27,550 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-02 14:24:27,551 -- [test_withdraw.py-->line:92] - ERROR: 2 != 1007
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1007
2020-04-02 14:25:01,496 -- [test_updata.py-->line:63] - ERROR: 用例3，用户id为字符串不通过
2020-04-02 14:25:01,497 -- [test_updata.py-->line:66] - ERROR: '会员不存在' != '数值参数格式错误'
- 会员不存在
+ 数值参数格式错误
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 56, in test_updata
    self.assertEqual(excepetd["msg"],res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '会员不存在' != '数值参数格式错误'
- 会员不存在
+ 数值参数格式错误

2020-04-02 14:25:02,162 -- [test_updata.py-->line:63] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 14:25:02,162 -- [test_updata.py-->line:66] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 55, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 14:29:13,034 -- [test_updata.py-->line:63] - ERROR: 用例5，昵称是数字不通过
2020-04-02 14:29:13,034 -- [test_updata.py-->line:66] - ERROR: 123 != '123'
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 60, in test_updata
    self.assertEqual(data["reg_name"],name)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 123 != '123'
2020-04-02 14:29:13,370 -- [test_updata.py-->line:63] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 14:29:13,370 -- [test_updata.py-->line:66] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 55, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 14:29:23,801 -- [test_updata.py-->line:63] - ERROR: 用例5，昵称是数字不通过
2020-04-02 14:29:23,802 -- [test_updata.py-->line:66] - ERROR: 123 != '123'
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 60, in test_updata
    self.assertEqual(data["reg_name"],name)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 123 != '123'
2020-04-02 14:29:24,138 -- [test_updata.py-->line:63] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 14:29:24,138 -- [test_updata.py-->line:66] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 55, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 14:30:56,868 -- [test_updata.py-->line:63] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 14:30:56,868 -- [test_updata.py-->line:66] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 55, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:06:50,428 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:06:50,429 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:07:20,126 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:07:20,126 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:11:05,727 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:11:05,728 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:12:15,688 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:12:15,689 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:12:16,497 -- [test_updata.py-->line:67] - ERROR: 用例5，昵称是数字不通过
2020-04-02 15:12:16,498 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:12:16,846 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:12:16,847 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:12:31,000 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:12:31,001 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:12:31,736 -- [test_updata.py-->line:67] - ERROR: 用例5，昵称是数字不通过
2020-04-02 15:12:31,737 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:12:32,063 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:12:32,063 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:14:10,908 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:14:10,909 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:14:11,777 -- [test_updata.py-->line:67] - ERROR: 用例5，昵称是数字不通过
2020-04-02 15:14:11,777 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:14:12,175 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:14:12,175 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:16:19,053 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:16:19,053 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:16:19,828 -- [test_updata.py-->line:67] - ERROR: 用例5，昵称是数字不通过
2020-04-02 15:16:19,828 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:16:20,190 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:16:20,191 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:17:21,442 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:17:21,442 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:17:22,189 -- [test_updata.py-->line:67] - ERROR: 用例5，昵称是数字不通过
2020-04-02 15:17:22,189 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:17:22,546 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:17:22,546 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:18:32,556 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:18:32,556 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:18:33,332 -- [test_updata.py-->line:67] - ERROR: 用例5，昵称是数字不通过
2020-04-02 15:18:33,332 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:18:33,683 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:18:33,683 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:22:22,022 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:22:22,022 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:22:22,758 -- [test_updata.py-->line:67] - ERROR: 用例5，昵称是数字不通过
2020-04-02 15:22:22,758 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:22:23,103 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:22:23,104 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:38:06,408 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:38:06,409 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:38:07,584 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:38:07,585 -- [test_updata.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-02 15:41:03,808 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:41:03,809 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:41:04,919 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:41:04,919 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:42:27,139 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:42:27,140 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:42:28,275 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:42:28,276 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:43:36,457 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:43:36,458 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:43:37,619 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:43:37,620 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:43:56,269 -- [test_updata.py-->line:67] - ERROR: 用例1，正确的用户id，昵称不通过
2020-04-02 15:43:56,269 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:43:57,385 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:43:57,385 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:45:50,293 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:45:50,294 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:46:54,920 -- [test_updata.py-->line:67] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:46:54,920 -- [test_updata.py-->line:70] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 59, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-02 15:47:53,658 -- [test_updata.py-->line:68] - ERROR: 用例7，昵称为10个字符不通过
2020-04-02 15:47:53,659 -- [test_updata.py-->line:71] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 60, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-03 10:34:10,797 -- [test_updata.py-->line:68] - ERROR: 用例7，昵称为10个字符不通过
2020-04-03 10:34:10,863 -- [test_updata.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 60, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-03 10:35:12,512 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-03 10:35:12,512 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-03 10:35:13,306 -- [test_add.py-->line:70] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-03 10:35:13,306 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-03 10:35:14,385 -- [test_add.py-->line:70] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-03 10:35:14,385 -- [test_add.py-->line:71] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-03 10:35:15,263 -- [test_add.py-->line:70] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-03 10:35:15,263 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-03 10:35:15,656 -- [test_add.py-->line:70] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-03 10:35:15,656 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-03 10:35:16,007 -- [test_add.py-->line:70] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-03 10:35:16,007 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-03 10:35:16,315 -- [test_add.py-->line:70] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-03 10:35:16,316 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-03 10:35:16,673 -- [test_add.py-->line:70] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-03 10:35:16,673 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-03 10:35:17,569 -- [test_add.py-->line:70] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-03 10:35:17,569 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-03 10:35:20,115 -- [test_add.py-->line:70] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-03 10:35:20,115 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-03 10:35:20,573 -- [test_add.py-->line:70] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-03 10:35:20,573 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-03 10:35:20,792 -- [test_add.py-->line:70] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-03 10:35:20,793 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-03 10:35:21,012 -- [test_add.py-->line:70] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-03 10:35:21,012 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-03 10:35:21,224 -- [test_add.py-->line:70] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-03 10:35:21,224 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-03 10:35:22,597 -- [test_add.py-->line:70] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-03 10:35:22,597 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-03 10:35:24,060 -- [test_add.py-->line:70] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-03 10:35:24,060 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-03 10:35:26,124 -- [test_audit.py-->line:105] - ERROR: 用例2,审核不通过不通过
2020-04-03 10:35:26,125 -- [test_audit.py-->line:106] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 96, in test_audit
    self.assertEqual(res["code"], expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-03 10:35:26,738 -- [test_audit.py-->line:105] - ERROR: 用例3,项目不在审核状态不通过
2020-04-03 10:35:26,740 -- [test_audit.py-->line:106] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 96, in test_audit
    self.assertEqual(res["code"], expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-03 10:35:32,721 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-03 10:35:32,722 -- [test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-03 10:35:33,008 -- [test_recharge.py-->line:84] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-03 10:35:33,009 -- [test_recharge.py-->line:87] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-03 10:35:33,291 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-03 10:35:33,291 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-03 10:35:33,894 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-03 10:35:33,894 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-03 10:35:34,121 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-03 10:35:34,121 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-03 10:35:34,350 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-03 10:35:34,350 -- [test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-03 10:35:38,131 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-03 10:35:38,131 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-03 10:35:46,898 -- [test_updata.py-->line:68] - ERROR: 用例7，昵称为10个字符不通过
2020-04-03 10:35:46,898 -- [test_updata.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 60, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-03 10:35:48,535 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-03 10:35:48,536 -- [test_withdraw.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-03 10:35:48,755 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-03 10:35:48,755 -- [test_withdraw.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-03 10:35:48,983 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-03 10:35:48,983 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-03 10:35:49,547 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-03 10:35:49,547 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-03 10:35:49,763 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-03 10:35:49,763 -- [test_withdraw.py-->line:92] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-03 10:35:50,919 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-03 10:35:50,920 -- [test_withdraw.py-->line:92] - ERROR: 2 != 1007
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1007
2020-04-03 12:27:41,770 -- [test_userinfo.py-->line:55] - ERROR: 用例1,获取用户信息,不通过
2020-04-03 12:27:41,815 -- [test_userinfo.py-->line:58] - ERROR:  :: 0 != 1004
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1004

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_userinfo.py", line 51, in test_info
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1004
2020-04-03 12:27:42,082 -- [test_userinfo.py-->line:55] - ERROR: 用例2,用户id错误,不通过
2020-04-03 12:27:42,083 -- [test_userinfo.py-->line:58] - ERROR:  :: 1007 != 1004
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 1004

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_userinfo.py", line 51, in test_info
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1007 != 1004
2020-04-03 12:28:49,173 -- [test_userinfo.py-->line:55] - ERROR: 用例2,用户id错误,不通过
2020-04-03 12:28:49,173 -- [test_userinfo.py-->line:58] - ERROR: 1007 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_userinfo.py", line 51, in test_info
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 1005
2020-04-03 13:38:59,041 -- [test_userinfo.py-->line:56] - ERROR: 用例2,用户id错误,不通过
2020-04-03 13:38:59,041 -- [test_userinfo.py-->line:59] - ERROR:  :: 1007 != 1005
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1007 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_userinfo.py", line 52, in test_info
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1007 != 1005
2020-04-03 14:18:28,074 -- [test_loan.py-->line:54] - ERROR: 用例1,获取用户信息,不通过
2020-04-03 14:18:28,075 -- [test_loan.py-->line:57] - ERROR:  :: 0 != 1005
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loan.py", line 50, in test_info
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1005
2020-04-03 14:18:46,871 -- [test_loan.py-->line:54] - ERROR: 用例1,获取用户信息,不通过
2020-04-03 14:18:46,871 -- [test_loan.py-->line:57] - ERROR: 0 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loan.py", line 50, in test_info
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005
2020-04-03 14:25:29,479 -- [test_loanlist.py-->line:54] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-03 14:25:29,479 -- [test_loanlist.py-->line:57] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 50, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-03 14:25:29,876 -- [test_loanlist.py-->line:54] - ERROR: 用例6,索引为字符串,不通过
2020-04-03 14:25:29,877 -- [test_loanlist.py-->line:57] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 50, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-03 14:25:30,296 -- [test_loanlist.py-->line:54] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-03 14:25:30,296 -- [test_loanlist.py-->line:57] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 50, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-07 16:02:05,022 -- [test_audit.py-->line:105] - ERROR: 用例2,审核不通过不通过
2020-04-07 16:02:05,030 -- [test_audit.py-->line:106] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 96, in test_audit
    self.assertEqual(res["code"], expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-07 16:02:05,332 -- [test_audit.py-->line:105] - ERROR: 用例3,项目不在审核状态不通过
2020-04-07 16:02:05,332 -- [test_audit.py-->line:106] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 96, in test_audit
    self.assertEqual(res["code"], expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-07 16:50:19,766 -- [test_audit.py-->line:92] - ERROR: 用例2,审核不通过不通过
2020-04-07 16:50:19,766 -- [test_audit.py-->line:93] - ERROR:  :: 1 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 84, in test_audit
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2020-04-07 16:50:34,777 -- [test_audit.py-->line:92] - ERROR: 用例2,审核不通过不通过
2020-04-07 16:50:34,777 -- [test_audit.py-->line:93] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 84, in test_audit
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-07 16:52:07,713 -- [test_audit.py-->line:92] - ERROR: 用例2,审核不通过不通过
2020-04-07 16:52:07,713 -- [test_audit.py-->line:93] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 84, in test_audit
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-07 16:53:16,031 -- [test_audit.py-->line:92] - ERROR: 用例2,审核不通过不通过
2020-04-07 16:53:16,031 -- [test_audit.py-->line:93] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 84, in test_audit
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-07 16:53:57,760 -- [test_audit.py-->line:92] - ERROR: 用例2,审核不通过不通过
2020-04-07 16:53:57,760 -- [test_audit.py-->line:93] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 84, in test_audit
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-07 16:53:58,028 -- [test_audit.py-->line:92] - ERROR: 用例3,项目不在审核状态不通过
2020-04-07 16:53:58,029 -- [test_audit.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 84, in test_audit
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-07 17:36:13,268 -- [test_audit.py-->line:92] - ERROR: 用例2,审核不通过不通过
2020-04-07 17:36:13,268 -- [test_audit.py-->line:93] - ERROR:  :: 1 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 84, in test_audit
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2020-04-07 17:36:13,595 -- [test_audit.py-->line:92] - ERROR: 用例3,项目不在审核状态不通过
2020-04-07 17:36:13,595 -- [test_audit.py-->line:93] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 84, in test_audit
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-04-07 17:36:28,410 -- [test_audit.py-->line:92] - ERROR: 用例2,审核不通过不通过
2020-04-07 17:36:28,410 -- [test_audit.py-->line:93] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 84, in test_audit
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-07 17:36:58,676 -- [test_audit.py-->line:92] - ERROR: 用例2,审核不通过不通过
2020-04-07 17:36:58,677 -- [test_audit.py-->line:93] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 84, in test_audit
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-07 17:36:59,026 -- [test_audit.py-->line:92] - ERROR: 用例3,项目不在审核状态不通过
2020-04-07 17:36:59,027 -- [test_audit.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_audit.py", line 84, in test_audit
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-08 09:45:02,301 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 09:45:02,364 -- [test_recharge.py-->line:87] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-08 09:45:02,587 -- [test_recharge.py-->line:84] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 09:45:02,588 -- [test_recharge.py-->line:87] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 09:45:02,783 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 09:45:02,783 -- [test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 09:45:03,435 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 09:45:03,435 -- [test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 09:45:03,632 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 09:45:03,633 -- [test_recharge.py-->line:87] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 09:45:03,865 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 09:45:03,866 -- [test_recharge.py-->line:87] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-04-08 09:45:45,566 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 09:45:45,566 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-08 09:45:45,787 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 09:45:45,787 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 09:45:45,985 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 09:45:45,985 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-08 09:45:46,658 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-08 09:45:46,659 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-08 09:45:46,880 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-08 09:45:46,881 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-04-08 09:45:48,292 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-08 09:45:48,293 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 1002
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1002
2020-04-08 09:48:24,839 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-08 09:48:24,839 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 09:48:25,448 -- [test_add.py-->line:70] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-08 09:48:25,448 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 09:48:26,516 -- [test_add.py-->line:70] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-08 09:48:26,516 -- [test_add.py-->line:71] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-08 09:48:27,427 -- [test_add.py-->line:70] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-08 09:48:27,427 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 09:48:27,728 -- [test_add.py-->line:70] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-08 09:48:27,728 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 09:48:28,031 -- [test_add.py-->line:70] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-08 09:48:28,031 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 09:48:28,332 -- [test_add.py-->line:70] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-08 09:48:28,332 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 09:48:28,957 -- [test_add.py-->line:70] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-08 09:48:28,958 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 09:48:30,008 -- [test_add.py-->line:70] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-08 09:48:30,008 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 09:48:35,393 -- [test_add.py-->line:70] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-08 09:48:35,393 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 09:48:35,787 -- [test_add.py-->line:70] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-08 09:48:35,787 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 09:48:36,002 -- [test_add.py-->line:70] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-08 09:48:36,002 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 09:48:36,323 -- [test_add.py-->line:70] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-08 09:48:36,324 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 09:48:36,522 -- [test_add.py-->line:70] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-08 09:48:36,522 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 09:48:38,047 -- [test_add.py-->line:70] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-08 09:48:38,047 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 09:48:39,439 -- [test_add.py-->line:70] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-08 09:48:39,439 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 09:49:36,022 -- [test_loanlist.py-->line:54] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-08 09:49:36,023 -- [test_loanlist.py-->line:57] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 50, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-08 09:49:36,234 -- [test_loanlist.py-->line:54] - ERROR: 用例6,索引为字符串,不通过
2020-04-08 09:49:36,234 -- [test_loanlist.py-->line:57] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 50, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-08 09:49:36,440 -- [test_loanlist.py-->line:54] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-08 09:49:36,440 -- [test_loanlist.py-->line:57] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 50, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-08 09:49:43,518 -- [test_recharge.py-->line:84] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 09:49:43,519 -- [test_recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 09:49:43,731 -- [test_recharge.py-->line:84] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 09:49:43,731 -- [test_recharge.py-->line:87] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 09:49:43,933 -- [test_recharge.py-->line:84] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 09:49:43,933 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 09:49:44,683 -- [test_recharge.py-->line:84] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 09:49:44,683 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 09:49:44,902 -- [test_recharge.py-->line:84] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 09:49:44,902 -- [test_recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 09:49:45,182 -- [test_recharge.py-->line:84] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 09:49:45,182 -- [test_recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-08 09:49:48,988 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-08 09:49:48,989 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-08 09:49:57,640 -- [test_updata.py-->line:68] - ERROR: 用例7，昵称为10个字符不通过
2020-04-08 09:49:57,640 -- [test_updata.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 60, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 09:49:59,669 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 09:49:59,669 -- [test_withdraw.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 09:49:59,875 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 09:49:59,876 -- [test_withdraw.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 09:50:00,083 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 09:50:00,083 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-08 09:50:00,605 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-08 09:50:00,606 -- [test_withdraw.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-08 09:50:00,808 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-08 09:50:00,808 -- [test_withdraw.py-->line:92] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-08 09:50:01,970 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-08 09:50:01,970 -- [test_withdraw.py-->line:92] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-04-08 14:49:19,693 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 14:49:19,733 -- [test_recharge.py-->line:90] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-08 14:49:19,953 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 14:49:19,953 -- [test_recharge.py-->line:90] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 14:49:20,146 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 14:49:20,146 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 14:49:20,350 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 14:49:20,351 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 14:49:20,566 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 14:49:20,566 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 14:49:20,817 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 14:49:20,817 -- [test_recharge.py-->line:90] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-04-08 14:50:27,549 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 14:50:27,550 -- [test_recharge.py-->line:90] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-08 14:50:27,757 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 14:50:27,758 -- [test_recharge.py-->line:90] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 14:50:27,982 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 14:50:27,983 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 14:50:28,338 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 14:50:28,339 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 14:50:28,545 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 14:50:28,546 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 14:50:28,747 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 14:50:28,747 -- [test_recharge.py-->line:90] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-04-08 14:54:05,599 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 14:54:05,599 -- [test_recharge.py-->line:90] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-08 14:54:05,817 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 14:54:05,818 -- [test_recharge.py-->line:90] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 14:54:06,026 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 14:54:06,027 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 14:54:06,235 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 14:54:06,235 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 14:54:06,432 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 14:54:06,432 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 14:54:06,638 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 14:54:06,638 -- [test_recharge.py-->line:90] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-04-08 14:56:01,788 -- [test_loanlist.py-->line:53] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-08 14:56:01,788 -- [test_loanlist.py-->line:56] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 49, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-08 14:56:05,320 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 14:56:05,320 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 14:56:05,556 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 14:56:05,556 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 14:56:05,786 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 14:56:05,786 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 14:56:06,076 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 14:56:06,077 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 14:56:06,314 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 14:56:06,315 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 14:56:06,540 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 14:56:06,540 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-08 14:56:10,425 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-08 14:56:10,425 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-08 14:56:19,522 -- [test_updata.py-->line:68] - ERROR: 用例7，昵称为10个字符不通过
2020-04-08 14:56:19,522 -- [test_updata.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 60, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 14:56:43,034 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-08 14:56:43,035 -- [test_withdraw.py-->line:92] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-04-08 15:00:43,167 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:00:43,167 -- [test_recharge.py-->line:90] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-08 15:00:43,385 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:00:43,386 -- [test_recharge.py-->line:90] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 15:00:43,587 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:00:43,587 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 15:00:43,812 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 15:00:43,813 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 15:00:44,027 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 15:00:44,027 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 15:00:44,253 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 15:00:44,253 -- [test_recharge.py-->line:90] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-04-08 15:02:51,901 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:02:51,902 -- [test_recharge.py-->line:90] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-08 15:02:52,124 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:02:52,124 -- [test_recharge.py-->line:90] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 15:02:52,333 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:02:52,333 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 15:02:52,879 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 15:02:52,880 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 15:02:53,101 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 15:02:53,101 -- [test_recharge.py-->line:90] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-08 15:02:53,489 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 15:02:53,490 -- [test_recharge.py-->line:90] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-04-08 15:03:25,900 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-08 15:03:25,900 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:03:26,540 -- [test_add.py-->line:70] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-08 15:03:26,541 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 15:03:27,728 -- [test_add.py-->line:70] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-08 15:03:27,728 -- [test_add.py-->line:71] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-08 15:03:28,584 -- [test_add.py-->line:70] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-08 15:03:28,584 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:03:28,929 -- [test_add.py-->line:70] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-08 15:03:28,929 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:03:29,269 -- [test_add.py-->line:70] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-08 15:03:29,270 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:03:29,608 -- [test_add.py-->line:70] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-08 15:03:29,608 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:03:29,982 -- [test_add.py-->line:70] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-08 15:03:29,982 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:03:30,837 -- [test_add.py-->line:70] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-08 15:03:30,837 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:03:33,334 -- [test_add.py-->line:70] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-08 15:03:33,334 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:03:33,743 -- [test_add.py-->line:70] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-08 15:03:33,743 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 15:03:33,943 -- [test_add.py-->line:70] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-08 15:03:33,943 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:03:34,160 -- [test_add.py-->line:70] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-08 15:03:34,160 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:03:34,416 -- [test_add.py-->line:70] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-08 15:03:34,416 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:03:35,672 -- [test_add.py-->line:70] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-08 15:03:35,672 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:03:37,134 -- [test_add.py-->line:70] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-08 15:03:37,134 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:04:06,834 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:04:06,834 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:04:07,045 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:04:07,045 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:04:07,253 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:04:07,254 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:04:07,812 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 15:04:07,812 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:04:08,015 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 15:04:08,015 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:04:08,230 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 15:04:08,231 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-08 15:04:12,029 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-08 15:04:12,029 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-08 15:04:20,575 -- [test_updata.py-->line:68] - ERROR: 用例7，昵称为10个字符不通过
2020-04-08 15:04:20,576 -- [test_updata.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 60, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 15:04:22,632 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-08 15:04:22,632 -- [test_withdraw.py-->line:92] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-04-08 15:06:25,429 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-08 15:06:25,429 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 1002
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1002
2020-04-08 15:07:06,299 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-08 15:07:06,299 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 1002
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1002
2020-04-08 15:07:49,440 -- [test_withdraw.py-->line:89] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:07:49,440 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-08 15:07:49,663 -- [test_withdraw.py-->line:89] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:07:49,663 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 15:07:49,875 -- [test_withdraw.py-->line:89] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:07:49,875 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-08 15:07:50,410 -- [test_withdraw.py-->line:89] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-08 15:07:50,410 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-08 15:07:50,613 -- [test_withdraw.py-->line:89] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-08 15:07:50,614 -- [test_withdraw.py-->line:92] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 79, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-04-08 15:07:51,771 -- [test_withdraw.py-->line:89] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-08 15:07:51,771 -- [test_withdraw.py-->line:92] - ERROR:  :: 2 != 1002
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 78, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1002
2020-04-08 15:10:47,687 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:10:47,688 -- [test_withdraw.py-->line:94] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-08 15:10:47,927 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:10:47,928 -- [test_withdraw.py-->line:94] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 15:10:48,158 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:10:48,158 -- [test_withdraw.py-->line:94] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-08 15:10:48,735 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-08 15:10:48,735 -- [test_withdraw.py-->line:94] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-08 15:10:48,992 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-08 15:10:48,992 -- [test_withdraw.py-->line:94] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-04-08 15:12:16,699 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:12:16,699 -- [test_withdraw.py-->line:94] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-08 15:12:16,940 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:12:16,940 -- [test_withdraw.py-->line:94] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 15:12:17,140 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:12:17,140 -- [test_withdraw.py-->line:94] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-08 15:12:17,676 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-08 15:12:17,676 -- [test_withdraw.py-->line:94] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-08 15:12:17,940 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-08 15:12:17,940 -- [test_withdraw.py-->line:94] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-04-08 15:13:15,137 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-08 15:13:15,138 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:13:15,766 -- [test_add.py-->line:70] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-08 15:13:15,766 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 15:13:17,058 -- [test_add.py-->line:70] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-08 15:13:17,058 -- [test_add.py-->line:71] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-08 15:13:17,930 -- [test_add.py-->line:70] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-08 15:13:17,930 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:13:18,267 -- [test_add.py-->line:70] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-08 15:13:18,268 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:13:18,594 -- [test_add.py-->line:70] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-08 15:13:18,594 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:13:19,010 -- [test_add.py-->line:70] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-08 15:13:19,010 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:13:19,340 -- [test_add.py-->line:70] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-08 15:13:19,340 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:13:20,210 -- [test_add.py-->line:70] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-08 15:13:20,210 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:13:22,523 -- [test_add.py-->line:70] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-08 15:13:22,523 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:13:22,933 -- [test_add.py-->line:70] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-08 15:13:22,933 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 15:13:23,135 -- [test_add.py-->line:70] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-08 15:13:23,135 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:13:23,387 -- [test_add.py-->line:70] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-08 15:13:23,387 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:13:23,617 -- [test_add.py-->line:70] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-08 15:13:23,617 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:13:24,856 -- [test_add.py-->line:70] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-08 15:13:24,856 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:13:26,300 -- [test_add.py-->line:70] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-08 15:13:26,300 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:14:23,286 -- [test_loanlist.py-->line:53] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-08 15:14:23,287 -- [test_loanlist.py-->line:56] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 49, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-08 15:14:23,498 -- [test_loanlist.py-->line:53] - ERROR: 用例6,索引为字符串,不通过
2020-04-08 15:14:23,499 -- [test_loanlist.py-->line:56] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 49, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-08 15:14:23,698 -- [test_loanlist.py-->line:53] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-08 15:14:23,698 -- [test_loanlist.py-->line:56] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 49, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-08 15:14:48,168 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:14:48,169 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:14:48,372 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:14:48,372 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:14:48,572 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:14:48,572 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:14:49,110 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 15:14:49,111 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:14:49,321 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 15:14:49,321 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:14:49,523 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 15:14:49,523 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-08 15:14:53,166 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-08 15:14:53,167 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-08 15:15:01,485 -- [test_updata.py-->line:68] - ERROR: 用例7，昵称为10个字符不通过
2020-04-08 15:15:01,485 -- [test_updata.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 60, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 15:15:03,508 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:15:03,508 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:15:03,779 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:15:03,779 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:15:03,989 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:15:03,989 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-08 15:15:04,576 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-08 15:15:04,576 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-08 15:15:04,782 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-08 15:15:04,783 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-08 15:19:43,670 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-08 15:19:43,670 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:19:44,314 -- [test_add.py-->line:70] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-08 15:19:44,315 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 15:19:45,411 -- [test_add.py-->line:70] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-08 15:19:45,412 -- [test_add.py-->line:71] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-08 15:19:46,262 -- [test_add.py-->line:70] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-08 15:19:46,263 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:19:46,589 -- [test_add.py-->line:70] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-08 15:19:46,589 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:19:46,914 -- [test_add.py-->line:70] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-08 15:19:46,914 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:19:47,543 -- [test_add.py-->line:70] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-08 15:19:47,544 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:19:47,919 -- [test_add.py-->line:70] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-08 15:19:47,919 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:19:48,763 -- [test_add.py-->line:70] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-08 15:19:48,763 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:19:51,178 -- [test_add.py-->line:70] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-08 15:19:51,179 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:19:51,616 -- [test_add.py-->line:70] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-08 15:19:51,616 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 15:19:51,819 -- [test_add.py-->line:70] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-08 15:19:51,819 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:19:55,096 -- [test_add.py-->line:70] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-08 15:19:55,096 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:19:55,327 -- [test_add.py-->line:70] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-08 15:19:55,328 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:19:56,635 -- [test_add.py-->line:70] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-08 15:19:56,635 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:19:58,176 -- [test_add.py-->line:70] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-08 15:19:58,176 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:21:17,201 -- [test_add.py-->line:70] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-08 15:21:17,202 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:21:17,864 -- [test_add.py-->line:70] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-08 15:21:17,865 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 15:21:19,229 -- [test_add.py-->line:70] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-08 15:21:19,230 -- [test_add.py-->line:71] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-08 15:21:20,076 -- [test_add.py-->line:70] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-08 15:21:20,076 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:21:20,413 -- [test_add.py-->line:70] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-08 15:21:20,413 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:21:20,748 -- [test_add.py-->line:70] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-08 15:21:20,749 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:21:21,064 -- [test_add.py-->line:70] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-08 15:21:21,064 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:21:21,430 -- [test_add.py-->line:70] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-08 15:21:21,430 -- [test_add.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:21:22,364 -- [test_add.py-->line:70] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-08 15:21:22,364 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:21:25,862 -- [test_add.py-->line:70] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-08 15:21:25,862 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:21:26,327 -- [test_add.py-->line:70] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-08 15:21:26,328 -- [test_add.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-08 15:21:26,536 -- [test_add.py-->line:70] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-08 15:21:26,536 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:21:26,800 -- [test_add.py-->line:70] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-08 15:21:26,800 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:21:27,015 -- [test_add.py-->line:70] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-08 15:21:27,015 -- [test_add.py-->line:71] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 62, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-08 15:21:28,387 -- [test_add.py-->line:70] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-08 15:21:28,387 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:21:50,701 -- [test_add.py-->line:70] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-08 15:21:50,701 -- [test_add.py-->line:71] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 61, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-08 15:22:56,521 -- [test_withdraw.py-->line:91] - ERROR: 用例1,正确的会员id，金额为整数,不通过
2020-04-08 15:22:56,522 -- [test_withdraw.py-->line:94] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-08 15:22:56,803 -- [test_withdraw.py-->line:91] - ERROR: 用例2,正确的会员id，金额带有2位小数,不通过
2020-04-08 15:22:56,803 -- [test_withdraw.py-->line:94] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-08 15:22:57,015 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:22:57,016 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:22:57,237 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:22:57,237 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:22:57,456 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:22:57,456 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-08 15:22:57,734 -- [test_withdraw.py-->line:91] - ERROR: 用例6,正确的会员id，剩金金额大于50万，提现金额金额为500000,不通过
2020-04-08 15:22:57,734 -- [test_withdraw.py-->line:94] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-08 15:22:57,953 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-08 15:22:57,953 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-08 15:22:58,192 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-08 15:22:58,192 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-08 15:22:59,311 -- [test_withdraw.py-->line:91] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-08 15:22:59,311 -- [test_withdraw.py-->line:94] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-04-08 15:24:20,129 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:24:20,130 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:24:20,346 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:24:20,346 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:24:20,560 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:24:20,561 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:24:21,130 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 15:24:21,130 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:24:21,390 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 15:24:21,391 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:24:21,597 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 15:24:21,597 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-08 15:24:28,377 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:24:28,378 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:24:28,599 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:24:28,599 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:24:28,792 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:24:28,792 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:24:29,347 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 15:24:29,347 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:24:29,591 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 15:24:29,591 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:24:29,806 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 15:24:29,806 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-08 15:24:36,278 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:24:36,278 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:24:36,490 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:24:36,490 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:24:36,705 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:24:36,705 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:24:37,244 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 15:24:37,244 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:24:37,483 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 15:24:37,484 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:24:37,689 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 15:24:37,689 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-08 15:24:56,093 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:24:56,093 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:24:56,313 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:24:56,313 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:24:56,535 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:24:56,536 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:24:57,120 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 15:24:57,120 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:24:57,366 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 15:24:57,367 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:25:05,501 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:25:05,502 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:25:05,710 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:25:05,711 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:25:05,920 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:25:05,921 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:25:23,499 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:25:23,500 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:25:23,735 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:25:23,735 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:25:23,950 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:25:23,950 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:25:24,500 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 15:25:24,501 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:25:24,758 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-08 15:25:24,758 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:25:24,983 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 15:25:24,983 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-08 15:25:32,381 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:25:32,382 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:25:32,604 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:25:32,604 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:25:32,810 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:25:32,810 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:25:33,358 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-08 15:25:33,358 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-08 15:25:54,792 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-08 15:25:54,792 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-08 15:26:19,100 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:26:19,101 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:26:19,519 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:26:19,519 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:26:19,971 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:26:19,971 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-08 15:26:20,523 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-08 15:26:20,523 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-08 15:26:20,771 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-08 15:26:20,771 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-08 15:26:21,801 -- [test_withdraw.py-->line:91] - ERROR: 用例14,会员id不是当前登录的用户id,不通过
2020-04-08 15:26:21,802 -- [test_withdraw.py-->line:94] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-04-08 15:30:24,052 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-08 15:30:24,053 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-08 15:30:24,260 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-08 15:30:24,260 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-08 15:30:24,468 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-08 15:30:24,469 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-08 15:30:25,014 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-08 15:30:25,014 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-08 15:30:25,218 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-08 15:30:25,218 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-08 15:34:15,645 -- [test_add.py-->line:74] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-08 15:34:15,645 -- [test_add.py-->line:75] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-08 15:34:16,291 -- [test_add.py-->line:74] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-08 15:34:16,291 -- [test_add.py-->line:75] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-08 15:34:17,419 -- [test_add.py-->line:74] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-08 15:34:17,419 -- [test_add.py-->line:75] - ERROR:  :: 1005 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1005 != 2
2020-04-08 15:34:18,264 -- [test_add.py-->line:74] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-08 15:34:18,264 -- [test_add.py-->line:75] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-08 15:34:18,592 -- [test_add.py-->line:74] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-08 15:34:18,592 -- [test_add.py-->line:75] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 15:34:18,935 -- [test_add.py-->line:74] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-08 15:34:18,935 -- [test_add.py-->line:75] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 15:34:19,258 -- [test_add.py-->line:74] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-08 15:34:19,258 -- [test_add.py-->line:75] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 15:34:19,581 -- [test_add.py-->line:74] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-08 15:34:19,581 -- [test_add.py-->line:75] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-08 15:34:20,466 -- [test_add.py-->line:74] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-08 15:34:20,466 -- [test_add.py-->line:75] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-08 15:34:22,991 -- [test_add.py-->line:74] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-08 15:34:22,991 -- [test_add.py-->line:75] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-08 15:34:23,396 -- [test_add.py-->line:74] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-08 15:34:23,396 -- [test_add.py-->line:75] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-08 15:34:23,602 -- [test_add.py-->line:74] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-08 15:34:23,602 -- [test_add.py-->line:75] - ERROR:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
2020-04-08 15:34:23,808 -- [test_add.py-->line:74] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-08 15:34:23,808 -- [test_add.py-->line:75] - ERROR:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
2020-04-08 15:34:24,015 -- [test_add.py-->line:74] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-08 15:34:24,015 -- [test_add.py-->line:75] - ERROR:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月) != 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
2020-04-08 15:34:25,331 -- [test_add.py-->line:74] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-08 15:34:25,331 -- [test_add.py-->line:75] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-08 15:34:47,664 -- [test_add.py-->line:74] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-08 15:34:47,664 -- [test_add.py-->line:75] - ERROR:  :: 1004 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1004 != 2
2020-04-08 15:58:56,407 -- [test_updata.py-->line:70] - ERROR: 用例7，昵称为10个字符不通过
2020-04-08 15:58:56,408 -- [test_updata.py-->line:73] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 62, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-08 16:04:18,707 -- [test_updata.py-->line:70] - ERROR: 用例7，昵称为10个字符不通过
2020-04-08 16:04:18,708 -- [test_updata.py-->line:73] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 62, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-08 16:24:57,440 -- [test_loanlist.py-->line:56] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-08 16:24:57,440 -- [test_loanlist.py-->line:59] - ERROR:  :: 2 != 1005
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1005
2020-04-08 16:24:57,653 -- [test_loanlist.py-->line:56] - ERROR: 用例6,索引为字符串,不通过
2020-04-08 16:24:57,653 -- [test_loanlist.py-->line:59] - ERROR:  :: 2 != 1005
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1005
2020-04-08 16:24:57,869 -- [test_loanlist.py-->line:56] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-08 16:24:57,869 -- [test_loanlist.py-->line:59] - ERROR:  :: 2 != 1005
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1005
2020-04-08 17:50:13,487 -- [test_userinfo.py-->line:58] - ERROR: 用例1,获取用户信息,不通过
2020-04-08 17:50:13,519 -- [test_userinfo.py-->line:61] - ERROR:  :: 0 != 1005
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_userinfo.py", line 54, in test_info
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1005
2020-04-08 17:50:40,850 -- [test_userinfo.py-->line:58] - ERROR: 用例1,获取用户信息,不通过
2020-04-08 17:50:40,851 -- [test_userinfo.py-->line:61] - ERROR:  :: 0 != 1004
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1004

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_userinfo.py", line 54, in test_info
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1004
2020-04-09 10:50:03,539 -- [test_add.py-->line:74] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-09 10:50:03,608 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:50:04,292 -- [test_add.py-->line:74] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-09 10:50:04,292 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-09 10:50:26,222 -- [test_add.py-->line:74] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-09 10:50:26,222 -- [test_add.py-->line:75] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-09 10:50:27,163 -- [test_add.py-->line:74] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-09 10:50:27,163 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:50:27,526 -- [test_add.py-->line:74] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-09 10:50:27,526 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:50:27,897 -- [test_add.py-->line:74] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-09 10:50:27,897 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:50:28,264 -- [test_add.py-->line:74] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-09 10:50:28,264 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:50:28,659 -- [test_add.py-->line:74] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-09 10:50:28,659 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:50:29,505 -- [test_add.py-->line:74] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-09 10:50:29,505 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:50:31,954 -- [test_add.py-->line:74] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-09 10:50:31,954 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:50:32,439 -- [test_add.py-->line:74] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-09 10:50:32,439 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-09 10:50:32,661 -- [test_add.py-->line:74] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-09 10:50:32,661 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 10:50:32,892 -- [test_add.py-->line:74] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-09 10:50:32,893 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 10:50:33,119 -- [test_add.py-->line:74] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-09 10:50:33,119 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 10:50:34,491 -- [test_add.py-->line:74] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-09 10:50:34,492 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:50:36,171 -- [test_add.py-->line:74] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-09 10:50:36,171 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:51:12,342 -- [test_add.py-->line:74] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-09 10:51:12,342 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:51:12,994 -- [test_add.py-->line:74] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-09 10:51:12,994 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-09 10:51:14,899 -- [test_add.py-->line:74] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-09 10:51:14,900 -- [test_add.py-->line:75] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-09 10:51:15,726 -- [test_add.py-->line:74] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-09 10:51:15,726 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:51:16,097 -- [test_add.py-->line:74] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-09 10:51:16,097 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:51:16,540 -- [test_add.py-->line:74] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-09 10:51:16,540 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:51:17,252 -- [test_add.py-->line:74] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-09 10:51:17,252 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:51:17,690 -- [test_add.py-->line:74] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-09 10:51:17,690 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:51:18,593 -- [test_add.py-->line:74] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-09 10:51:18,593 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:51:21,910 -- [test_add.py-->line:74] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-09 10:51:21,910 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:51:22,511 -- [test_add.py-->line:74] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-09 10:51:22,511 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-09 10:51:22,747 -- [test_add.py-->line:74] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-09 10:51:22,748 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 10:51:22,982 -- [test_add.py-->line:74] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-09 10:51:22,982 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 10:51:23,219 -- [test_add.py-->line:74] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-09 10:51:23,219 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 10:51:24,745 -- [test_add.py-->line:74] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-09 10:51:24,745 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:51:26,492 -- [test_add.py-->line:74] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-09 10:51:26,492 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:52:28,421 -- [test_loanlist.py-->line:56] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-09 10:52:28,421 -- [test_loanlist.py-->line:59] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-09 10:52:28,635 -- [test_loanlist.py-->line:56] - ERROR: 用例6,索引为字符串,不通过
2020-04-09 10:52:28,635 -- [test_loanlist.py-->line:59] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-09 10:52:28,921 -- [test_loanlist.py-->line:56] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-09 10:52:28,922 -- [test_loanlist.py-->line:59] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-09 10:52:32,740 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-09 10:52:32,741 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-09 10:52:33,026 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-09 10:52:33,027 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:52:33,256 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-09 10:52:33,256 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-09 10:52:33,822 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-09 10:52:33,823 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-09 10:52:34,055 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-09 10:52:34,056 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-09 10:52:34,284 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-09 10:52:34,284 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-09 10:52:38,194 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-09 10:52:38,195 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-09 10:52:46,639 -- [test_updata.py-->line:70] - ERROR: 用例7，昵称为10个字符不通过
2020-04-09 10:52:46,639 -- [test_updata.py-->line:73] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 62, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-09 10:52:48,807 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-09 10:52:48,807 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-09 10:52:49,089 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-09 10:52:49,089 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:52:49,301 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-09 10:52:49,301 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-09 10:52:49,838 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-09 10:52:49,839 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-09 10:52:50,057 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-09 10:52:50,057 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-09 10:53:34,861 -- [test_add.py-->line:74] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-09 10:53:34,861 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:53:35,553 -- [test_add.py-->line:74] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-09 10:53:35,553 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-09 10:53:36,683 -- [test_add.py-->line:74] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-09 10:53:36,683 -- [test_add.py-->line:75] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-09 10:53:37,533 -- [test_add.py-->line:74] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-09 10:53:37,533 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:53:37,948 -- [test_add.py-->line:74] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-09 10:53:37,948 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:53:38,297 -- [test_add.py-->line:74] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-09 10:53:38,297 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:53:38,647 -- [test_add.py-->line:74] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-09 10:53:38,647 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:54:00,689 -- [test_add.py-->line:74] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-09 10:54:00,689 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:54:03,304 -- [test_add.py-->line:74] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-09 10:54:03,305 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:54:03,763 -- [test_add.py-->line:74] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-09 10:54:03,763 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-09 10:54:03,989 -- [test_add.py-->line:74] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-09 10:54:03,990 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 10:54:04,219 -- [test_add.py-->line:74] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-09 10:54:04,219 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 10:54:04,459 -- [test_add.py-->line:74] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-09 10:54:04,459 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 10:54:05,838 -- [test_add.py-->line:74] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-09 10:54:05,838 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:54:07,443 -- [test_add.py-->line:74] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-09 10:54:07,443 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 10:55:03,131 -- [test_loanlist.py-->line:56] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-09 10:55:03,131 -- [test_loanlist.py-->line:59] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-09 10:55:03,342 -- [test_loanlist.py-->line:56] - ERROR: 用例6,索引为字符串,不通过
2020-04-09 10:55:03,342 -- [test_loanlist.py-->line:59] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-09 10:55:03,560 -- [test_loanlist.py-->line:56] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-09 10:55:03,560 -- [test_loanlist.py-->line:59] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-09 10:55:07,426 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-09 10:55:07,427 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-09 10:55:07,658 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-09 10:55:07,659 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:55:07,875 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-09 10:55:07,876 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-09 10:55:08,415 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-09 10:55:08,415 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-09 10:55:08,625 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-09 10:55:08,626 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-09 10:55:08,833 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-09 10:55:08,833 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-09 10:55:12,558 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-09 10:55:12,558 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-09 10:55:21,184 -- [test_updata.py-->line:70] - ERROR: 用例7，昵称为10个字符不通过
2020-04-09 10:55:21,184 -- [test_updata.py-->line:73] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 62, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-09 10:55:23,320 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-09 10:55:23,321 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-09 10:55:23,535 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-09 10:55:23,536 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 10:55:23,739 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-09 10:55:23,739 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-09 10:55:24,346 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-09 10:55:24,347 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-09 10:55:24,556 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-09 10:55:24,557 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-09 11:10:22,630 -- [test_add.py-->line:74] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-09 11:10:22,631 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 11:10:23,332 -- [test_add.py-->line:74] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-09 11:10:23,333 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-09 11:10:24,511 -- [test_add.py-->line:74] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-09 11:10:24,512 -- [test_add.py-->line:75] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-09 11:10:25,479 -- [test_add.py-->line:74] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-09 11:10:25,479 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 11:10:25,902 -- [test_add.py-->line:74] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-09 11:10:25,902 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 11:10:26,272 -- [test_add.py-->line:74] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-09 11:10:26,272 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 11:10:26,631 -- [test_add.py-->line:74] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-09 11:10:26,631 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 11:10:26,997 -- [test_add.py-->line:74] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-09 11:10:26,997 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 11:10:27,898 -- [test_add.py-->line:74] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-09 11:10:27,898 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 11:10:30,556 -- [test_add.py-->line:74] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-09 11:10:30,556 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 11:10:31,020 -- [test_add.py-->line:74] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-09 11:10:31,020 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-09 11:10:31,260 -- [test_add.py-->line:74] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-09 11:10:31,261 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 11:10:31,529 -- [test_add.py-->line:74] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-09 11:10:31,529 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 11:10:31,752 -- [test_add.py-->line:74] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-09 11:10:31,752 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-09 11:10:33,199 -- [test_add.py-->line:74] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-09 11:10:33,199 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 11:10:34,933 -- [test_add.py-->line:74] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-09 11:10:34,933 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-09 11:11:53,696 -- [test_loanlist.py-->line:56] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-09 11:11:53,697 -- [test_loanlist.py-->line:59] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-09 11:11:53,924 -- [test_loanlist.py-->line:56] - ERROR: 用例6,索引为字符串,不通过
2020-04-09 11:11:53,925 -- [test_loanlist.py-->line:59] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-09 11:11:54,162 -- [test_loanlist.py-->line:56] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-09 11:11:54,162 -- [test_loanlist.py-->line:59] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-09 11:11:58,195 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-09 11:11:58,195 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-09 11:11:58,425 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-09 11:11:58,426 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 11:11:58,651 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-09 11:11:58,651 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-09 11:11:59,253 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-09 11:11:59,254 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-09 11:11:59,498 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-09 11:11:59,499 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-09 11:11:59,727 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-09 11:11:59,727 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-09 11:12:03,725 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-09 11:12:03,726 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-09 11:12:12,612 -- [test_updata.py-->line:70] - ERROR: 用例7，昵称为10个字符不通过
2020-04-09 11:12:12,612 -- [test_updata.py-->line:73] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 62, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-09 11:12:14,749 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-09 11:12:14,749 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-09 11:12:14,975 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-09 11:12:14,975 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-09 11:12:15,202 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-09 11:12:15,202 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-09 11:12:15,823 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-09 11:12:15,824 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-09 11:12:16,041 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-09 11:12:16,041 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-10 14:32:44,663 -- [test_loanlist.py-->line:56] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-10 14:32:44,685 -- [test_loanlist.py-->line:59] - ERROR:  :: 2 != 1005
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1005
2020-04-10 14:32:45,270 -- [test_loanlist.py-->line:56] - ERROR: 用例6,索引为字符串,不通过
2020-04-10 14:32:45,270 -- [test_loanlist.py-->line:59] - ERROR:  :: 2 != 1005
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1005
2020-04-10 14:32:45,569 -- [test_loanlist.py-->line:56] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-10 14:32:45,570 -- [test_loanlist.py-->line:59] - ERROR:  :: 2 != 1005
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 52, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1005
2020-04-10 19:11:42,439 -- [test_add.py-->line:74] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-10 19:11:42,497 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-10 19:11:43,254 -- [test_add.py-->line:74] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-10 19:11:43,254 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-10 19:11:44,580 -- [test_add.py-->line:74] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-10 19:11:44,580 -- [test_add.py-->line:75] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-10 19:11:45,623 -- [test_add.py-->line:74] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-10 19:11:45,623 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-10 19:11:46,144 -- [test_add.py-->line:74] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-10 19:11:46,145 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:11:46,704 -- [test_add.py-->line:74] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-10 19:11:46,704 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:11:47,095 -- [test_add.py-->line:74] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-10 19:11:47,096 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:11:47,476 -- [test_add.py-->line:74] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-10 19:11:47,476 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:11:48,377 -- [test_add.py-->line:74] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-10 19:11:48,377 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-10 19:11:50,987 -- [test_add.py-->line:74] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-10 19:11:50,987 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-10 19:11:51,430 -- [test_add.py-->line:74] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-10 19:11:51,430 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-10 19:11:51,658 -- [test_add.py-->line:74] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-10 19:11:51,658 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-10 19:11:51,883 -- [test_add.py-->line:74] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-10 19:11:51,883 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-10 19:11:52,107 -- [test_add.py-->line:74] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-10 19:11:52,107 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-10 19:12:16,479 -- [test_add.py-->line:74] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-10 19:12:16,480 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-10 19:13:22,139 -- [test_loanlist.py-->line:55] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-10 19:13:22,140 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-10 19:13:22,368 -- [test_loanlist.py-->line:55] - ERROR: 用例6,索引为字符串,不通过
2020-04-10 19:13:22,368 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-10 19:13:22,588 -- [test_loanlist.py-->line:55] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-10 19:13:22,588 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-10 19:13:26,791 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-10 19:13:26,792 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-10 19:13:27,088 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-10 19:13:27,089 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:13:48,756 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-10 19:13:48,757 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-10 19:13:49,020 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-10 19:13:49,020 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-10 19:13:49,250 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-10 19:13:49,250 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-10 19:13:53,195 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-10 19:13:53,195 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-10 19:14:02,037 -- [test_updata.py-->line:70] - ERROR: 用例7，昵称为10个字符不通过
2020-04-10 19:14:02,038 -- [test_updata.py-->line:73] - ERROR: 0 != 2
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_updata.py", line 62, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-10 19:14:04,185 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-10 19:14:04,185 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-10 19:14:04,433 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-10 19:14:04,434 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:14:04,675 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-10 19:14:04,676 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-10 19:14:05,233 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-10 19:14:05,233 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-10 19:14:05,450 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-10 19:14:05,450 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-10 19:18:13,182 -- [test_add.py-->line:74] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-10 19:18:13,183 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-10 19:18:13,905 -- [test_add.py-->line:74] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-10 19:18:13,905 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-10 19:18:15,765 -- [test_add.py-->line:74] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-10 19:18:15,765 -- [test_add.py-->line:75] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-10 19:18:16,661 -- [test_add.py-->line:74] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-10 19:18:16,661 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-10 19:18:17,098 -- [test_add.py-->line:74] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-10 19:18:17,098 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:18:17,477 -- [test_add.py-->line:74] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-10 19:18:17,477 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:18:17,840 -- [test_add.py-->line:74] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-10 19:18:17,840 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:18:18,229 -- [test_add.py-->line:74] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-10 19:18:18,229 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:18:19,122 -- [test_add.py-->line:74] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-10 19:18:19,123 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-10 19:18:21,917 -- [test_add.py-->line:74] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-10 19:18:21,917 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-10 19:18:22,382 -- [test_add.py-->line:74] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-10 19:18:22,382 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-10 19:18:22,615 -- [test_add.py-->line:74] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-10 19:18:22,615 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-10 19:18:22,855 -- [test_add.py-->line:74] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-10 19:18:22,855 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-10 19:18:23,095 -- [test_add.py-->line:74] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-10 19:18:23,096 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-10 19:18:24,824 -- [test_add.py-->line:74] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-10 19:18:24,824 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-10 19:18:26,662 -- [test_add.py-->line:74] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-10 19:18:26,663 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-10 19:19:29,906 -- [test_loanlist.py-->line:55] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-10 19:19:29,907 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-10 19:19:30,265 -- [test_loanlist.py-->line:55] - ERROR: 用例6,索引为字符串,不通过
2020-04-10 19:19:30,266 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-10 19:19:30,506 -- [test_loanlist.py-->line:55] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-10 19:19:30,506 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-10 19:19:34,738 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-10 19:19:34,738 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-10 19:19:35,009 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-10 19:19:35,009 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:19:35,267 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-10 19:19:35,268 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-10 19:19:35,945 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-10 19:19:35,945 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-10 19:19:36,208 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-10 19:19:36,208 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-10 19:19:36,443 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-10 19:19:36,443 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-10 19:19:40,520 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-10 19:19:40,520 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-10 19:19:49,685 -- [test_updata.py-->line:70] - ERROR: 用例7，昵称为10个字符不通过
2020-04-10 19:19:49,685 -- [test_updata.py-->line:73] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_updata.py", line 62, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-10 19:19:51,925 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-10 19:19:51,925 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-10 19:19:52,171 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-10 19:19:52,171 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-10 19:19:52,401 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-10 19:19:52,402 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-10 19:19:52,983 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-10 19:19:52,983 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-10 19:19:53,219 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-10 19:19:53,219 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-13 11:36:16,427 -- [test_add.py-->line:74] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-13 11:36:16,513 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:36:17,365 -- [test_add.py-->line:74] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-13 11:36:17,365 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:36:18,736 -- [test_add.py-->line:74] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-13 11:36:18,736 -- [test_add.py-->line:75] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-13 11:36:19,778 -- [test_add.py-->line:74] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-13 11:36:19,778 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:36:20,209 -- [test_add.py-->line:74] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-13 11:36:20,209 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 11:36:42,779 -- [test_add.py-->line:74] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-13 11:36:42,779 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 11:36:43,165 -- [test_add.py-->line:74] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-13 11:36:43,165 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 11:36:44,188 -- [test_add.py-->line:74] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-13 11:36:44,188 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:36:47,114 -- [test_add.py-->line:74] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-13 11:36:47,115 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:36:47,572 -- [test_add.py-->line:74] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-13 11:36:47,572 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:36:47,824 -- [test_add.py-->line:74] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-13 11:36:47,824 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 11:36:48,062 -- [test_add.py-->line:74] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-13 11:36:48,062 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 11:36:48,335 -- [test_add.py-->line:74] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-13 11:36:48,335 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 11:36:49,906 -- [test_add.py-->line:74] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-13 11:36:49,906 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:36:51,925 -- [test_add.py-->line:74] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-13 11:36:51,925 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:37:56,528 -- [test_loanlist.py-->line:55] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-13 11:37:56,528 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-13 11:38:17,821 -- [test_loanlist.py-->line:55] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-13 11:38:17,822 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-13 11:38:21,975 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-13 11:38:21,975 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 11:38:22,343 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-13 11:38:22,343 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 11:38:22,604 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-13 11:38:22,605 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 11:38:23,214 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-13 11:38:23,214 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 11:38:23,493 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-13 11:38:23,493 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 11:38:23,729 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-13 11:38:23,730 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 11:38:27,980 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-13 11:38:27,981 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-13 11:38:58,746 -- [test_updata.py-->line:70] - ERROR: 用例7，昵称为10个字符不通过
2020-04-13 11:38:58,746 -- [test_updata.py-->line:73] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_updata.py", line 62, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:39:01,671 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-13 11:39:01,672 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 11:39:02,146 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-13 11:39:02,150 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 11:39:02,438 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-13 11:39:02,439 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-13 11:39:24,191 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-13 11:39:24,191 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-13 11:49:12,679 -- [test_add.py-->line:74] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-13 11:49:12,679 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:49:13,565 -- [test_add.py-->line:74] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-13 11:49:13,569 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:49:14,896 -- [test_add.py-->line:74] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-13 11:49:14,896 -- [test_add.py-->line:75] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-13 11:49:15,932 -- [test_add.py-->line:74] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-13 11:49:15,932 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:49:16,407 -- [test_add.py-->line:74] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-13 11:49:16,407 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 11:49:16,853 -- [test_add.py-->line:74] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-13 11:49:16,853 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 11:49:17,261 -- [test_add.py-->line:74] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-13 11:49:17,262 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 11:49:17,724 -- [test_add.py-->line:74] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-13 11:49:17,724 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 11:49:18,729 -- [test_add.py-->line:74] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-13 11:49:18,730 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:49:22,023 -- [test_add.py-->line:74] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-13 11:49:22,023 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:49:22,593 -- [test_add.py-->line:74] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-13 11:49:22,593 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:49:22,883 -- [test_add.py-->line:74] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-13 11:49:22,883 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 11:49:23,137 -- [test_add.py-->line:74] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-13 11:49:23,137 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 11:49:23,398 -- [test_add.py-->line:74] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-13 11:49:23,398 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 11:49:25,056 -- [test_add.py-->line:74] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-13 11:49:25,056 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:49:27,089 -- [test_add.py-->line:74] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-13 11:49:27,089 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 11:50:33,367 -- [test_loanlist.py-->line:55] - ERROR: 用例5,每页大小索引为0,不通过
2020-04-13 11:50:33,367 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-13 11:50:33,616 -- [test_loanlist.py-->line:55] - ERROR: 用例6,索引为字符串,不通过
2020-04-13 11:50:33,616 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-13 11:50:33,918 -- [test_loanlist.py-->line:55] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-13 11:50:33,919 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-13 11:50:59,146 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-13 11:50:59,146 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 11:50:59,407 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-13 11:50:59,407 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 11:50:59,682 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-13 11:50:59,682 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 11:51:00,310 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-13 11:51:00,310 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 11:51:00,632 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-13 11:51:00,633 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 11:51:00,908 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-13 11:51:00,909 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 11:51:05,224 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-13 11:51:05,225 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-13 11:51:14,689 -- [test_updata.py-->line:70] - ERROR: 用例7，昵称为10个字符不通过
2020-04-13 11:51:14,689 -- [test_updata.py-->line:73] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_updata.py", line 62, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:51:17,007 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-13 11:51:17,007 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 11:51:17,325 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-13 11:51:17,325 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 11:51:17,572 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-13 11:51:17,573 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-13 12:04:54,727 -- [test_add.py-->line:74] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-13 12:04:54,728 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 12:04:55,535 -- [test_add.py-->line:74] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-13 12:04:55,535 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 12:05:06,827 -- [test_add.py-->line:74] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-13 12:05:06,828 -- [test_add.py-->line:75] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-13 12:05:07,852 -- [test_add.py-->line:74] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-13 12:05:07,852 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 12:05:08,774 -- [test_add.py-->line:74] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-13 12:05:08,774 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:05:09,406 -- [test_add.py-->line:74] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-13 12:05:09,406 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:05:10,760 -- [test_add.py-->line:74] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-13 12:05:10,761 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:05:11,426 -- [test_add.py-->line:74] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-13 12:05:11,426 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:05:47,324 -- [test_add.py-->line:74] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-13 12:05:47,324 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 12:05:47,864 -- [test_add.py-->line:74] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-13 12:05:47,864 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 12:05:48,109 -- [test_add.py-->line:74] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-13 12:05:48,109 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 12:05:48,367 -- [test_add.py-->line:74] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-13 12:05:48,367 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 12:05:48,649 -- [test_add.py-->line:74] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-13 12:05:48,649 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 12:05:50,827 -- [test_add.py-->line:74] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-13 12:05:50,827 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 12:05:54,187 -- [test_add.py-->line:74] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-13 12:05:54,187 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 12:07:33,246 -- [test_loanlist.py-->line:55] - ERROR: 用例6,索引为字符串,不通过
2020-04-13 12:07:33,246 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-13 12:07:33,507 -- [test_loanlist.py-->line:55] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-13 12:07:33,508 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-13 12:07:38,380 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-13 12:07:38,381 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 12:07:38,756 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-13 12:07:38,757 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:07:39,146 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-13 12:07:39,147 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 12:07:39,993 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-13 12:07:39,993 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 12:07:40,266 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-13 12:07:40,266 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 12:07:40,670 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-13 12:07:40,670 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 12:07:45,106 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-13 12:07:45,106 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-13 12:07:54,821 -- [test_updata.py-->line:70] - ERROR: 用例7，昵称为10个字符不通过
2020-04-13 12:07:54,821 -- [test_updata.py-->line:73] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_updata.py", line 62, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 12:07:57,030 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-13 12:07:57,030 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 12:07:57,261 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-13 12:07:57,261 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:07:57,494 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-13 12:07:57,495 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-13 12:07:58,133 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-13 12:07:58,133 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-13 12:07:58,371 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-13 12:07:58,371 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-13 12:09:33,533 -- [test_add.py-->line:74] - ERROR: 用例3,借款人id为字符串，加标失败不通过
2020-04-13 12:09:33,534 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 12:09:34,313 -- [test_add.py-->line:74] - ERROR: 用例6,加标主题为数字，加标失败不通过
2020-04-13 12:09:34,313 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 12:09:42,232 -- [test_add.py-->line:74] - ERROR: 用例9,加标主题字符长度51个字符，加标成功不通过
2020-04-13 12:09:42,232 -- [test_add.py-->line:75] - ERROR: 1005 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 2
2020-04-13 12:09:43,266 -- [test_add.py-->line:74] - ERROR: 用例13,借款金额为字符串，加标失败不通过
2020-04-13 12:09:43,266 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 12:09:46,169 -- [test_add.py-->line:74] - ERROR: 用例14,借款金额为6000.89，加标成功不通过
2020-04-13 12:09:46,170 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:09:47,412 -- [test_add.py-->line:74] - ERROR: 用例15,借款金额为6000.893，加标成功不通过
2020-04-13 12:09:47,413 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:09:48,981 -- [test_add.py-->line:74] - ERROR: 用例16,借款金额为600212121212120.89，加标成功不通过
2020-04-13 12:09:48,981 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:09:49,951 -- [test_add.py-->line:74] - ERROR: 用例17,借款金额为6002121212121201.89，加标成功不通过
2020-04-13 12:09:49,951 -- [test_add.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:09:50,944 -- [test_add.py-->line:74] - ERROR: 用例21,年利率为字符串，加标失败不通过
2020-04-13 12:09:50,944 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 12:10:00,338 -- [test_add.py-->line:74] - ERROR: 用例29,借款期限为字符，借款类型为1，加标失败不通过
2020-04-13 12:10:00,338 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 12:10:00,841 -- [test_add.py-->line:74] - ERROR: 用例31,借款期限为小数，借款类型为1，加标失败不通过
2020-04-13 12:10:00,841 -- [test_add.py-->line:75] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 12:10:01,083 -- [test_add.py-->line:74] - ERROR: 用例32,借款期限为0，借款类型为2，加标失败不通过
2020-04-13 12:10:01,084 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 12:10:01,333 -- [test_add.py-->line:74] - ERROR: 用例33,借款期限为负数，借款类型为2，加标失败不通过
2020-04-13 12:10:01,333 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 12:10:01,640 -- [test_add.py-->line:74] - ERROR: 用例34,借款期限为小数，借款类型为2，加标失败不通过
2020-04-13 12:10:01,641 -- [test_add.py-->line:75] - ERROR: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 66, in test_add
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)' != '借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)'
- 借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)
+ 借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)

2020-04-13 12:10:05,044 -- [test_add.py-->line:74] - ERROR: 用例39,借款期限类型为字符串，加标失败不通过
2020-04-13 12:10:05,044 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 12:10:08,381 -- [test_add.py-->line:74] - ERROR: 用例45,竞标天数为字符串，加标失败不通过
2020-04-13 12:10:08,381 -- [test_add.py-->line:75] - ERROR: 1004 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_add.py", line 65, in test_add
    self.assertEqual(res["code"],expected["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 2
2020-04-13 12:11:30,791 -- [test_loanlist.py-->line:55] - ERROR: 用例6,索引为字符串,不通过
2020-04-13 12:11:30,791 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-13 12:11:31,056 -- [test_loanlist.py-->line:55] - ERROR: 用例7,每页大小为字符串,不通过
2020-04-13 12:11:31,057 -- [test_loanlist.py-->line:58] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_loanlist.py", line 51, in test_loanlist
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-13 12:11:36,082 -- [test_recharge.py-->line:87] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-13 12:11:36,082 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 12:11:36,541 -- [test_recharge.py-->line:87] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-13 12:11:36,541 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:11:36,775 -- [test_recharge.py-->line:87] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-13 12:11:36,775 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 12:11:37,384 -- [test_recharge.py-->line:87] - ERROR: 用例7,正确的会员id，金额为500001,不通过
2020-04-13 12:11:37,385 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 12:11:37,680 -- [test_recharge.py-->line:87] - ERROR: 用例8,正确的会员id，金额为600000,不通过
2020-04-13 12:11:37,680 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 75, in test_recharge
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 12:11:37,943 -- [test_recharge.py-->line:87] - ERROR: 用例9,正确的会员id，金额为空,不通过
2020-04-13 12:11:37,943 -- [test_recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_recharge.py", line 74, in test_recharge
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 12:11:42,241 -- [test_register.py-->line:68] - ERROR: 用例4,账号，密码，用户名都合法正确，类型为字符串，注册失败，提示类型必须为整型,不通过
2020-04-13 12:11:42,241 -- [test_register.py-->line:71] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_register.py", line 59, in test_register
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-04-13 12:11:52,542 -- [test_updata.py-->line:70] - ERROR: 用例7，昵称为10个字符不通过
2020-04-13 12:11:52,542 -- [test_updata.py-->line:73] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_updata.py", line 62, in test_updata
    self.assertEqual(excepetd["code"],res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 12:11:54,934 -- [test_withdraw.py-->line:91] - ERROR: 用例3,正确的会员id，金额带有3位小数,不通过
2020-04-13 12:11:54,935 -- [test_withdraw.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 12:11:55,262 -- [test_withdraw.py-->line:91] - ERROR: 用例4,正确的会员id，金额为0,不通过
2020-04-13 12:11:55,263 -- [test_withdraw.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 80, in test_withdraw
    self.assertEqual(excepted["code"], res["code"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 12:11:55,527 -- [test_withdraw.py-->line:91] - ERROR: 用例5,正确的会员id，金额为-1,不通过
2020-04-13 12:11:55,527 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-13 12:11:56,145 -- [test_withdraw.py-->line:91] - ERROR: 用例7,正确的会员id，剩金金额大于60万，金额为600000,不通过
2020-04-13 12:11:56,145 -- [test_withdraw.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-04-13 12:11:56,446 -- [test_withdraw.py-->line:91] - ERROR: 用例8,正确的会员id，金额为空,不通过
2020-04-13 12:11:56,447 -- [test_withdraw.py-->line:94] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_withdraw.py", line 81, in test_withdraw
    self.assertEqual(excepted["msg"], res["msg"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1292, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-04-13 16:30:30,843 -- [test_register.py-->line:56] - ERROR: 用例1,用户名，邮箱不重复，2次密码一致，注册成功,不通过
2020-04-13 16:30:30,844 -- [test_register.py-->line:59] - ERROR:  :: {'username': 'dingqin708826'} != {'id': 1194,
 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMTk0LCJ1c2VybmFtZSI6ImRpbmdxaW43MDg4MjYiLCJleHAiOjE1ODY4NTMwMzAsImVtYWlsIjoiODEzOTA1NjY4QHFxLmNvbSJ9.2zC9qgaAoP_ouhveJHLJW1JP0q4G4AWMuACXuaCCZQU',
 'username': 'dingqin708826'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': 'dingqin708826'} != {'id': 1194, 'username': 'dingqin708826', '[203 chars]ZQU'}
+ {'id': 1194,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMTk0LCJ1c2VybmFtZSI6ImRpbmdxaW43MDg4MjYiLCJleHAiOjE1ODY4NTMwMzAsImVtYWlsIjoiODEzOTA1NjY4QHFxLmNvbSJ9.2zC9qgaAoP_ouhveJHLJW1JP0q4G4AWMuACXuaCCZQU',
- {'username': 'dingqin708826'}
? ^

+  'username': 'dingqin708826'}
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 49, in test_register
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'username': 'dingqin708826'} != {'id': 1194,
 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMTk0LCJ1c2VybmFtZSI6ImRpbmdxaW43MDg4MjYiLCJleHAiOjE1ODY4NTMwMzAsImVtYWlsIjoiODEzOTA1NjY4QHFxLmNvbSJ9.2zC9qgaAoP_ouhveJHLJW1JP0q4G4AWMuACXuaCCZQU',
 'username': 'dingqin708826'}
2020-04-13 16:33:13,575 -- [test_register.py-->line:56] - ERROR: 用例1,用户名，邮箱不重复，2次密码一致，注册成功,不通过
2020-04-13 16:33:13,576 -- [test_register.py-->line:59] - ERROR: {'username': 'dingqin673144'} != {'id': 1195, 'username': 'dingqin673144', '[203 chars]qgY'}
+ {'id': 1195,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMTk1LCJ1c2VybmFtZSI6ImRpbmdxaW42NzMxNDQiLCJleHAiOjE1ODY4NTMxOTMsImVtYWlsIjoiMjkwMTI1ODE5QHFxLmNvbSJ9.ELttUXTEtQbgL-r2-nThkAiwkn_cB18QWme-nIfdqgY',
- {'username': 'dingqin673144'}
? ^

+  'username': 'dingqin673144'}
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 49, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': 'dingqin673144'} != {'id': 1195, 'username': 'dingqin673144', '[203 chars]qgY'}
+ {'id': 1195,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMTk1LCJ1c2VybmFtZSI6ImRpbmdxaW42NzMxNDQiLCJleHAiOjE1ODY4NTMxOTMsImVtYWlsIjoiMjkwMTI1ODE5QHFxLmNvbSJ9.ELttUXTEtQbgL-r2-nThkAiwkn_cB18QWme-nIfdqgY',
- {'username': 'dingqin673144'}
? ^

+  'username': 'dingqin673144'}
? ^

2020-04-13 16:39:35,209 -- [test_register.py-->line:58] - ERROR: 用例1,用户名，邮箱不重复，2次密码一致，注册成功,不通过
2020-04-13 16:39:35,209 -- [test_register.py-->line:61] - ERROR: {'username': 'dingqin169118'} != {'id': 1196, 'username': 'dingqin169118', '[203 chars]LDk'}
+ {'id': 1196,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMTk2LCJ1c2VybmFtZSI6ImRpbmdxaW4xNjkxMTgiLCJleHAiOjE1ODY4NTM1NzQsImVtYWlsIjoiNTgzMTYwOTkxQHFxLmNvbSJ9.WY3WM_NJ5ASKc8LZBUx8fQ3dB8I1raAb2-O5Mn2CLDk',
- {'username': 'dingqin169118'}
? ^

+  'username': 'dingqin169118'}
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 51, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': 'dingqin169118'} != {'id': 1196, 'username': 'dingqin169118', '[203 chars]LDk'}
+ {'id': 1196,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMTk2LCJ1c2VybmFtZSI6ImRpbmdxaW4xNjkxMTgiLCJleHAiOjE1ODY4NTM1NzQsImVtYWlsIjoiNTgzMTYwOTkxQHFxLmNvbSJ9.WY3WM_NJ5ASKc8LZBUx8fQ3dB8I1raAb2-O5Mn2CLDk',
- {'username': 'dingqin169118'}
? ^

+  'username': 'dingqin169118'}
? ^

2020-04-13 16:40:03,727 -- [test_register.py-->line:58] - ERROR: 用例1,用户名，邮箱不重复，2次密码一致，注册成功,不通过
2020-04-13 16:40:03,728 -- [test_register.py-->line:61] - ERROR: {'username': 'dingqin409339'} != {'id': 1197, 'username': 'dingqin409339', '[203 chars]GCY'}
+ {'id': 1197,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMTk3LCJ1c2VybmFtZSI6ImRpbmdxaW40MDkzMzkiLCJleHAiOjE1ODY4NTM2MDMsImVtYWlsIjoiMTIwMTYyMjE3QHFxLmNvbSJ9.wiS1GtWHF9TXLlyzEgrbx5b4sgoqoTjTW7PLsG42GCY',
- {'username': 'dingqin409339'}
? ^

+  'username': 'dingqin409339'}
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 51, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': 'dingqin409339'} != {'id': 1197, 'username': 'dingqin409339', '[203 chars]GCY'}
+ {'id': 1197,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMTk3LCJ1c2VybmFtZSI6ImRpbmdxaW40MDkzMzkiLCJleHAiOjE1ODY4NTM2MDMsImVtYWlsIjoiMTIwMTYyMjE3QHFxLmNvbSJ9.wiS1GtWHF9TXLlyzEgrbx5b4sgoqoTjTW7PLsG42GCY',
- {'username': 'dingqin409339'}
? ^

+  'username': 'dingqin409339'}
? ^

2020-04-13 16:53:05,625 -- [test_register.py-->line:59] - ERROR: 用例1,用户名，邮箱不重复，2次密码一致，注册成功,不通过
2020-04-13 16:53:05,625 -- [test_register.py-->line:62] - ERROR: {'username': 'dingqin121029'} != {'id': 1204, 'username': 'dingqin121029', '[203 chars]pTE'}
+ {'id': 1204,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjA0LCJ1c2VybmFtZSI6ImRpbmdxaW4xMjEwMjkiLCJleHAiOjE1ODY4NTQzODUsImVtYWlsIjoiMTQ0ODU3MzY0QHFxLmNvbSJ9.9UCw0mfRSd5AoTO9ju2fcnQdBmvelG4sJrfmUxYEpTE',
- {'username': 'dingqin121029'}
? ^

+  'username': 'dingqin121029'}
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 51, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': 'dingqin121029'} != {'id': 1204, 'username': 'dingqin121029', '[203 chars]pTE'}
+ {'id': 1204,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjA0LCJ1c2VybmFtZSI6ImRpbmdxaW4xMjEwMjkiLCJleHAiOjE1ODY4NTQzODUsImVtYWlsIjoiMTQ0ODU3MzY0QHFxLmNvbSJ9.9UCw0mfRSd5AoTO9ju2fcnQdBmvelG4sJrfmUxYEpTE',
- {'username': 'dingqin121029'}
? ^

+  'username': 'dingqin121029'}
? ^

2020-04-13 16:58:20,892 -- [test_register.py-->line:59] - ERROR: 用例1,用户名，邮箱不重复，2次密码一致，注册成功,不通过
2020-04-13 16:58:20,892 -- [test_register.py-->line:62] - ERROR: {'username': 'dingqin532230'} != {'id': 1205, 'username': 'dingqin532230', '[203 chars]q5A'}
+ {'id': 1205,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjA1LCJ1c2VybmFtZSI6ImRpbmdxaW41MzIyMzAiLCJleHAiOjE1ODY4NTQ3MDAsImVtYWlsIjoiNDc4Njk0OTk5QHFxLmNvbSJ9.s1xfLD2zEHF-UlHTneEgD91juO0JD8Ze1OnO1709q5A',
- {'username': 'dingqin532230'}
? ^

+  'username': 'dingqin532230'}
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 51, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': 'dingqin532230'} != {'id': 1205, 'username': 'dingqin532230', '[203 chars]q5A'}
+ {'id': 1205,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjA1LCJ1c2VybmFtZSI6ImRpbmdxaW41MzIyMzAiLCJleHAiOjE1ODY4NTQ3MDAsImVtYWlsIjoiNDc4Njk0OTk5QHFxLmNvbSJ9.s1xfLD2zEHF-UlHTneEgD91juO0JD8Ze1OnO1709q5A',
- {'username': 'dingqin532230'}
? ^

+  'username': 'dingqin532230'}
? ^

2020-04-13 17:00:47,824 -- [test_register.py-->line:59] - ERROR: 用例1,用户名，邮箱不重复，2次密码一致，注册成功,不通过
2020-04-13 17:00:47,824 -- [test_register.py-->line:62] - ERROR: {'username': 'dingqin266284'} != {'id': 1206, 'username': 'dingqin266284', '[203 chars]KxI'}
+ {'id': 1206,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjA2LCJ1c2VybmFtZSI6ImRpbmdxaW4yNjYyODQiLCJleHAiOjE1ODY4NTQ4NDcsImVtYWlsIjoiNTM5ODYzNzU5QHFxLmNvbSJ9.NNfmqkFBs1Q-5oaeJFNJojulmpLyJLN3zR0-qoxuKxI',
- {'username': 'dingqin266284'}
? ^

+  'username': 'dingqin266284'}
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 51, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': 'dingqin266284'} != {'id': 1206, 'username': 'dingqin266284', '[203 chars]KxI'}
+ {'id': 1206,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjA2LCJ1c2VybmFtZSI6ImRpbmdxaW4yNjYyODQiLCJleHAiOjE1ODY4NTQ4NDcsImVtYWlsIjoiNTM5ODYzNzU5QHFxLmNvbSJ9.NNfmqkFBs1Q-5oaeJFNJojulmpLyJLN3zR0-qoxuKxI',
- {'username': 'dingqin266284'}
? ^

+  'username': 'dingqin266284'}
? ^

2020-04-13 17:02:55,538 -- [test_register.py-->line:59] - ERROR: 用例1,用户名，邮箱不重复，2次密码一致，注册成功,不通过
2020-04-13 17:02:55,539 -- [test_register.py-->line:62] - ERROR: {'username': 'dingqin981765'} != {'id': 1207, 'username': 'dingqin981765', '[203 chars]Suk'}
+ {'id': 1207,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjA3LCJ1c2VybmFtZSI6ImRpbmdxaW45ODE3NjUiLCJleHAiOjE1ODY4NTQ5NzUsImVtYWlsIjoiNDkwMjkwMjYyQHFxLmNvbSJ9.olG1A4A9ExIBSjqxXzKN0St7mg-3otlFRxFT2s4jSuk',
- {'username': 'dingqin981765'}
? ^

+  'username': 'dingqin981765'}
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 51, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': 'dingqin981765'} != {'id': 1207, 'username': 'dingqin981765', '[203 chars]Suk'}
+ {'id': 1207,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjA3LCJ1c2VybmFtZSI6ImRpbmdxaW45ODE3NjUiLCJleHAiOjE1ODY4NTQ5NzUsImVtYWlsIjoiNDkwMjkwMjYyQHFxLmNvbSJ9.olG1A4A9ExIBSjqxXzKN0St7mg-3otlFRxFT2s4jSuk',
- {'username': 'dingqin981765'}
? ^

+  'username': 'dingqin981765'}
? ^

2020-04-13 17:04:42,034 -- [test_register.py-->line:59] - ERROR: 用例1,用户名，邮箱不重复，2次密码一致，注册成功,不通过
2020-04-13 17:04:42,034 -- [test_register.py-->line:62] - ERROR: {'username': 'dingqin476973'} != {'id': 1208, 'username': 'dingqin476973', '[203 chars]yMc'}
+ {'id': 1208,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjA4LCJ1c2VybmFtZSI6ImRpbmdxaW40NzY5NzMiLCJleHAiOjE1ODY4NTUwODEsImVtYWlsIjoiOTg5MTU0NzE0QHFxLmNvbSJ9.62WNZmSe4-saCWudkKNWU647m2YpYdTk72kyRmaMyMc',
- {'username': 'dingqin476973'}
? ^

+  'username': 'dingqin476973'}
? ^
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 51, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': 'dingqin476973'} != {'id': 1208, 'username': 'dingqin476973', '[203 chars]yMc'}
+ {'id': 1208,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjA4LCJ1c2VybmFtZSI6ImRpbmdxaW40NzY5NzMiLCJleHAiOjE1ODY4NTUwODEsImVtYWlsIjoiOTg5MTU0NzE0QHFxLmNvbSJ9.62WNZmSe4-saCWudkKNWU647m2YpYdTk72kyRmaMyMc',
- {'username': 'dingqin476973'}
? ^

+  'username': 'dingqin476973'}
? ^

2020-04-13 17:25:16,520 -- [test_register.py-->line:61] - ERROR: 用例1,用户名，邮箱不重复，2次密码一致，注册成功,不通过
2020-04-13 17:25:16,521 -- [test_register.py-->line:64] - ERROR:  :: {'username': 'dingqin478662'} != {'id': 1210,
 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjEwLCJ1c2VybmFtZSI6ImRpbmdxaW40Nzg2NjIiLCJleHAiOjE1ODY4NTYzMTYsImVtYWlsIjoiNTA3MDgxMTlAcXEuY29tIn0.IpFeSaEicaakEnJ2ucMxpEBa0ldKjnnoanN0Ge_08jI',
 'username': 'dingqin478662'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': 'dingqin478662'} != {'id': 1210, 'username': 'dingqin478662', '[202 chars]8jI'}
+ {'id': 1210,
+  'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjEwLCJ1c2VybmFtZSI6ImRpbmdxaW40Nzg2NjIiLCJleHAiOjE1ODY4NTYzMTYsImVtYWlsIjoiNTA3MDgxMTlAcXEuY29tIn0.IpFeSaEicaakEnJ2ucMxpEBa0ldKjnnoanN0Ge_08jI',
- {'username': 'dingqin478662'}
? ^

+  'username': 'dingqin478662'}
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 53, in test_register
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'username': 'dingqin478662'} != {'id': 1210,
 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjEwLCJ1c2VybmFtZSI6ImRpbmdxaW40Nzg2NjIiLCJleHAiOjE1ODY4NTYzMTYsImVtYWlsIjoiNTA3MDgxMTlAcXEuY29tIn0.IpFeSaEicaakEnJ2ucMxpEBa0ldKjnnoanN0Ge_08jI',
 'username': 'dingqin478662'}
2020-04-13 18:05:10,970 -- [test_isnotregister.py-->line:66] - ERROR: 用例1,已注册的用户名,不通过
2020-04-13 18:05:10,970 -- [test_isnotregister.py-->line:69] - ERROR: '0' != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_isnotregister.py", line 63, in test_isnotregister
    self.assertEqual(excepted["count"], res["count"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '0' != 0
2020-04-13 18:05:11,254 -- [test_isnotregister.py-->line:66] - ERROR: 用例1,未注册的用户名,不通过
2020-04-13 18:05:11,255 -- [test_isnotregister.py-->line:69] - ERROR: '0' != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_isnotregister.py", line 63, in test_isnotregister
    self.assertEqual(excepted["count"], res["count"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '0' != 0
2020-04-14 10:08:11,935 -- [test_register.py-->line:61] - ERROR: 用例18,账号错误,不通过
2020-04-14 10:08:11,954 -- [test_register.py-->line:64] - ERROR:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 53, in test_register
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:08:12,337 -- [test_register.py-->line:61] - ERROR: 用例19,密码错误,不通过
2020-04-14 10:08:12,337 -- [test_register.py-->line:64] - ERROR:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 53, in test_register
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:09:37,662 -- [test_register.py-->line:61] - ERROR: 用例18,账号错误,不通过
2020-04-14 10:09:37,662 -- [test_register.py-->line:64] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 53, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:09:38,039 -- [test_register.py-->line:61] - ERROR: 用例19,密码错误,不通过
2020-04-14 10:09:38,039 -- [test_register.py-->line:64] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 53, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:18:50,187 -- [test_register.py-->line:61] - ERROR: 用例18,账号错误,不通过
2020-04-14 10:18:50,187 -- [test_register.py-->line:64] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 53, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:18:50,573 -- [test_register.py-->line:61] - ERROR: 用例19,密码错误,不通过
2020-04-14 10:18:50,573 -- [test_register.py-->line:64] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 53, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:25:36,411 -- [test_register.py-->line:66] - ERROR: 用例18,账号错误,不通过
2020-04-14 10:25:36,411 -- [test_register.py-->line:69] - ERROR:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 58, in test_register
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:25:36,791 -- [test_register.py-->line:66] - ERROR: 用例19,密码错误,不通过
2020-04-14 10:25:36,792 -- [test_register.py-->line:69] - ERROR:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 58, in test_register
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:26:28,308 -- [test_register.py-->line:66] - ERROR: 用例18,账号错误,不通过
2020-04-14 10:26:28,309 -- [test_register.py-->line:69] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 58, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:26:28,699 -- [test_register.py-->line:66] - ERROR: 用例19,密码错误,不通过
2020-04-14 10:26:28,699 -- [test_register.py-->line:69] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 58, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:29:07,076 -- [test_register.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 10:29:07,076 -- [test_register.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 55, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:29:07,441 -- [test_register.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 10:29:07,442 -- [test_register.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register.py", line 55, in test_register
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:32:19,739 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 10:32:19,740 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 10:32:20,103 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 10:32:20,103 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:04:17,812 -- [test_projects.py-->line:63] - ERROR: 用例15,描述字段为空,不通过
2020-04-14 14:04:17,812 -- [test_projects.py-->line:66] - ERROR:  :: {'name': '微信小程序项目5847'} != {'create_time': '2020-04-14T14:04:17.631542+08:00',
 'desc': None,
 'id': 4721,
 'leader': 'dingqin',
 'name': '微信小程序项目5847',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': '微信小程序项目5847'} != {'id': 4721, 'create_time': '2020-04-14T14:[152 chars]None}
+ {'create_time': '2020-04-14T14:04:17.631542+08:00',
+  'desc': None,
+  'id': 4721,
+  'leader': 'dingqin',
- {'name': '微信小程序项目5847'}
? ^                     ^

+  'name': '微信小程序项目5847',
? ^                     ^

+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': '微信小程序项目5847'} != {'create_time': '2020-04-14T14:04:17.631542+08:00',
 'desc': None,
 'id': 4721,
 'leader': 'dingqin',
 'name': '微信小程序项目5847',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:05:31,318 -- [test_projects.py-->line:63] - ERROR: 用例15,描述字段为空,不通过
2020-04-14 14:05:31,318 -- [test_projects.py-->line:66] - ERROR:  :: {'name': '微信小程序项目6830'} != {'create_time': '2020-04-14T14:05:31.129604+08:00',
 'desc': None,
 'id': 4723,
 'leader': 'dingqin',
 'name': '微信小程序项目6830',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': '微信小程序项目6830'} != {'id': 4723, 'create_time': '2020-04-14T14:[152 chars]None}
+ {'create_time': '2020-04-14T14:05:31.129604+08:00',
+  'desc': None,
+  'id': 4723,
+  'leader': 'dingqin',
- {'name': '微信小程序项目6830'}
? ^                     ^

+  'name': '微信小程序项目6830',
? ^                     ^

+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': '微信小程序项目6830'} != {'create_time': '2020-04-14T14:05:31.129604+08:00',
 'desc': None,
 'id': 4723,
 'leader': 'dingqin',
 'name': '微信小程序项目6830',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:07:21,793 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:07:21,793 -- [test_projects.py-->line:66] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:07:21.610456+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4725,
 'leader': 'dingqin',
 'name': '微信小程序项目2377',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4725, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:07:21.610456+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4725,
+  'leader': 'dingqin',
+  'name': '微信小程序项目2377',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:07:21.610456+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4725,
 'leader': 'dingqin',
 'name': '微信小程序项目2377',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:07:22,031 -- [test_projects.py-->line:63] - ERROR: 用例15,描述字段为空,不通过
2020-04-14 14:07:22,032 -- [test_projects.py-->line:66] - ERROR:  :: {'name': '微信小程序项目8670'} != {'create_time': '2020-04-14T14:07:21.847527+08:00',
 'desc': None,
 'id': 4726,
 'leader': 'dingqin',
 'name': '微信小程序项目8670',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': '微信小程序项目8670'} != {'id': 4726, 'create_time': '2020-04-14T14:[152 chars]None}
+ {'create_time': '2020-04-14T14:07:21.847527+08:00',
+  'desc': None,
+  'id': 4726,
+  'leader': 'dingqin',
- {'name': '微信小程序项目8670'}
? ^                     ^

+  'name': '微信小程序项目8670',
? ^                     ^

+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': '微信小程序项目8670'} != {'create_time': '2020-04-14T14:07:21.847527+08:00',
 'desc': None,
 'id': 4726,
 'leader': 'dingqin',
 'name': '微信小程序项目8670',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:09:35,241 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:09:35,241 -- [test_projects.py-->line:66] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4729, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:09:35.055646+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4729,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1880',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4729, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:09:35.055646+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4729,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1880',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:09:35,475 -- [test_projects.py-->line:63] - ERROR: 用例15,描述字段为空,不通过
2020-04-14 14:09:35,475 -- [test_projects.py-->line:66] - ERROR: {'name': '微信小程序项目2958'} != {'id': 4730, 'create_time': '2020-04-14T14:[152 chars]None}
+ {'create_time': '2020-04-14T14:09:35.285998+08:00',
+  'desc': None,
+  'id': 4730,
+  'leader': 'dingqin',
- {'name': '微信小程序项目2958'}
? ^                     ^

+  'name': '微信小程序项目2958',
? ^                     ^

+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': '微信小程序项目2958'} != {'id': 4730, 'create_time': '2020-04-14T14:[152 chars]None}
+ {'create_time': '2020-04-14T14:09:35.285998+08:00',
+  'desc': None,
+  'id': 4730,
+  'leader': 'dingqin',
- {'name': '微信小程序项目2958'}
? ^                     ^

+  'name': '微信小程序项目2958',
? ^                     ^

+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:09:35,790 -- [test_register_login.py-->line:63] - ERROR: 用例2,用户名重复,不通过
2020-04-14 14:09:35,790 -- [test_register_login.py-->line:66] - ERROR: {'username': ['已存在一位使用该名字的用户。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'username': ['已存在一位使用该名字的用户。']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
?  +++++++++++++++++++++
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': ['已存在一位使用该名字的用户。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'username': ['已存在一位使用该名字的用户。']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
?  +++++++++++++++++++++

2020-04-14 14:09:58,544 -- [test_register_login.py-->line:63] - ERROR: 用例8,邮箱为空,不通过
2020-04-14 14:09:58,544 -- [test_register_login.py-->line:66] - ERROR: {'email': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['该字段不能为 null。']}
- {'email': ['该字段不能为 null。']}
+ {'email': ['该字段不能为 null。'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['该字段不能为 null。']}
- {'email': ['该字段不能为 null。']}
+ {'email': ['该字段不能为 null。'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:09:59,180 -- [test_register_login.py-->line:63] - ERROR: 用例10,邮箱格式不符合,不通过
2020-04-14 14:09:59,180 -- [test_register_login.py-->line:66] - ERROR: {'email': ['请输入合法的邮件地址。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['请输入合法的邮件地址。']}
- {'email': ['请输入合法的邮件地址。']}
+ {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['请输入合法的邮件地址。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['请输入合法的邮件地址。']}
- {'email': ['请输入合法的邮件地址。']}
+ {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:09:59,498 -- [test_register_login.py-->line:63] - ERROR: 用例11,两次密码不一致,不通过
2020-04-14 14:09:59,498 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['两次输入密码不正确']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'non_field_errors': ['两次输入密码不正确']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['两次输入密码不正确']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'non_field_errors': ['两次输入密码不正确']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:09:59,834 -- [test_register_login.py-->line:63] - ERROR: 用例12,第一次密码为空,不通过
2020-04-14 14:09:59,835 -- [test_register_login.py-->line:66] - ERROR: {'password': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[35 chars]注册']}
+ {'email': ['此邮箱已注册'],
- {'password': ['该字段不能为 null。']}
? ^                            ^

+  'password': ['该字段不能为 null。'],
? ^                            ^

+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[35 chars]注册']}
+ {'email': ['此邮箱已注册'],
- {'password': ['该字段不能为 null。']}
? ^                            ^

+  'password': ['该字段不能为 null。'],
? ^                            ^

+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:10:00,534 -- [test_register_login.py-->line:63] - ERROR: 用例13,第二次密码为空,不通过
2020-04-14 14:10:00,534 -- [test_register_login.py-->line:66] - ERROR: {'password_confirm': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': [[43 chars]l。']}
+ {'email': ['此邮箱已注册'],
- {'password_confirm': ['该字段不能为 null。']}
? ^                                    ^

+  'password_confirm': ['该字段不能为 null。'],
? ^                                    ^

+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password_confirm': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': [[43 chars]l。']}
+ {'email': ['此邮箱已注册'],
- {'password_confirm': ['该字段不能为 null。']}
? ^                                    ^

+  'password_confirm': ['该字段不能为 null。'],
? ^                                    ^

+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:10:01,219 -- [test_register_login.py-->line:63] - ERROR: 用例14,两次密码都为空,不通过
2020-04-14 14:10:01,219 -- [test_register_login.py-->line:66] - ERROR: {'password': ['该字段不能为 null。'], 'password_co[20 chars]l。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[73 chars]l。']}
- {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']}
+ {'email': ['此邮箱已注册'],
+  'password': ['该字段不能为 null。'],
+  'password_confirm': ['该字段不能为 null。'],
+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。'], 'password_co[20 chars]l。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[73 chars]l。']}
- {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']}
+ {'email': ['此邮箱已注册'],
+  'password': ['该字段不能为 null。'],
+  'password_confirm': ['该字段不能为 null。'],
+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:10:01,847 -- [test_register_login.py-->line:63] - ERROR: 用例16,注册成功,不通过
2020-04-14 14:10:01,847 -- [test_register_login.py-->line:66] - ERROR: 'dingqin' != ['已存在一位使用该名字的用户。']
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 53, in test_register_login
    self.assertEqual(excepted["username"], res["username"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 'dingqin' != ['已存在一位使用该名字的用户。']
2020-04-14 14:10:02,971 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 14:10:02,972 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:10:03,399 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 14:10:03,400 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:10:22,031 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:10:22,031 -- [test_projects.py-->line:66] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:10:21.840854+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4732,
 'leader': 'dingqin',
 'name': '微信小程序项目4830',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4732, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:10:21.840854+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4732,
+  'leader': 'dingqin',
+  'name': '微信小程序项目4830',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:10:21.840854+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4732,
 'leader': 'dingqin',
 'name': '微信小程序项目4830',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:10:22,270 -- [test_projects.py-->line:63] - ERROR: 用例15,描述字段为空,不通过
2020-04-14 14:10:22,271 -- [test_projects.py-->line:66] - ERROR:  :: {'name': '微信小程序项目9342'} != {'create_time': '2020-04-14T14:10:22.076986+08:00',
 'desc': None,
 'id': 4733,
 'leader': 'dingqin',
 'name': '微信小程序项目9342',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': '微信小程序项目9342'} != {'id': 4733, 'create_time': '2020-04-14T14:[152 chars]None}
+ {'create_time': '2020-04-14T14:10:22.076986+08:00',
+  'desc': None,
+  'id': 4733,
+  'leader': 'dingqin',
- {'name': '微信小程序项目9342'}
? ^                     ^

+  'name': '微信小程序项目9342',
? ^                     ^

+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': '微信小程序项目9342'} != {'create_time': '2020-04-14T14:10:22.076986+08:00',
 'desc': None,
 'id': 4733,
 'leader': 'dingqin',
 'name': '微信小程序项目9342',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:13:54,706 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:13:54,707 -- [test_projects.py-->line:66] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:13:54.513014+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4735,
 'leader': 'dingqin',
 'name': '微信小程序项目9186',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4735, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:13:54.513014+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4735,
+  'leader': 'dingqin',
+  'name': '微信小程序项目9186',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:13:54.513014+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4735,
 'leader': 'dingqin',
 'name': '微信小程序项目9186',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:13:54,975 -- [test_projects.py-->line:63] - ERROR: 用例15,描述字段为空,不通过
2020-04-14 14:13:54,976 -- [test_projects.py-->line:66] - ERROR:  :: {'name': '微信小程序项目4719'} != {'create_time': '2020-04-14T14:13:54.769995+08:00',
 'desc': None,
 'id': 4736,
 'leader': 'dingqin',
 'name': '微信小程序项目4719',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': '微信小程序项目4719'} != {'id': 4736, 'create_time': '2020-04-14T14:[152 chars]None}
+ {'create_time': '2020-04-14T14:13:54.769995+08:00',
+  'desc': None,
+  'id': 4736,
+  'leader': 'dingqin',
- {'name': '微信小程序项目4719'}
? ^                     ^

+  'name': '微信小程序项目4719',
? ^                     ^

+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': '微信小程序项目4719'} != {'create_time': '2020-04-14T14:13:54.769995+08:00',
 'desc': None,
 'id': 4736,
 'leader': 'dingqin',
 'name': '微信小程序项目4719',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:16:21,289 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:16:21,289 -- [test_projects.py-->line:66] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:16:21.100554+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4738,
 'leader': 'dingqin',
 'name': '微信小程序项目4800',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4738, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:16:21.100554+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4738,
+  'leader': 'dingqin',
+  'name': '微信小程序项目4800',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:16:21.100554+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4738,
 'leader': 'dingqin',
 'name': '微信小程序项目4800',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:16:21,507 -- [test_projects.py-->line:63] - ERROR: 用例15,描述字段为空,不通过
2020-04-14 14:16:21,508 -- [test_projects.py-->line:66] - ERROR:  :: {'name': '微信小程序项目2694'} != {'create_time': '2020-04-14T14:16:21.330884+08:00',
 'desc': None,
 'id': 4739,
 'leader': 'dingqin',
 'name': '微信小程序项目2694',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': '微信小程序项目2694'} != {'id': 4739, 'create_time': '2020-04-14T14:[152 chars]None}
+ {'create_time': '2020-04-14T14:16:21.330884+08:00',
+  'desc': None,
+  'id': 4739,
+  'leader': 'dingqin',
- {'name': '微信小程序项目2694'}
? ^                     ^

+  'name': '微信小程序项目2694',
? ^                     ^

+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': '微信小程序项目2694'} != {'create_time': '2020-04-14T14:16:21.330884+08:00',
 'desc': None,
 'id': 4739,
 'leader': 'dingqin',
 'name': '微信小程序项目2694',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:18:56,953 -- [test_projects.py-->line:63] - ERROR: 用例10,开发人员字段超过50个字符,不通过
2020-04-14 14:18:56,953 -- [test_projects.py-->line:66] - ERROR:  :: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'create_time': '2020-04-14T14:18:56.760353+08:00',
 'desc': '比较紧急',
 'id': 4741,
 'leader': 'dingqin',
 'name': '微信小程序项目6618',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4741, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:18:56.760353+08:00',
+  'desc': '比较紧急',
+  'id': 4741,
+  'leader': 'dingqin',
+  'name': '微信小程序项目6618',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'create_time': '2020-04-14T14:18:56.760353+08:00',
 'desc': '比较紧急',
 'id': 4741,
 'leader': 'dingqin',
 'name': '微信小程序项目6618',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:18:57,854 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:18:57,854 -- [test_projects.py-->line:66] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:18:57.667236+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4742,
 'leader': 'dingqin',
 'name': '微信小程序项目7434',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4742, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:18:57.667236+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4742,
+  'leader': 'dingqin',
+  'name': '微信小程序项目7434',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:18:57.667236+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4742,
 'leader': 'dingqin',
 'name': '微信小程序项目7434',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:18:58,086 -- [test_projects.py-->line:63] - ERROR: 用例15,描述字段为空,不通过
2020-04-14 14:18:58,086 -- [test_projects.py-->line:66] - ERROR:  :: {'name': '微信小程序项目6246'} != {'create_time': '2020-04-14T14:18:57.900302+08:00',
 'desc': None,
 'id': 4743,
 'leader': 'dingqin',
 'name': '微信小程序项目6246',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': '微信小程序项目6246'} != {'id': 4743, 'create_time': '2020-04-14T14:[152 chars]None}
+ {'create_time': '2020-04-14T14:18:57.900302+08:00',
+  'desc': None,
+  'id': 4743,
+  'leader': 'dingqin',
- {'name': '微信小程序项目6246'}
? ^                     ^

+  'name': '微信小程序项目6246',
? ^                     ^

+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': '微信小程序项目6246'} != {'create_time': '2020-04-14T14:18:57.900302+08:00',
 'desc': None,
 'id': 4743,
 'leader': 'dingqin',
 'name': '微信小程序项目6246',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:21:48,711 -- [test_projects.py-->line:63] - ERROR: 用例10,开发人员字段超过50个字符,不通过
2020-04-14 14:21:48,712 -- [test_projects.py-->line:66] - ERROR:  :: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'create_time': '2020-04-14T14:21:48.518404+08:00',
 'desc': '比较紧急',
 'id': 4745,
 'leader': 'dingqin',
 'name': '微信小程序项目305',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4745, 'create_time': '2020-04-14T14:[153 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:21:48.518404+08:00',
+  'desc': '比较紧急',
+  'id': 4745,
+  'leader': 'dingqin',
+  'name': '微信小程序项目305',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'create_time': '2020-04-14T14:21:48.518404+08:00',
 'desc': '比较紧急',
 'id': 4745,
 'leader': 'dingqin',
 'name': '微信小程序项目305',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:21:49,580 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:21:49,580 -- [test_projects.py-->line:66] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:21:49.402337+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4746,
 'leader': 'dingqin',
 'name': '微信小程序项目637',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4746, 'create_time': '2020-04-14T14:[293 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:21:49.402337+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4746,
+  'leader': 'dingqin',
+  'name': '微信小程序项目637',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:21:49.402337+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4746,
 'leader': 'dingqin',
 'name': '微信小程序项目637',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:23:13,773 -- [test_projects.py-->line:63] - ERROR: 用例10,开发人员字段超过50个字符,不通过
2020-04-14 14:23:13,774 -- [test_projects.py-->line:66] - ERROR: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4749, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:23:13.583545+08:00',
+  'desc': '比较紧急',
+  'id': 4749,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1189',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4749, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:23:13.583545+08:00',
+  'desc': '比较紧急',
+  'id': 4749,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1189',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:23:14,637 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:23:14,637 -- [test_projects.py-->line:66] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4750, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:23:14.450295+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4750,
+  'leader': 'dingqin',
+  'name': '微信小程序项目8025',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4750, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:23:14.450295+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4750,
+  'leader': 'dingqin',
+  'name': '微信小程序项目8025',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:23:15,055 -- [test_register_login.py-->line:63] - ERROR: 用例2,用户名重复,不通过
2020-04-14 14:23:15,056 -- [test_register_login.py-->line:66] - ERROR: {'username': ['已存在一位使用该名字的用户。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'username': ['已存在一位使用该名字的用户。']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
?  +++++++++++++++++++++
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': ['已存在一位使用该名字的用户。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'username': ['已存在一位使用该名字的用户。']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
?  +++++++++++++++++++++

2020-04-14 14:23:15,333 -- [test_register_login.py-->line:63] - ERROR: 用例3,邮箱重复,不通过
2020-04-14 14:23:15,333 -- [test_register_login.py-->line:66] - ERROR: {'email': ['此邮箱已注册']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'email': ['此邮箱已注册']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['此邮箱已注册']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'email': ['此邮箱已注册']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:23:16,844 -- [test_register_login.py-->line:63] - ERROR: 用例8,邮箱为空,不通过
2020-04-14 14:23:16,844 -- [test_register_login.py-->line:66] - ERROR: {'email': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['该字段不能为 null。']}
- {'email': ['该字段不能为 null。']}
+ {'email': ['该字段不能为 null。'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['该字段不能为 null。']}
- {'email': ['该字段不能为 null。']}
+ {'email': ['该字段不能为 null。'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:23:17,426 -- [test_register_login.py-->line:63] - ERROR: 用例10,邮箱格式不符合,不通过
2020-04-14 14:23:17,426 -- [test_register_login.py-->line:66] - ERROR: {'email': ['请输入合法的邮件地址。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['请输入合法的邮件地址。']}
- {'email': ['请输入合法的邮件地址。']}
+ {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['请输入合法的邮件地址。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['请输入合法的邮件地址。']}
- {'email': ['请输入合法的邮件地址。']}
+ {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:23:17,713 -- [test_register_login.py-->line:63] - ERROR: 用例11,两次密码不一致,不通过
2020-04-14 14:23:17,714 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['两次输入密码不正确']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'non_field_errors': ['两次输入密码不正确']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['两次输入密码不正确']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'non_field_errors': ['两次输入密码不正确']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:23:18,002 -- [test_register_login.py-->line:63] - ERROR: 用例12,第一次密码为空,不通过
2020-04-14 14:23:18,002 -- [test_register_login.py-->line:66] - ERROR: {'password': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[35 chars]注册']}
+ {'email': ['此邮箱已注册'],
- {'password': ['该字段不能为 null。']}
? ^                            ^

+  'password': ['该字段不能为 null。'],
? ^                            ^

+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[35 chars]注册']}
+ {'email': ['此邮箱已注册'],
- {'password': ['该字段不能为 null。']}
? ^                            ^

+  'password': ['该字段不能为 null。'],
? ^                            ^

+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:23:18,293 -- [test_register_login.py-->line:63] - ERROR: 用例13,第二次密码为空,不通过
2020-04-14 14:23:18,293 -- [test_register_login.py-->line:66] - ERROR: {'password_confirm': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': [[43 chars]l。']}
+ {'email': ['此邮箱已注册'],
- {'password_confirm': ['该字段不能为 null。']}
? ^                                    ^

+  'password_confirm': ['该字段不能为 null。'],
? ^                                    ^

+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password_confirm': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': [[43 chars]l。']}
+ {'email': ['此邮箱已注册'],
- {'password_confirm': ['该字段不能为 null。']}
? ^                                    ^

+  'password_confirm': ['该字段不能为 null。'],
? ^                                    ^

+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:23:18,574 -- [test_register_login.py-->line:63] - ERROR: 用例14,两次密码都为空,不通过
2020-04-14 14:23:18,575 -- [test_register_login.py-->line:66] - ERROR: {'password': ['该字段不能为 null。'], 'password_co[20 chars]l。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[73 chars]l。']}
- {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']}
+ {'email': ['此邮箱已注册'],
+  'password': ['该字段不能为 null。'],
+  'password_confirm': ['该字段不能为 null。'],
+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。'], 'password_co[20 chars]l。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[73 chars]l。']}
- {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']}
+ {'email': ['此邮箱已注册'],
+  'password': ['该字段不能为 null。'],
+  'password_confirm': ['该字段不能为 null。'],
+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:23:19,141 -- [test_register_login.py-->line:63] - ERROR: 用例16,注册成功,不通过
2020-04-14 14:23:19,142 -- [test_register_login.py-->line:66] - ERROR: 'dingqin' != ['已存在一位使用该名字的用户。']
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 53, in test_register_login
    self.assertEqual(excepted["username"], res["username"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 'dingqin' != ['已存在一位使用该名字的用户。']
2020-04-14 14:23:19,923 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 14:23:19,923 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:23:20,319 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 14:23:20,319 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:25:18,860 -- [test_projects.py-->line:63] - ERROR: 用例10,开发人员字段超过50个字符,不通过
2020-04-14 14:25:18,860 -- [test_projects.py-->line:66] - ERROR:  :: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'create_time': '2020-04-14T14:25:18.673025+08:00',
 'desc': '比较紧急',
 'id': 4754,
 'leader': 'dingqin',
 'name': '微信小程序项目9724',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4754, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:25:18.673025+08:00',
+  'desc': '比较紧急',
+  'id': 4754,
+  'leader': 'dingqin',
+  'name': '微信小程序项目9724',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'create_time': '2020-04-14T14:25:18.673025+08:00',
 'desc': '比较紧急',
 'id': 4754,
 'leader': 'dingqin',
 'name': '微信小程序项目9724',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:25:19,762 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:25:19,762 -- [test_projects.py-->line:66] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:25:19.561534+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4755,
 'leader': 'dingqin',
 'name': '微信小程序项目355',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4755, 'create_time': '2020-04-14T14:[293 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:25:19.561534+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4755,
+  'leader': 'dingqin',
+  'name': '微信小程序项目355',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T14:25:19.561534+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4755,
 'leader': 'dingqin',
 'name': '微信小程序项目355',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 14:25:39,217 -- [test_projects.py-->line:63] - ERROR: 用例10,开发人员字段超过50个字符,不通过
2020-04-14 14:25:39,218 -- [test_projects.py-->line:66] - ERROR: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4758, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:25:39.027288+08:00',
+  'desc': '比较紧急',
+  'id': 4758,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1410',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4758, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:25:39.027288+08:00',
+  'desc': '比较紧急',
+  'id': 4758,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1410',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:25:40,133 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:25:40,133 -- [test_projects.py-->line:66] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4759, 'create_time': '2020-04-14T14:[293 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:25:39.950567+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4759,
+  'leader': 'dingqin',
+  'name': '微信小程序项目167',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4759, 'create_time': '2020-04-14T14:[293 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:25:39.950567+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4759,
+  'leader': 'dingqin',
+  'name': '微信小程序项目167',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:25:40,679 -- [test_register_login.py-->line:63] - ERROR: 用例2,用户名重复,不通过
2020-04-14 14:25:40,679 -- [test_register_login.py-->line:66] - ERROR: {'username': ['已存在一位使用该名字的用户。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'username': ['已存在一位使用该名字的用户。']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
?  +++++++++++++++++++++
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': ['已存在一位使用该名字的用户。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'username': ['已存在一位使用该名字的用户。']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
?  +++++++++++++++++++++

2020-04-14 14:25:40,943 -- [test_register_login.py-->line:63] - ERROR: 用例3,邮箱重复,不通过
2020-04-14 14:25:40,943 -- [test_register_login.py-->line:66] - ERROR: {'email': ['此邮箱已注册']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'email': ['此邮箱已注册']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['此邮箱已注册']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'email': ['此邮箱已注册']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:25:42,285 -- [test_register_login.py-->line:63] - ERROR: 用例8,邮箱为空,不通过
2020-04-14 14:25:42,286 -- [test_register_login.py-->line:66] - ERROR: {'email': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['该字段不能为 null。']}
- {'email': ['该字段不能为 null。']}
+ {'email': ['该字段不能为 null。'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['该字段不能为 null。']}
- {'email': ['该字段不能为 null。']}
+ {'email': ['该字段不能为 null。'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:25:42,815 -- [test_register_login.py-->line:63] - ERROR: 用例10,邮箱格式不符合,不通过
2020-04-14 14:25:42,815 -- [test_register_login.py-->line:66] - ERROR: {'email': ['请输入合法的邮件地址。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['请输入合法的邮件地址。']}
- {'email': ['请输入合法的邮件地址。']}
+ {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['请输入合法的邮件地址。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['请输入合法的邮件地址。']}
- {'email': ['请输入合法的邮件地址。']}
+ {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:25:43,085 -- [test_register_login.py-->line:63] - ERROR: 用例11,两次密码不一致,不通过
2020-04-14 14:25:43,085 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['两次输入密码不正确']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'non_field_errors': ['两次输入密码不正确']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['两次输入密码不正确']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'non_field_errors': ['两次输入密码不正确']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:25:43,354 -- [test_register_login.py-->line:63] - ERROR: 用例12,第一次密码为空,不通过
2020-04-14 14:25:43,354 -- [test_register_login.py-->line:66] - ERROR: {'password': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[35 chars]注册']}
+ {'email': ['此邮箱已注册'],
- {'password': ['该字段不能为 null。']}
? ^                            ^

+  'password': ['该字段不能为 null。'],
? ^                            ^

+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[35 chars]注册']}
+ {'email': ['此邮箱已注册'],
- {'password': ['该字段不能为 null。']}
? ^                            ^

+  'password': ['该字段不能为 null。'],
? ^                            ^

+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:25:43,627 -- [test_register_login.py-->line:63] - ERROR: 用例13,第二次密码为空,不通过
2020-04-14 14:25:43,627 -- [test_register_login.py-->line:66] - ERROR: {'password_confirm': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': [[43 chars]l。']}
+ {'email': ['此邮箱已注册'],
- {'password_confirm': ['该字段不能为 null。']}
? ^                                    ^

+  'password_confirm': ['该字段不能为 null。'],
? ^                                    ^

+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password_confirm': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': [[43 chars]l。']}
+ {'email': ['此邮箱已注册'],
- {'password_confirm': ['该字段不能为 null。']}
? ^                                    ^

+  'password_confirm': ['该字段不能为 null。'],
? ^                                    ^

+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:25:43,898 -- [test_register_login.py-->line:63] - ERROR: 用例14,两次密码都为空,不通过
2020-04-14 14:25:43,899 -- [test_register_login.py-->line:66] - ERROR: {'password': ['该字段不能为 null。'], 'password_co[20 chars]l。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[73 chars]l。']}
- {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']}
+ {'email': ['此邮箱已注册'],
+  'password': ['该字段不能为 null。'],
+  'password_confirm': ['该字段不能为 null。'],
+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。'], 'password_co[20 chars]l。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[73 chars]l。']}
- {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']}
+ {'email': ['此邮箱已注册'],
+  'password': ['该字段不能为 null。'],
+  'password_confirm': ['该字段不能为 null。'],
+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:25:44,431 -- [test_register_login.py-->line:63] - ERROR: 用例16,注册成功,不通过
2020-04-14 14:25:44,431 -- [test_register_login.py-->line:66] - ERROR: 'dingqin' != ['已存在一位使用该名字的用户。']
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 53, in test_register_login
    self.assertEqual(excepted["username"], res["username"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 'dingqin' != ['已存在一位使用该名字的用户。']
2020-04-14 14:25:45,234 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 14:25:45,235 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:25:45,626 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 14:25:45,626 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:26:17,353 -- [test_projects.py-->line:63] - ERROR: 用例10,开发人员字段超过50个字符,不通过
2020-04-14 14:26:17,354 -- [test_projects.py-->line:66] - ERROR: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4762, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:26:17.172146+08:00',
+  'desc': '比较紧急',
+  'id': 4762,
+  'leader': 'dingqin',
+  'name': '微信小程序项目5505',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4762, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:26:17.172146+08:00',
+  'desc': '比较紧急',
+  'id': 4762,
+  'leader': 'dingqin',
+  'name': '微信小程序项目5505',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:26:18,227 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:26:18,227 -- [test_projects.py-->line:66] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4763, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:26:18.033485+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4763,
+  'leader': 'dingqin',
+  'name': '微信小程序项目3831',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4763, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:26:18.033485+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4763,
+  'leader': 'dingqin',
+  'name': '微信小程序项目3831',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:26:18,748 -- [test_register_login.py-->line:63] - ERROR: 用例2,用户名重复,不通过
2020-04-14 14:26:18,748 -- [test_register_login.py-->line:66] - ERROR: {'username': ['已存在一位使用该名字的用户。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'username': ['已存在一位使用该名字的用户。']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
?  +++++++++++++++++++++
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': ['已存在一位使用该名字的用户。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'username': ['已存在一位使用该名字的用户。']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
?  +++++++++++++++++++++

2020-04-14 14:26:19,059 -- [test_register_login.py-->line:63] - ERROR: 用例3,邮箱重复,不通过
2020-04-14 14:26:19,059 -- [test_register_login.py-->line:66] - ERROR: {'email': ['此邮箱已注册']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'email': ['此邮箱已注册']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['此邮箱已注册']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'email': ['此邮箱已注册']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:26:20,459 -- [test_register_login.py-->line:63] - ERROR: 用例8,邮箱为空,不通过
2020-04-14 14:26:20,459 -- [test_register_login.py-->line:66] - ERROR: {'email': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['该字段不能为 null。']}
- {'email': ['该字段不能为 null。']}
+ {'email': ['该字段不能为 null。'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['该字段不能为 null。']}
- {'email': ['该字段不能为 null。']}
+ {'email': ['该字段不能为 null。'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:26:21,050 -- [test_register_login.py-->line:63] - ERROR: 用例10,邮箱格式不符合,不通过
2020-04-14 14:26:21,050 -- [test_register_login.py-->line:66] - ERROR: {'email': ['请输入合法的邮件地址。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['请输入合法的邮件地址。']}
- {'email': ['请输入合法的邮件地址。']}
+ {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['请输入合法的邮件地址。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['请输入合法的邮件地址。']}
- {'email': ['请输入合法的邮件地址。']}
+ {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:26:21,331 -- [test_register_login.py-->line:63] - ERROR: 用例11,两次密码不一致,不通过
2020-04-14 14:26:21,332 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['两次输入密码不正确']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'non_field_errors': ['两次输入密码不正确']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['两次输入密码不正确']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'non_field_errors': ['两次输入密码不正确']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:26:21,610 -- [test_register_login.py-->line:63] - ERROR: 用例12,第一次密码为空,不通过
2020-04-14 14:26:21,610 -- [test_register_login.py-->line:66] - ERROR: {'password': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[35 chars]注册']}
+ {'email': ['此邮箱已注册'],
- {'password': ['该字段不能为 null。']}
? ^                            ^

+  'password': ['该字段不能为 null。'],
? ^                            ^

+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[35 chars]注册']}
+ {'email': ['此邮箱已注册'],
- {'password': ['该字段不能为 null。']}
? ^                            ^

+  'password': ['该字段不能为 null。'],
? ^                            ^

+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:26:21,898 -- [test_register_login.py-->line:63] - ERROR: 用例13,第二次密码为空,不通过
2020-04-14 14:26:21,898 -- [test_register_login.py-->line:66] - ERROR: {'password_confirm': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': [[43 chars]l。']}
+ {'email': ['此邮箱已注册'],
- {'password_confirm': ['该字段不能为 null。']}
? ^                                    ^

+  'password_confirm': ['该字段不能为 null。'],
? ^                                    ^

+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password_confirm': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': [[43 chars]l。']}
+ {'email': ['此邮箱已注册'],
- {'password_confirm': ['该字段不能为 null。']}
? ^                                    ^

+  'password_confirm': ['该字段不能为 null。'],
? ^                                    ^

+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:26:22,184 -- [test_register_login.py-->line:63] - ERROR: 用例14,两次密码都为空,不通过
2020-04-14 14:26:22,184 -- [test_register_login.py-->line:66] - ERROR: {'password': ['该字段不能为 null。'], 'password_co[20 chars]l。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[73 chars]l。']}
- {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']}
+ {'email': ['此邮箱已注册'],
+  'password': ['该字段不能为 null。'],
+  'password_confirm': ['该字段不能为 null。'],
+  'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。'], 'password_co[20 chars]l。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[73 chars]l。']}
- {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']}
+ {'email': ['此邮箱已注册'],
+  'password': ['该字段不能为 null。'],
+  'password_confirm': ['该字段不能为 null。'],
+  'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:26:22,769 -- [test_register_login.py-->line:63] - ERROR: 用例16,注册成功,不通过
2020-04-14 14:26:22,769 -- [test_register_login.py-->line:66] - ERROR: 'dingqin' != ['已存在一位使用该名字的用户。']
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 53, in test_register_login
    self.assertEqual(excepted["username"], res["username"])
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 'dingqin' != ['已存在一位使用该名字的用户。']
2020-04-14 14:26:23,617 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 14:26:23,617 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:26:24,053 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 14:26:24,053 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:28:12,630 -- [test_register_login.py-->line:63] - ERROR: 用例2,用户名重复,不通过
2020-04-14 14:28:12,631 -- [test_register_login.py-->line:66] - ERROR:  :: {'username': ['已存在一位使用该名字的用户。']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': ['已存在一位使用该名字的用户。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'username': ['已存在一位使用该名字的用户。']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
?  +++++++++++++++++++++


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'username': ['已存在一位使用该名字的用户。']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:12,940 -- [test_register_login.py-->line:63] - ERROR: 用例3,邮箱重复,不通过
2020-04-14 14:28:12,940 -- [test_register_login.py-->line:66] - ERROR:  :: {'email': ['此邮箱已注册']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['此邮箱已注册']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'email': ['此邮箱已注册']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'email': ['此邮箱已注册']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:35,833 -- [test_register_login.py-->line:63] - ERROR: 用例10,邮箱格式不符合,不通过
2020-04-14 14:28:35,833 -- [test_register_login.py-->line:66] - ERROR:  :: {'email': ['请输入合法的邮件地址。']} != {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['请输入合法的邮件地址。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['请输入合法的邮件地址。']}
- {'email': ['请输入合法的邮件地址。']}
+ {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'email': ['请输入合法的邮件地址。']} != {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:36,108 -- [test_register_login.py-->line:63] - ERROR: 用例11,两次密码不一致,不通过
2020-04-14 14:28:36,108 -- [test_register_login.py-->line:66] - ERROR:  :: {'non_field_errors': ['两次输入密码不正确']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['两次输入密码不正确']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'non_field_errors': ['两次输入密码不正确']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['两次输入密码不正确']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:36,416 -- [test_register_login.py-->line:63] - ERROR: 用例12,第一次密码为空,不通过
2020-04-14 14:28:36,416 -- [test_register_login.py-->line:66] - ERROR:  :: {'password': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[35 chars]注册']}
+ {'email': ['此邮箱已注册'],
- {'password': ['该字段不能为 null。']}
? ^                            ^

+  'password': ['该字段不能为 null。'],
? ^                            ^

+  'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'password': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:36,722 -- [test_register_login.py-->line:63] - ERROR: 用例13,第二次密码为空,不通过
2020-04-14 14:28:36,722 -- [test_register_login.py-->line:66] - ERROR:  :: {'password_confirm': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password_confirm': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password_confirm': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': [[43 chars]l。']}
+ {'email': ['此邮箱已注册'],
- {'password_confirm': ['该字段不能为 null。']}
? ^                                    ^

+  'password_confirm': ['该字段不能为 null。'],
? ^                                    ^

+  'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'password_confirm': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password_confirm': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:37,032 -- [test_register_login.py-->line:63] - ERROR: 用例14,两次密码都为空,不通过
2020-04-14 14:28:37,033 -- [test_register_login.py-->line:66] - ERROR:  :: {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password': ['该字段不能为 null。'],
 'password_confirm': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。'], 'password_co[20 chars]l。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[73 chars]l。']}
- {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']}
+ {'email': ['此邮箱已注册'],
+  'password': ['该字段不能为 null。'],
+  'password_confirm': ['该字段不能为 null。'],
+  'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password': ['该字段不能为 null。'],
 'password_confirm': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:37,646 -- [test_register_login.py-->line:63] - ERROR: 用例16,注册成功,不通过
2020-04-14 14:28:37,646 -- [test_register_login.py-->line:66] - ERROR:  :: dingqin != ['已存在一位使用该名字的用户。']
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 'dingqin' != ['已存在一位使用该名字的用户。']

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 53, in test_register_login
    self.assertEqual(excepted["username"], res["username"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: dingqin != ['已存在一位使用该名字的用户。']
2020-04-14 14:28:38,479 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 14:28:38,479 -- [test_register_login.py-->line:66] - ERROR:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:28:38,922 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 14:28:38,923 -- [test_register_login.py-->line:66] - ERROR:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:28:57,094 -- [test_register_login.py-->line:63] - ERROR: 用例2,用户名重复,不通过
2020-04-14 14:28:57,095 -- [test_register_login.py-->line:66] - ERROR:  :: {'username': ['已存在一位使用该名字的用户。']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'username': ['已存在一位使用该名字的用户。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'username': ['已存在一位使用该名字的用户。']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
?  +++++++++++++++++++++


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'username': ['已存在一位使用该名字的用户。']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:57,383 -- [test_register_login.py-->line:63] - ERROR: 用例3,邮箱重复,不通过
2020-04-14 14:28:57,383 -- [test_register_login.py-->line:66] - ERROR:  :: {'email': ['此邮箱已注册']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['此邮箱已注册']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'email': ['此邮箱已注册']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'email': ['此邮箱已注册']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:58,756 -- [test_register_login.py-->line:63] - ERROR: 用例8,邮箱为空,不通过
2020-04-14 14:28:58,756 -- [test_register_login.py-->line:66] - ERROR:  :: {'email': ['该字段不能为 null。']} != {'email': ['该字段不能为 null。'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['该字段不能为 null。']}
- {'email': ['该字段不能为 null。']}
+ {'email': ['该字段不能为 null。'], 'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'email': ['该字段不能为 null。']} != {'email': ['该字段不能为 null。'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:59,302 -- [test_register_login.py-->line:63] - ERROR: 用例10,邮箱格式不符合,不通过
2020-04-14 14:28:59,302 -- [test_register_login.py-->line:66] - ERROR:  :: {'email': ['请输入合法的邮件地址。']} != {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'email': ['请输入合法的邮件地址。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['请输入合法的邮件地址。']}
- {'email': ['请输入合法的邮件地址。']}
+ {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'email': ['请输入合法的邮件地址。']} != {'email': ['请输入合法的邮件地址。'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:59,606 -- [test_register_login.py-->line:63] - ERROR: 用例11,两次密码不一致,不通过
2020-04-14 14:28:59,607 -- [test_register_login.py-->line:66] - ERROR:  :: {'non_field_errors': ['两次输入密码不正确']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['两次输入密码不正确']} != {'username': ['已存在一位使用该名字的用户。'], 'email': ['此邮箱已注册']}
- {'non_field_errors': ['两次输入密码不正确']}
+ {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['两次输入密码不正确']} != {'email': ['此邮箱已注册'], 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:28:59,886 -- [test_register_login.py-->line:63] - ERROR: 用例12,第一次密码为空,不通过
2020-04-14 14:28:59,886 -- [test_register_login.py-->line:66] - ERROR:  :: {'password': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[35 chars]注册']}
+ {'email': ['此邮箱已注册'],
- {'password': ['该字段不能为 null。']}
? ^                            ^

+  'password': ['该字段不能为 null。'],
? ^                            ^

+  'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'password': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:29:00,202 -- [test_register_login.py-->line:63] - ERROR: 用例13,第二次密码为空,不通过
2020-04-14 14:29:00,202 -- [test_register_login.py-->line:66] - ERROR:  :: {'password_confirm': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password_confirm': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password_confirm': ['该字段不能为 null。']} != {'username': ['已存在一位使用该名字的用户。'], 'email': [[43 chars]l。']}
+ {'email': ['此邮箱已注册'],
- {'password_confirm': ['该字段不能为 null。']}
? ^                                    ^

+  'password_confirm': ['该字段不能为 null。'],
? ^                                    ^

+  'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'password_confirm': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password_confirm': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:29:00,506 -- [test_register_login.py-->line:63] - ERROR: 用例14,两次密码都为空,不通过
2020-04-14 14:29:00,506 -- [test_register_login.py-->line:66] - ERROR:  :: {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password': ['该字段不能为 null。'],
 'password_confirm': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'password': ['该字段不能为 null。'], 'password_co[20 chars]l。']} != {'username': ['已存在一位使用该名字的用户。'], 'password'[73 chars]l。']}
- {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']}
+ {'email': ['此邮箱已注册'],
+  'password': ['该字段不能为 null。'],
+  'password_confirm': ['该字段不能为 null。'],
+  'username': ['已存在一位使用该名字的用户。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'password': ['该字段不能为 null。'], 'password_confirm': ['该字段不能为 null。']} != {'email': ['此邮箱已注册'],
 'password': ['该字段不能为 null。'],
 'password_confirm': ['该字段不能为 null。'],
 'username': ['已存在一位使用该名字的用户。']}
2020-04-14 14:29:01,063 -- [test_register_login.py-->line:63] - ERROR: 用例16,注册成功,不通过
2020-04-14 14:29:01,063 -- [test_register_login.py-->line:66] - ERROR:  :: dingqin != ['已存在一位使用该名字的用户。']
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 'dingqin' != ['已存在一位使用该名字的用户。']

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 53, in test_register_login
    self.assertEqual(excepted["username"], res["username"])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: dingqin != ['已存在一位使用该名字的用户。']
2020-04-14 14:29:01,873 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 14:29:01,873 -- [test_register_login.py-->line:66] - ERROR:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:29:02,286 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 14:29:02,287 -- [test_register_login.py-->line:66] - ERROR:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:34:47,767 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 14:34:47,768 -- [test_register_login.py-->line:66] - ERROR:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:34:48,187 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 14:34:48,188 -- [test_register_login.py-->line:66] - ERROR:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:35:33,195 -- [test_projects.py-->line:63] - ERROR: 用例10,开发人员字段超过50个字符,不通过
2020-04-14 14:35:33,195 -- [test_projects.py-->line:66] - ERROR: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4766, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:35:32.994703+08:00',
+  'desc': '比较紧急',
+  'id': 4766,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1969',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4766, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:35:32.994703+08:00',
+  'desc': '比较紧急',
+  'id': 4766,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1969',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:35:34,112 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:35:34,113 -- [test_projects.py-->line:66] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4767, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:35:33.920312+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4767,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1329',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4767, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:35:33.920312+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4767,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1329',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:36:00,419 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 14:36:00,420 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:36:00,826 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 14:36:00,827 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:36:34,629 -- [test_projects.py-->line:63] - ERROR: 用例10,开发人员字段超过50个字符,不通过
2020-04-14 14:36:34,629 -- [test_projects.py-->line:66] - ERROR: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4770, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:36:34.423696+08:00',
+  'desc': '比较紧急',
+  'id': 4770,
+  'leader': 'dingqin',
+  'name': '微信小程序项目9445',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'programmer': ['请确保这个字段不能超过 50 个字符。']} != {'id': 4770, 'create_time': '2020-04-14T14:[154 chars]较紧急'}
- {'programmer': ['请确保这个字段不能超过 50 个字符。']}
+ {'create_time': '2020-04-14T14:36:34.423696+08:00',
+  'desc': '比较紧急',
+  'id': 4770,
+  'leader': 'dingqin',
+  'name': '微信小程序项目9445',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:36:35,483 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:36:35,484 -- [test_projects.py-->line:66] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4771, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:36:35.298176+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4771,
+  'leader': 'dingqin',
+  'name': '微信小程序项目3607',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4771, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:36:35.298176+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4771,
+  'leader': 'dingqin',
+  'name': '微信小程序项目3607',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:36:41,604 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 14:36:41,604 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:36:42,018 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 14:36:42,018 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:43:21,493 -- [test_projects.py-->line:63] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 14:43:21,493 -- [test_projects.py-->line:66] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4775, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:43:21.290221+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4775,
+  'leader': 'dingqin',
+  'name': '微信小程序项目5339',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 55, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4775, 'create_time': '2020-04-14T14:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T14:43:21.290221+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4775,
+  'leader': 'dingqin',
+  'name': '微信小程序项目5339',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 14:43:27,073 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 14:43:27,073 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 14:43:27,495 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 14:43:27,495 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 15:13:41,299 -- [test_projects.py-->line:62] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 15:13:41,300 -- [test_projects.py-->line:65] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T15:13:41.083057+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4778,
 'leader': 'dingqin',
 'name': '微信小程序项目8872',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4778, 'create_time': '2020-04-14T15:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T15:13:41.083057+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4778,
+  'leader': 'dingqin',
+  'name': '微信小程序项目8872',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 54, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T15:13:41.083057+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4778,
 'leader': 'dingqin',
 'name': '微信小程序项目8872',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 16:00:05,163 -- [test_interfaces.py-->line:77] - ERROR: 用例10,项目id不存在,不通过
2020-04-14 16:00:05,163 -- [test_interfaces.py-->line:80] - ERROR:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:00:05,483 -- [test_interfaces.py-->line:77] - ERROR: 用例11,项目id为空,不通过
2020-04-14 16:00:05,483 -- [test_interfaces.py-->line:80] - ERROR:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:00:37,978 -- [test_interfaces.py-->line:77] - ERROR: 用例10,项目id不存在,不通过
2020-04-14 16:00:37,978 -- [test_interfaces.py-->line:80] - ERROR:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:00:38,279 -- [test_interfaces.py-->line:77] - ERROR: 用例11,项目id为空,不通过
2020-04-14 16:00:38,280 -- [test_interfaces.py-->line:80] - ERROR:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:07:46,111 -- [test_interfaces.py-->line:77] - ERROR: 用例3,接口名称重复,不通过
2020-04-14 16:07:46,111 -- [test_interfaces.py-->line:80] - ERROR:  :: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:07:46,405 -- [test_interfaces.py-->line:77] - ERROR: 用例4,接口名称超过200个字符,不通过
2020-04-14 16:07:46,405 -- [test_interfaces.py-->line:80] - ERROR:  :: {'name': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['请确保这个字段不能超过 50 个字符。'],
 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['请确保这个字段不能超过 50 个字符。'],
 'request': ['该字段是必填项。']}
2020-04-14 16:07:46,966 -- [test_interfaces.py-->line:77] - ERROR: 用例7,接口名称为空,不通过
2020-04-14 16:07:46,967 -- [test_interfaces.py-->line:80] - ERROR:  :: {'name': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['该字段不能为 null。'],
 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['该字段不能为 null。'],
 'request': ['该字段是必填项。']}
2020-04-14 16:07:47,313 -- [test_interfaces.py-->line:77] - ERROR: 用例8,测试人员超过50个字符,不通过
2020-04-14 16:07:47,313 -- [test_interfaces.py-->line:80] - ERROR:  :: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:07:47,618 -- [test_interfaces.py-->line:77] - ERROR: 用例9,测试人员为空,不通过
2020-04-14 16:07:47,619 -- [test_interfaces.py-->line:80] - ERROR:  :: {'tester': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'tester': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:07:47,907 -- [test_interfaces.py-->line:77] - ERROR: 用例10,项目id不存在,不通过
2020-04-14 16:07:47,908 -- [test_interfaces.py-->line:80] - ERROR:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:07:48,215 -- [test_interfaces.py-->line:77] - ERROR: 用例11,项目id为空,不通过
2020-04-14 16:07:48,215 -- [test_interfaces.py-->line:80] - ERROR:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:07:48,514 -- [test_interfaces.py-->line:77] - ERROR: 用例12,描述超过200个字符,不通过
2020-04-14 16:07:48,515 -- [test_interfaces.py-->line:80] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 69, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:08:44,524 -- [test_interfaces.py-->line:75] - ERROR: 用例1,创建项目成功,不通过
2020-04-14 16:08:44,524 -- [test_interfaces.py-->line:78] - ERROR:  :: 1 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 72, in test_projects
    self.assertEqual(1, res_namecount)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2020-04-14 16:08:45,045 -- [test_interfaces.py-->line:75] - ERROR: 用例3,接口名称重复,不通过
2020-04-14 16:08:45,046 -- [test_interfaces.py-->line:78] - ERROR:  :: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:08:45,352 -- [test_interfaces.py-->line:75] - ERROR: 用例4,接口名称超过200个字符,不通过
2020-04-14 16:08:45,352 -- [test_interfaces.py-->line:78] - ERROR:  :: {'name': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['请确保这个字段不能超过 50 个字符。'],
 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['请确保这个字段不能超过 50 个字符。'],
 'request': ['该字段是必填项。']}
2020-04-14 16:08:45,926 -- [test_interfaces.py-->line:75] - ERROR: 用例7,接口名称为空,不通过
2020-04-14 16:08:45,927 -- [test_interfaces.py-->line:78] - ERROR:  :: {'name': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['该字段不能为 null。'],
 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['该字段不能为 null。'],
 'request': ['该字段是必填项。']}
2020-04-14 16:08:46,215 -- [test_interfaces.py-->line:75] - ERROR: 用例8,测试人员超过50个字符,不通过
2020-04-14 16:08:46,216 -- [test_interfaces.py-->line:78] - ERROR:  :: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:08:46,522 -- [test_interfaces.py-->line:75] - ERROR: 用例9,测试人员为空,不通过
2020-04-14 16:08:46,523 -- [test_interfaces.py-->line:78] - ERROR:  :: {'tester': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'tester': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:08:46,812 -- [test_interfaces.py-->line:75] - ERROR: 用例10,项目id不存在,不通过
2020-04-14 16:08:46,812 -- [test_interfaces.py-->line:78] - ERROR:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:08:47,115 -- [test_interfaces.py-->line:75] - ERROR: 用例11,项目id为空,不通过
2020-04-14 16:08:47,116 -- [test_interfaces.py-->line:78] - ERROR:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:08:47,421 -- [test_interfaces.py-->line:75] - ERROR: 用例12,描述超过200个字符,不通过
2020-04-14 16:08:47,422 -- [test_interfaces.py-->line:78] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:11:19,582 -- [test_interfaces.py-->line:75] - ERROR: 用例1,创建项目成功,不通过
2020-04-14 16:11:19,582 -- [test_interfaces.py-->line:78] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 72, in test_projects
    self.assertEqual(1, res_namecount)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-14 16:11:20,080 -- [test_interfaces.py-->line:75] - ERROR: 用例3,接口名称重复,不通过
2020-04-14 16:11:20,081 -- [test_interfaces.py-->line:78] - ERROR: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:11:20,363 -- [test_interfaces.py-->line:75] - ERROR: 用例4,接口名称超过200个字符,不通过
2020-04-14 16:11:20,363 -- [test_interfaces.py-->line:78] - ERROR: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}
2020-04-14 16:11:20,895 -- [test_interfaces.py-->line:75] - ERROR: 用例7,接口名称为空,不通过
2020-04-14 16:11:20,895 -- [test_interfaces.py-->line:78] - ERROR: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}
2020-04-14 16:11:21,196 -- [test_interfaces.py-->line:75] - ERROR: 用例8,测试人员超过50个字符,不通过
2020-04-14 16:11:21,196 -- [test_interfaces.py-->line:78] - ERROR: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:11:21,499 -- [test_interfaces.py-->line:75] - ERROR: 用例9,测试人员为空,不通过
2020-04-14 16:11:21,499 -- [test_interfaces.py-->line:78] - ERROR: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:11:21,781 -- [test_interfaces.py-->line:75] - ERROR: 用例10,项目id不存在,不通过
2020-04-14 16:11:21,781 -- [test_interfaces.py-->line:78] - ERROR: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:11:22,066 -- [test_interfaces.py-->line:75] - ERROR: 用例11,项目id为空,不通过
2020-04-14 16:11:22,066 -- [test_interfaces.py-->line:78] - ERROR: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:11:22,364 -- [test_interfaces.py-->line:75] - ERROR: 用例12,描述超过200个字符,不通过
2020-04-14 16:11:22,364 -- [test_interfaces.py-->line:78] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces.py", line 67, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:11:26,600 -- [test_projects.py-->line:62] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 16:11:26,600 -- [test_projects.py-->line:65] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4790, 'create_time': '2020-04-14T16:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T16:11:26.358244+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4790,
+  'leader': 'dingqin',
+  'name': '微信小程序项目9108',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects.py", line 54, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4790, 'create_time': '2020-04-14T16:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T16:11:26.358244+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4790,
+  'leader': 'dingqin',
+  'name': '微信小程序项目9108',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 16:11:32,382 -- [test_register_login.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 16:11:32,382 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 16:11:32,804 -- [test_register_login.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 16:11:32,804 -- [test_register_login.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 16:14:48,491 -- [test_interfaces05.py-->line:75] - ERROR: 用例1,创建项目成功,不通过
2020-04-14 16:14:48,491 -- [test_interfaces05.py-->line:78] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 72, in test_interfaces
    self.assertEqual(1, res_namecount)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-14 16:14:49,012 -- [test_interfaces05.py-->line:75] - ERROR: 用例3,接口名称重复,不通过
2020-04-14 16:14:49,012 -- [test_interfaces05.py-->line:78] - ERROR: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:14:49,302 -- [test_interfaces05.py-->line:75] - ERROR: 用例4,接口名称超过200个字符,不通过
2020-04-14 16:14:49,303 -- [test_interfaces05.py-->line:78] - ERROR: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}
2020-04-14 16:14:49,888 -- [test_interfaces05.py-->line:75] - ERROR: 用例7,接口名称为空,不通过
2020-04-14 16:14:49,888 -- [test_interfaces05.py-->line:78] - ERROR: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}
2020-04-14 16:14:50,176 -- [test_interfaces05.py-->line:75] - ERROR: 用例8,测试人员超过50个字符,不通过
2020-04-14 16:14:50,177 -- [test_interfaces05.py-->line:78] - ERROR: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:14:50,467 -- [test_interfaces05.py-->line:75] - ERROR: 用例9,测试人员为空,不通过
2020-04-14 16:14:50,467 -- [test_interfaces05.py-->line:78] - ERROR: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:14:50,761 -- [test_interfaces05.py-->line:75] - ERROR: 用例10,项目id不存在,不通过
2020-04-14 16:14:50,762 -- [test_interfaces05.py-->line:78] - ERROR: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:14:51,059 -- [test_interfaces05.py-->line:75] - ERROR: 用例11,项目id为空,不通过
2020-04-14 16:14:51,059 -- [test_interfaces05.py-->line:78] - ERROR: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:14:51,360 -- [test_interfaces05.py-->line:75] - ERROR: 用例12,描述超过200个字符,不通过
2020-04-14 16:14:51,361 -- [test_interfaces05.py-->line:78] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:14:55,252 -- [test_projects04.py-->line:62] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 16:14:55,252 -- [test_projects04.py-->line:65] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4794, 'create_time': '2020-04-14T16:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T16:14:55.037154+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4794,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1536',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 54, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4794, 'create_time': '2020-04-14T16:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T16:14:55.037154+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4794,
+  'leader': 'dingqin',
+  'name': '微信小程序项目1536',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 16:15:01,126 -- [test_register_login01.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 16:15:01,126 -- [test_register_login01.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 16:15:01,542 -- [test_register_login01.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 16:15:01,542 -- [test_register_login01.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 16:15:54,392 -- [test_projects04.py-->line:62] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 16:15:54,392 -- [test_projects04.py-->line:65] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T16:15:54.165754+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4797,
 'leader': 'dingqin',
 'name': '微信小程序项目7644',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4797, 'create_time': '2020-04-14T16:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T16:15:54.165754+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4797,
+  'leader': 'dingqin',
+  'name': '微信小程序项目7644',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 54, in test_projects
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'create_time': '2020-04-14T16:15:54.165754+08:00',
 'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
 'id': 4797,
 'leader': 'dingqin',
 'name': '微信小程序项目7644',
 'programmer': 'dingqin13',
 'publish_app': '每周三晚上12点发布',
 'tester': 'dingqin12'}
2020-04-14 16:16:05,316 -- [test_interfaces05.py-->line:75] - ERROR: 用例1,创建项目成功,不通过
2020-04-14 16:16:05,316 -- [test_interfaces05.py-->line:78] - ERROR:  :: 1 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 72, in test_interfaces
    self.assertEqual(1, res_namecount)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2020-04-14 16:16:06,061 -- [test_interfaces05.py-->line:75] - ERROR: 用例3,接口名称重复,不通过
2020-04-14 16:16:06,062 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:16:06,349 -- [test_interfaces05.py-->line:75] - ERROR: 用例4,接口名称超过200个字符,不通过
2020-04-14 16:16:06,349 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'name': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['请确保这个字段不能超过 50 个字符。'],
 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['请确保这个字段不能超过 50 个字符。'],
 'request': ['该字段是必填项。']}
2020-04-14 16:16:06,901 -- [test_interfaces05.py-->line:75] - ERROR: 用例7,接口名称为空,不通过
2020-04-14 16:16:06,901 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'name': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['该字段不能为 null。'],
 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['该字段不能为 null。'],
 'request': ['该字段是必填项。']}
2020-04-14 16:16:07,232 -- [test_interfaces05.py-->line:75] - ERROR: 用例8,测试人员超过50个字符,不通过
2020-04-14 16:16:07,232 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:16:07,541 -- [test_interfaces05.py-->line:75] - ERROR: 用例9,测试人员为空,不通过
2020-04-14 16:16:07,541 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'tester': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'tester': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:16:07,821 -- [test_interfaces05.py-->line:75] - ERROR: 用例10,项目id不存在,不通过
2020-04-14 16:16:07,821 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:16:08,103 -- [test_interfaces05.py-->line:75] - ERROR: 用例11,项目id为空,不通过
2020-04-14 16:16:08,103 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:16:08,409 -- [test_interfaces05.py-->line:75] - ERROR: 用例12,描述超过200个字符,不通过
2020-04-14 16:16:08,410 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:18:00,154 -- [test_interfaces05.py-->line:75] - ERROR: 用例3,接口名称重复,不通过
2020-04-14 16:18:00,154 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:18:00,445 -- [test_interfaces05.py-->line:75] - ERROR: 用例4,接口名称超过200个字符,不通过
2020-04-14 16:18:00,446 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'name': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['请确保这个字段不能超过 50 个字符。'],
 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['请确保这个字段不能超过 50 个字符。'],
 'request': ['该字段是必填项。']}
2020-04-14 16:18:01,003 -- [test_interfaces05.py-->line:75] - ERROR: 用例7,接口名称为空,不通过
2020-04-14 16:18:01,004 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'name': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['该字段不能为 null。'],
 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['该字段不能为 null。'],
 'request': ['该字段是必填项。']}
2020-04-14 16:18:01,296 -- [test_interfaces05.py-->line:75] - ERROR: 用例8,测试人员超过50个字符,不通过
2020-04-14 16:18:01,297 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:18:01,596 -- [test_interfaces05.py-->line:75] - ERROR: 用例9,测试人员为空,不通过
2020-04-14 16:18:01,597 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'tester': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'tester': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:18:01,896 -- [test_interfaces05.py-->line:75] - ERROR: 用例10,项目id不存在,不通过
2020-04-14 16:18:01,896 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:18:02,194 -- [test_interfaces05.py-->line:75] - ERROR: 用例11,项目id为空,不通过
2020-04-14 16:18:02,195 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:18:02,480 -- [test_interfaces05.py-->line:75] - ERROR: 用例12,描述超过200个字符,不通过
2020-04-14 16:18:02,480 -- [test_interfaces05.py-->line:78] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:20:22,350 -- [test_interfaces05.py-->line:75] - ERROR: 用例3,接口名称重复,不通过
2020-04-14 16:20:22,350 -- [test_interfaces05.py-->line:78] - ERROR: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:20:22,653 -- [test_interfaces05.py-->line:75] - ERROR: 用例4,接口名称超过200个字符,不通过
2020-04-14 16:20:22,653 -- [test_interfaces05.py-->line:78] - ERROR: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}
2020-04-14 16:20:23,238 -- [test_interfaces05.py-->line:75] - ERROR: 用例7,接口名称为空,不通过
2020-04-14 16:20:23,238 -- [test_interfaces05.py-->line:78] - ERROR: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}
2020-04-14 16:20:23,540 -- [test_interfaces05.py-->line:75] - ERROR: 用例8,测试人员超过50个字符,不通过
2020-04-14 16:20:23,540 -- [test_interfaces05.py-->line:78] - ERROR: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:20:23,844 -- [test_interfaces05.py-->line:75] - ERROR: 用例9,测试人员为空,不通过
2020-04-14 16:20:23,845 -- [test_interfaces05.py-->line:78] - ERROR: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:20:24,146 -- [test_interfaces05.py-->line:75] - ERROR: 用例10,项目id不存在,不通过
2020-04-14 16:20:24,146 -- [test_interfaces05.py-->line:78] - ERROR: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:20:24,459 -- [test_interfaces05.py-->line:75] - ERROR: 用例11,项目id为空,不通过
2020-04-14 16:20:24,459 -- [test_interfaces05.py-->line:78] - ERROR: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:20:24,761 -- [test_interfaces05.py-->line:75] - ERROR: 用例12,描述超过200个字符,不通过
2020-04-14 16:20:24,761 -- [test_interfaces05.py-->line:78] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:20:28,587 -- [test_projects04.py-->line:62] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 16:20:28,587 -- [test_projects04.py-->line:65] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4803, 'create_time': '2020-04-14T16:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T16:20:28.367615+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4803,
+  'leader': 'dingqin',
+  'name': '微信小程序项目5649',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 54, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4803, 'create_time': '2020-04-14T16:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T16:20:28.367615+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4803,
+  'leader': 'dingqin',
+  'name': '微信小程序项目5649',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 16:20:34,340 -- [test_register_login01.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 16:20:34,340 -- [test_register_login01.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 16:20:34,746 -- [test_register_login01.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 16:20:34,746 -- [test_register_login01.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 16:27:04,680 -- [test_interfaces05.py-->line:75] - ERROR: 用例3,接口名称重复,不通过
2020-04-14 16:27:04,681 -- [test_interfaces05.py-->line:78] - ERROR: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:27:05,044 -- [test_interfaces05.py-->line:75] - ERROR: 用例4,接口名称超过200个字符,不通过
2020-04-14 16:27:05,044 -- [test_interfaces05.py-->line:78] - ERROR: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}
2020-04-14 16:27:05,346 -- [test_interfaces05.py-->line:75] - ERROR: 用例5,接口名称为空,不通过
2020-04-14 16:27:05,346 -- [test_interfaces05.py-->line:78] - ERROR: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}
2020-04-14 16:27:05,645 -- [test_interfaces05.py-->line:75] - ERROR: 用例6,测试人员超过50个字符,不通过
2020-04-14 16:27:05,645 -- [test_interfaces05.py-->line:78] - ERROR: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:27:05,947 -- [test_interfaces05.py-->line:75] - ERROR: 用例7,测试人员为空,不通过
2020-04-14 16:27:05,947 -- [test_interfaces05.py-->line:78] - ERROR: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:27:06,244 -- [test_interfaces05.py-->line:75] - ERROR: 用例8,项目id不存在,不通过
2020-04-14 16:27:06,244 -- [test_interfaces05.py-->line:78] - ERROR: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:27:06,540 -- [test_interfaces05.py-->line:75] - ERROR: 用例9,项目id为空,不通过
2020-04-14 16:27:06,540 -- [test_interfaces05.py-->line:78] - ERROR: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:27:06,876 -- [test_interfaces05.py-->line:75] - ERROR: 用例10,描述超过200个字符,不通过
2020-04-14 16:27:06,876 -- [test_interfaces05.py-->line:78] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 67, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:27:10,705 -- [test_projects04.py-->line:62] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 16:27:10,706 -- [test_projects04.py-->line:65] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4807, 'create_time': '2020-04-14T16:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T16:27:10.467399+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4807,
+  'leader': 'dingqin',
+  'name': '微信小程序项目9404',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 54, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4807, 'create_time': '2020-04-14T16:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T16:27:10.467399+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4807,
+  'leader': 'dingqin',
+  'name': '微信小程序项目9404',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 16:27:37,416 -- [test_register_login01.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 16:27:37,416 -- [test_register_login01.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 16:27:37,826 -- [test_register_login01.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 16:27:37,826 -- [test_register_login01.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 16:31:07,517 -- [test_interfaces05.py-->line:78] - ERROR: 用例3,接口名称重复,不通过
2020-04-14 16:31:07,518 -- [test_interfaces05.py-->line:81] - ERROR:  :: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'name': ['具有 接口名称 的 接口信息 已存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 70, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['具有 接口名称 的 接口信息 已存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:31:07,807 -- [test_interfaces05.py-->line:78] - ERROR: 用例4,接口名称超过200个字符,不通过
2020-04-14 16:31:07,807 -- [test_interfaces05.py-->line:81] - ERROR:  :: {'name': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['请确保这个字段不能超过 50 个字符。'],
 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[13 chars]不能超过 200 个字符。']} != {'nam[13 chars]不能超过 50 个字符。'], 'interface': ['该字段是必填项。'], 'au[40 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['请确保这个字段不能超过 200 个字符。']}
? ^                      ^ -       ^

+  'name': ['请确保这个字段不能超过 50 个字符。'],
? ^                      ^        ^

+  'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 70, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['请确保这个字段不能超过 50 个字符。'],
 'request': ['该字段是必填项。']}
2020-04-14 16:31:08,085 -- [test_interfaces05.py-->line:78] - ERROR: 用例5,接口名称为空,不通过
2020-04-14 16:31:08,085 -- [test_interfaces05.py-->line:81] - ERROR:  :: {'name': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['该字段不能为 null。'],
 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'nam[15 chars]ll。']} != {'nam[15 chars]ll。'], 'interface': ['该字段是必填项。'], 'author': ['[31 chars]项。']}
+ {'author': ['该字段是必填项。'],
+  'interface': ['该字段是必填项。'],
- {'name': ['该字段不能为 null。']}
? ^                        ^

+  'name': ['该字段不能为 null。'],
? ^                        ^

+  'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 70, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'name': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'],
 'interface': ['该字段是必填项。'],
 'name': ['该字段不能为 null。'],
 'request': ['该字段是必填项。']}
2020-04-14 16:31:08,377 -- [test_interfaces05.py-->line:78] - ERROR: 用例6,测试人员超过50个字符,不通过
2020-04-14 16:31:08,377 -- [test_interfaces05.py-->line:81] - ERROR:  :: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['请确保这个字段不能超过 50 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 70, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'tester': ['请确保这个字段不能超过 50 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:31:08,656 -- [test_interfaces05.py-->line:78] - ERROR: 用例7,测试人员为空,不通过
2020-04-14 16:31:08,656 -- [test_interfaces05.py-->line:81] - ERROR:  :: {'tester': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'tester': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'tester': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 70, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'tester': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:31:08,944 -- [test_interfaces05.py-->line:78] - ERROR: 用例8,项目id不存在,不通过
2020-04-14 16:31:08,944 -- [test_interfaces05.py-->line:81] - ERROR:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['无效主键 “477088” － 对象不存在。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 70, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['无效主键 “477088” － 对象不存在。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:31:09,224 -- [test_interfaces05.py-->line:78] - ERROR: 用例9,项目id为空,不通过
2020-04-14 16:31:09,225 -- [test_interfaces05.py-->line:81] - ERROR:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'project_id': ['该字段不能为 null。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'project_id': ['该字段不能为 null。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 70, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'project_id': ['该字段不能为 null。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:31:09,507 -- [test_interfaces05.py-->line:78] - ERROR: 用例10,描述超过200个字符,不通过
2020-04-14 16:31:09,507 -- [test_interfaces05.py-->line:81] - ERROR:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'interface': ['该字段是必填项。'], 'author': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 70, in test_interfaces
    self.assertEqual(excepted, res)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'author': ['该字段是必填项。'], 'interface': ['该字段是必填项。'], 'request': ['该字段是必填项。']}
2020-04-14 16:46:19,040 -- [test_interfaces05.py-->line:76] - ERROR: 用例1,创建项目成功,不通过
2020-04-14 16:46:19,040 -- [test_interfaces05.py-->line:79] - ERROR:  :: 1 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 73, in test_interfaces
    self.assertEqual(1, res_namecount)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2020-04-14 16:46:41,707 -- [test_interfaces05.py-->line:76] - ERROR: 用例1,创建项目成功,不通过
2020-04-14 16:46:41,708 -- [test_interfaces05.py-->line:79] - ERROR: 1 != 0
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces05.py", line 73, in test_interfaces
    self.assertEqual(1, res_namecount)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-04-14 16:46:48,130 -- [test_projects04.py-->line:62] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-14 16:46:48,131 -- [test_projects04.py-->line:65] - ERROR: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4814, 'create_time': '2020-04-14T16:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T16:46:47.907024+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4814,
+  'leader': 'dingqin',
+  'name': '微信小程序项目7144',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 54, in test_projects
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'desc': ['请确保这个字段不能超过 200 个字符。']} != {'id': 4814, 'create_time': '2020-04-14T16:[294 chars]较紧急'}
- {'desc': ['请确保这个字段不能超过 200 个字符。']}
+ {'create_time': '2020-04-14T16:46:47.907024+08:00',
+  'desc': '比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急',
+  'id': 4814,
+  'leader': 'dingqin',
+  'name': '微信小程序项目7144',
+  'programmer': 'dingqin13',
+  'publish_app': '每周三晚上12点发布',
+  'tester': 'dingqin12'}
2020-04-14 16:46:53,846 -- [test_register_login01.py-->line:63] - ERROR: 用例18,账号错误,不通过
2020-04-14 16:46:53,846 -- [test_register_login01.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-14 16:46:54,305 -- [test_register_login01.py-->line:63] - ERROR: 用例19,密码错误,不通过
2020-04-14 16:46:54,305 -- [test_register_login01.py-->line:66] - ERROR: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 55, in test_register_login
    self.assertEqual(excepted, res)
  File "D:\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'non_field_errors': ['账号或密码错误。']} != {'non_field_errors': ['无法使用提供的认证信息登录。']}
- {'non_field_errors': ['账号或密码错误。']}
+ {'non_field_errors': ['无法使用提供的认证信息登录。']}
2020-04-15 10:24:37,295 -- [test_register_login01.py-->line:66] - ERROR: 用例18,账号错误,不通过
2020-04-15 10:24:37,375 -- [test_register_login01.py-->line:69] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 58, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:24:37,825 -- [test_register_login01.py-->line:66] - ERROR: 用例19,密码错误,不通过
2020-04-15 10:24:37,825 -- [test_register_login01.py-->line:69] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 58, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:33:24,342 -- [test_projects04.py-->line:59] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-15 10:33:24,343 -- [test_projects04.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:34:42,057 -- [test_projects04.py-->line:59] - ERROR: 用例14,描述字段超过200个字符,不通过
2020-04-15 10:34:42,057 -- [test_projects04.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:34:49,642 -- [test_register_login01.py-->line:62] - ERROR: 用例18,账号错误,不通过
2020-04-15 10:34:49,643 -- [test_register_login01.py-->line:65] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 54, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:34:50,129 -- [test_register_login01.py-->line:62] - ERROR: 用例19,密码错误,不通过
2020-04-15 10:34:50,130 -- [test_register_login01.py-->line:65] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 54, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:37:59,342 -- [test_projects04.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-15 10:37:59,343 -- [test_projects04.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:38:06,892 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-15 10:38:06,892 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:38:07,344 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-15 10:38:07,344 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:40:30,786 -- [test_projects04.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-15 10:40:30,786 -- [test_projects04.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:40:37,489 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-15 10:40:37,490 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:40:38,316 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-15 10:40:38,316 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:47:49,041 -- [test_projects04.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-15 10:47:49,041 -- [test_projects04.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:48:39,705 -- [test_projects04.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-15 10:48:39,705 -- [test_projects04.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:48:48,594 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-15 10:48:48,594 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 10:48:49,032 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-15 10:48:49,032 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 11:01:20,462 -- [test_testcases06.py-->line:74] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-15 11:01:20,462 -- [test_testcases06.py-->line:77] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_testcases06.py", line 66, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 11:01:52,737 -- [test_projects04.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-15 11:01:52,738 -- [test_projects04.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 11:02:02,834 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-15 11:02:02,834 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 11:02:03,300 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-15 11:02:03,301 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 11:20:28,580 -- [test_projects04.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-15 11:20:28,580 -- [test_projects04.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects04.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 11:20:39,221 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-15 11:20:39,222 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 11:20:40,065 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-15 11:20:40,066 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 15:43:15,451 -- [test_projects03.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-15 15:43:15,451 -- [test_projects03.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 15:43:21,201 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-15 15:43:21,201 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-15 15:43:21,612 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-15 15:43:21,612 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:20:03,973 -- [test_register_login01.py-->line:61] - ERROR: 用例17,账号错误,不通过
2020-04-16 12:20:03,990 -- [test_register_login01.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 53, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:20:04,472 -- [test_register_login01.py-->line:61] - ERROR: 用例18,密码错误,不通过
2020-04-16 12:20:04,473 -- [test_register_login01.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 53, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:21:00,871 -- [test_register_login01.py-->line:62] - ERROR: 用例16,登录成功,不通过
2020-04-16 12:21:00,872 -- [test_register_login01.py-->line:65] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 54, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:21:01,405 -- [test_register_login01.py-->line:62] - ERROR: 用例17,账号错误,不通过
2020-04-16 12:21:01,405 -- [test_register_login01.py-->line:65] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 54, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:21:01,926 -- [test_register_login01.py-->line:62] - ERROR: 用例18,密码错误,不通过
2020-04-16 12:21:01,926 -- [test_register_login01.py-->line:65] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 54, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:23:01,859 -- [test_projects03.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-16 12:23:01,860 -- [test_projects03.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:23:08,428 -- [test_register_login01.py-->line:62] - ERROR: 用例16,登录成功,不通过
2020-04-16 12:23:08,428 -- [test_register_login01.py-->line:65] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 54, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:23:08,939 -- [test_register_login01.py-->line:62] - ERROR: 用例17,账号错误,不通过
2020-04-16 12:23:08,940 -- [test_register_login01.py-->line:65] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 54, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:23:09,406 -- [test_register_login01.py-->line:62] - ERROR: 用例18,密码错误,不通过
2020-04-16 12:23:09,407 -- [test_register_login01.py-->line:65] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 54, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:28:23,698 -- [test_register_login01.py-->line:62] - ERROR: 用例16,登录成功,不通过
2020-04-16 12:28:23,699 -- [test_register_login01.py-->line:65] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 54, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:28:24,576 -- [test_register_login01.py-->line:62] - ERROR: 用例17,账号错误,不通过
2020-04-16 12:28:24,576 -- [test_register_login01.py-->line:65] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 54, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:28:25,081 -- [test_register_login01.py-->line:62] - ERROR: 用例18,密码错误,不通过
2020-04-16 12:28:25,082 -- [test_register_login01.py-->line:65] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 54, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:32:46,566 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-16 12:32:46,566 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 12:32:47,069 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-16 12:32:47,069 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 13:32:08,073 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-16 13:32:08,073 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-16 13:32:08,529 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-16 13:32:08,529 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:32:22,562 -- [test_register_login01.py-->line:60] - ERROR: 用例10,两次密码不一致,不通过
2020-04-18 11:32:22,633 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:32:24,463 -- [test_register_login01.py-->line:60] - ERROR: 用例15,注册成功,不通过
2020-04-18 11:32:24,463 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:32:24,944 -- [test_register_login01.py-->line:60] - ERROR: 用例16,登录成功,不通过
2020-04-18 11:32:24,944 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:32:25,446 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-18 11:32:25,446 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:32:25,898 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-18 11:32:25,899 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:33:52,015 -- [test_projects03.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-18 11:33:52,015 -- [test_projects03.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:33:55,884 -- [test_register_login01.py-->line:60] - ERROR: 用例10,两次密码不一致,不通过
2020-04-18 11:33:55,884 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:33:57,607 -- [test_register_login01.py-->line:60] - ERROR: 用例15,注册成功,不通过
2020-04-18 11:33:57,607 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:33:58,078 -- [test_register_login01.py-->line:60] - ERROR: 用例16,登录成功,不通过
2020-04-18 11:33:58,078 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:33:58,522 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-18 11:33:58,522 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:33:58,999 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-18 11:33:59,000 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:39:34,664 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-18 11:39:34,664 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:39:36,313 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-18 11:39:36,314 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:41:35,809 -- [test_projects03.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-18 11:41:35,809 -- [test_projects03.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:42:02,929 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-18 11:42:02,929 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:42:03,394 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-18 11:42:03,395 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:43:18,927 -- [test_projects03.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-18 11:43:18,927 -- [test_projects03.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:43:25,376 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-18 11:43:25,376 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 11:43:25,811 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-18 11:43:25,811 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 12:12:15,562 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-18 12:12:15,562 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 12:12:16,010 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-18 12:12:16,010 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 12:18:22,198 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-18 12:18:22,198 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 12:18:22,619 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-18 12:18:22,619 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 12:19:10,563 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-18 12:19:10,563 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-18 12:19:11,000 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-18 12:19:11,000 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-21 16:24:21,438 -- [test_register_login01.py-->line:60] - ERROR: 用例1,用户名重复,不通过
2020-04-21 16:24:21,463 -- [test_register_login01.py-->line:63] - ERROR: ['已存在一位使用该名字的用户。']不等于dingqin,断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("{}不等于{},断言不通过".format(excepted[key],res[key]))
AssertionError: ['已存在一位使用该名字的用户。']不等于dingqin,断言不通过
2020-04-21 16:24:32,611 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-21 16:24:32,612 -- [test_register_login01.py-->line:63] - ERROR: ['账号或密码错误。']不等于['无法使用提供的认证信息登录。'],断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("{}不等于{},断言不通过".format(excepted[key],res[key]))
AssertionError: ['账号或密码错误。']不等于['无法使用提供的认证信息登录。'],断言不通过
2020-04-21 16:24:33,422 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-21 16:24:33,423 -- [test_register_login01.py-->line:63] - ERROR: ['账号或密码错误。']不等于['无法使用提供的认证信息登录。'],断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("{}不等于{},断言不通过".format(excepted[key],res[key]))
AssertionError: ['账号或密码错误。']不等于['无法使用提供的认证信息登录。'],断言不通过
2020-04-21 16:25:33,179 -- [test_interfaces04.py-->line:74] - ERROR: 用例3,接口名称重复,不通过
2020-04-21 16:25:33,180 -- [test_interfaces04.py-->line:77] - ERROR: ['具有 接口名称 的 接口信息 已存在。']不等于登录接口,断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces04.py", line 66, in test_interfaces
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("{}不等于{},断言不通过".format(excepted[key],res[key]))
AssertionError: ['具有 接口名称 的 接口信息 已存在。']不等于登录接口,断言不通过
2020-04-21 16:25:44,307 -- [test_projects03.py-->line:59] - ERROR: 用例2,项目名称重复,不通过
2020-04-21 16:25:44,308 -- [test_projects03.py-->line:62] - ERROR: ['具有 项目名称 的 项目信息 已存在。']不等于微信小程序项目,断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("{}不等于{},断言不通过".format(excepted[key],res[key]))
AssertionError: ['具有 项目名称 的 项目信息 已存在。']不等于微信小程序项目,断言不通过
2020-04-21 16:26:16,398 -- [test_projects03.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-21 16:26:16,399 -- [test_projects03.py-->line:62] - ERROR: ['请确保这个字段不能超过 200 个字符。']不等于比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急,断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("{}不等于{},断言不通过".format(excepted[key],res[key]))
AssertionError: ['请确保这个字段不能超过 200 个字符。']不等于比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急比较紧急,断言不通过
2020-04-21 16:26:37,864 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-21 16:26:37,876 -- [test_register_login01.py-->line:63] - ERROR: ['账号或密码错误。']不等于['无法使用提供的认证信息登录。'],断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("{}不等于{},断言不通过".format(excepted[key],res[key]))
AssertionError: ['账号或密码错误。']不等于['无法使用提供的认证信息登录。'],断言不通过
2020-04-21 16:26:39,689 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-21 16:26:39,690 -- [test_register_login01.py-->line:63] - ERROR: ['账号或密码错误。']不等于['无法使用提供的认证信息登录。'],断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("{}不等于{},断言不通过".format(excepted[key],res[key]))
AssertionError: ['账号或密码错误。']不等于['无法使用提供的认证信息登录。'],断言不通过
2020-04-21 16:45:23,767 -- [test_projects03.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-04-21 16:45:23,768 -- [test_projects03.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-21 16:45:47,630 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-04-21 16:45:47,631 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-21 16:45:48,444 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-04-21 16:45:48,448 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-21 16:45:54,630 -- [test_testcases05.py-->line:78] - ERROR: 用例4,用例名称重复,不通过
2020-04-21 16:45:54,631 -- [test_testcases05.py-->line:81] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_testcases05.py", line 70, in test_testcases
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:32:54,594 -- [test_register_login01.py-->line:60] - ERROR: 用例1,用户名重复,不通过
2020-05-07 13:32:54,623 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:32:55,313 -- [test_register_login01.py-->line:60] - ERROR: 用例2,邮箱重复,不通过
2020-05-07 13:32:55,314 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:33:04,697 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-05-07 13:33:04,697 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:33:05,399 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-05-07 13:33:05,401 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:34:15,422 -- [test_interfaces04.py-->line:74] - ERROR: 用例3,接口名称重复,不通过
2020-05-07 13:34:15,430 -- [test_interfaces04.py-->line:77] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_interfaces04.py", line 66, in test_interfaces
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:34:24,336 -- [test_projects03.py-->line:59] - ERROR: 用例2,项目名称重复,不通过
2020-05-07 13:34:24,338 -- [test_projects03.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:34:30,486 -- [test_projects03.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-05-07 13:34:30,488 -- [test_projects03.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:34:48,433 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-05-07 13:34:48,437 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:34:49,477 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-05-07 13:34:49,479 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:34:55,954 -- [test_testcases05.py-->line:78] - ERROR: 用例4,用例名称重复,不通过
2020-05-07 13:34:55,955 -- [test_testcases05.py-->line:81] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_testcases05.py", line 70, in test_testcases
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:36:02,722 -- [test_projects03.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-05-07 13:36:02,723 -- [test_projects03.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:36:14,158 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-05-07 13:36:14,159 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:36:14,853 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-05-07 13:36:14,854 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:36:22,681 -- [test_testcases05.py-->line:78] - ERROR: 用例4,用例名称重复,不通过
2020-05-07 13:36:22,683 -- [test_testcases05.py-->line:81] - ERROR: 断言不通过
Traceback (most recent call last):
  File "F:\py27\py_api_test02\testcases\test_testcases05.py", line 70, in test_testcases
    assert_dict(excepted,res)
  File "F:\py27\py_api_test02\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:39:22,902 -- [test_projects03.py-->line:59] - ERROR: 用例13,描述字段超过200个字符,不通过
2020-05-07 13:39:22,903 -- [test_projects03.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_projects03.py", line 51, in test_projects
    assert_dict(excepted,res)
  File "C:\Users\Administrator\.jenkins\workspace\python_test\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:39:36,107 -- [test_register_login01.py-->line:60] - ERROR: 用例17,账号错误,不通过
2020-05-07 13:39:36,108 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "C:\Users\Administrator\.jenkins\workspace\python_test\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:39:36,921 -- [test_register_login01.py-->line:60] - ERROR: 用例18,密码错误,不通过
2020-05-07 13:39:36,922 -- [test_register_login01.py-->line:63] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_register_login01.py", line 52, in test_register_login
    assert_dict(excepted,res)
  File "C:\Users\Administrator\.jenkins\workspace\python_test\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-05-07 13:39:42,743 -- [test_testcases05.py-->line:78] - ERROR: 用例4,用例名称重复,不通过
2020-05-07 13:39:42,744 -- [test_testcases05.py-->line:81] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\.jenkins\workspace\python_test\testcases\test_testcases05.py", line 70, in test_testcases
    assert_dict(excepted,res)
  File "C:\Users\Administrator\.jenkins\workspace\python_test\common\handle_assert.py", line 23, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
